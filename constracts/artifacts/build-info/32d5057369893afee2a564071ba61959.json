{
	"id": "32d5057369893afee2a564071ba61959",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"constracts/HealthMediToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract HMEDERC20Token is ERC20, ERC20Burnable, Pausable, Ownable(msg.sender) {\n    struct LockInfo {\n        uint256 amount;\n        uint256 releaseTime;\n    }\n\n    uint8 constant private _decimals = 18;\n    uint256 constant private _initial_supply = 10_000_000_000;\n\n    mapping(address => bool) private frozenAccounts;\n    mapping(address => LockInfo[]) private _locks;\n\n    event AccountFrozen(address indexed account);\n    event AccountUnfrozen(address indexed account);\n    // event Locked(address indexed account, uint256 amount, uint256 releaseTime);\n    event LockReleased(address indexed account, uint256 amount);\n\n    // HEALTHMEDI_V7, HMED7\n    constructor(string memory name_, string memory symbol_) ERC20(name_, symbol_) {\n        _mint(msg.sender, _initial_supply * (10**uint256(_decimals)));\n    }\n\n    function _update(address from, address to, uint256 amount) internal override {\n\n        // 발행 및 소각 시에는 잠금 상태를 확인할 필요가 없습니다.\n        if(from != address(0) && to != address(0)) {\n            require(!paused() || msg.sender == owner(), \"Token transfer while paused\");\n\n            // 잠금 상태 확인 로직 추가\n            require(_checkLock(from, amount), \"ERC20Lockable: transfer amount exceeds unlocked balance\");\n        }\n        \n        super._update(from, to, amount);\n    }\n\n    function freeze(address account) public onlyOwner {\n        require(!frozenAccounts[account], \"Account is already frozen\");\n        frozenAccounts[account] = true;\n        emit AccountFrozen(account);\n    }\n\n    function unfreeze(address account) public onlyOwner {\n        require(frozenAccounts[account], \"Account is not frozen\");\n        frozenAccounts[account] = false;\n        emit AccountUnfrozen(account);\n    }\n\n    function lockup(address account, uint256 amount, uint256 releaseTime) public onlyOwner {\n        require(balanceOf(account) >= amount, \"Insufficient balance\");\n        _locks[account].push(LockInfo(amount, releaseTime));\n    }\n\n    function releaseLock(address account) public {\n        uint256 releasableAmount = 0;\n        for (uint256 i = 0; i < _locks[account].length; i++) {\n            if (_locks[account][i].releaseTime <= block.timestamp) {\n                releasableAmount += _locks[account][i].amount;\n                _locks[account][i] = _locks[account][_locks[account].length - 1];\n                _locks[account].pop();\n                i--;\n            }\n        }\n        if (releasableAmount > 0) {\n            emit LockReleased(account, releasableAmount);\n        }\n    }\n\n    function transferWithLockUp(address recipient, uint256 amount, uint256 lockTime) public onlyOwner {\n        _transfer(msg.sender, recipient, amount);\n        lockup(recipient, amount, block.timestamp + lockTime);\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function _checkLock(address from, uint256 amount) private view returns (bool) {\n        uint256 lockedAmount = 0;\n        // 현재 시간 기준으로 잠금 해제되지 않은 토큰의 총량 계산\n        for (uint256 i = 0; i < _locks[from].length; i++) {\n            if (_locks[from][i].releaseTime > block.timestamp) {\n                lockedAmount += _locks[from][i].amount;\n            }\n        }\n        // 잠금 해제된 토큰의 양이 전송하려는 양보다 크거나 같은지 확인\n        return balanceOf(from) - lockedAmount >= amount;\n    }\n\n    function getLockedAmount(address account) public view returns (uint256) {\n        uint256 lockedAmount = 0;\n        for (uint256 i = 0; i < _locks[account].length; i++) {\n            if (_locks[account][i].releaseTime > block.timestamp) {\n                lockedAmount += _locks[account][i].amount;\n            }\n        }\n        return lockedAmount;\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        \n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcfdd5500e1ac15adc86c5dcf0e37829068c814d183aa1c87932d6494133eb385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://438f275b6f4a9d3f49bc45161e2e745c583abf321dc70678af6c8e5396bc8fb7\",\"dweb:/ipfs/Qmd1DKp8ndmpcTmzcFD4BhSAj6VbsGisB5Z6ksT7Q3Jpsn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcfdd5500e1ac15adc86c5dcf0e37829068c814d183aa1c87932d6494133eb385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://438f275b6f4a9d3f49bc45161e2e745c583abf321dc70678af6c8e5396bc8fb7\",\"dweb:/ipfs/Qmd1DKp8ndmpcTmzcFD4BhSAj6VbsGisB5Z6ksT7Q3Jpsn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"constracts/HealthMediToken.sol": {
				"HMEDERC20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AccountFrozen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AccountUnfrozen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LockReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "freeze",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getLockedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "lockup",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "releaseLock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockTime",
									"type": "uint256"
								}
							],
							"name": "transferWithLockUp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "unfreeze",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"constracts/HealthMediToken.sol\":306:4172  contract HMEDERC20Token is ERC20, ERC20Burnable, Pausable, Ownable(msg.sender) {... */\n  mstore(0x40, 0x80)\n    /* \"constracts/HealthMediToken.sol\":964:1120  constructor(string memory name_, string memory symbol_) ERC20(name_, symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"constracts/HealthMediToken.sol\":373:383  msg.sender */\n  caller\n    /* \"constracts/HealthMediToken.sol\":1026:1031  name_ */\n  dup3\n    /* \"constracts/HealthMediToken.sol\":1033:1040  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"constracts/HealthMediToken.sol\":1052:1113  _mint(msg.sender, _initial_supply * (10**uint256(_decimals))) */\n  tag_20\n    /* \"constracts/HealthMediToken.sol\":1058:1068  msg.sender */\n  caller\n    /* \"constracts/HealthMediToken.sol\":508:510  18 */\n  0x12\n    /* \"constracts/HealthMediToken.sol\":1093:1111  uint256(_decimals) */\n  0xff\n  and\n    /* \"constracts/HealthMediToken.sol\":1089:1091  10 */\n  0x0a\n    /* \"constracts/HealthMediToken.sol\":1089:1111  10**uint256(_decimals) */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"constracts/HealthMediToken.sol\":559:573  10_000_000_000 */\n  0x02540be400\n    /* \"constracts/HealthMediToken.sol\":1070:1112  _initial_supply * (10**uint256(_decimals)) */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"constracts/HealthMediToken.sol\":1052:1057  _mint */\n  shl(0x20, tag_25)\n    /* \"constracts/HealthMediToken.sol\":1052:1113  _mint(msg.sender, _initial_supply * (10**uint256(_decimals))) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"constracts/HealthMediToken.sol\":964:1120  constructor(string memory name_, string memory symbol_) ERC20(name_, symbol_) {... */\n  pop\n  pop\n    /* \"constracts/HealthMediToken.sol\":306:4172  contract HMEDERC20Token is ERC20, ERC20Burnable, Pausable, Ownable(msg.sender) {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7730:7938  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7819:7820  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7800:7821  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7800:7807  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7800:7821  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7796:7887  if (account == address(0)) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7873:7874  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7844:7876  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_30\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7796:7887  if (account == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7896:7931  _update(address(0), account, value) */\n  tag_31\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7912:7913  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7923  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7925:7930  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7896:7903  _update */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7896:7931  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7730:7938  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"constracts/HealthMediToken.sol\":1126:1659  function _update(address from, address to, uint256 amount) internal override {... */\ntag_32:\n    /* \"constracts/HealthMediToken.sol\":1323:1324  0 */\n  0x00\n    /* \"constracts/HealthMediToken.sol\":1307:1325  from != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"constracts/HealthMediToken.sol\":1307:1311  from */\n  dup4\n    /* \"constracts/HealthMediToken.sol\":1307:1325  from != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"constracts/HealthMediToken.sol\":1307:1345  from != address(0) && to != address(0) */\n  dup1\n  iszero\n  tag_34\n  jumpi\n  pop\n    /* \"constracts/HealthMediToken.sol\":1343:1344  0 */\n  0x00\n    /* \"constracts/HealthMediToken.sol\":1329:1345  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"constracts/HealthMediToken.sol\":1329:1331  to */\n  dup3\n    /* \"constracts/HealthMediToken.sol\":1329:1345  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"constracts/HealthMediToken.sol\":1307:1345  from != address(0) && to != address(0) */\ntag_34:\n    /* \"constracts/HealthMediToken.sol\":1304:1603  if(from != address(0) && to != address(0)) {... */\n  iszero\n  tag_35\n  jumpi\n    /* \"constracts/HealthMediToken.sol\":1370:1378  paused() */\n  tag_36\n    /* \"constracts/HealthMediToken.sol\":1370:1376  paused */\n  shl(0x20, tag_37)\n    /* \"constracts/HealthMediToken.sol\":1370:1378  paused() */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"constracts/HealthMediToken.sol\":1369:1378  !paused() */\n  iszero\n    /* \"constracts/HealthMediToken.sol\":1369:1403  !paused() || msg.sender == owner() */\n  dup1\n  tag_38\n  jumpi\n  pop\n    /* \"constracts/HealthMediToken.sol\":1396:1403  owner() */\n  tag_39\n    /* \"constracts/HealthMediToken.sol\":1396:1401  owner */\n  shl(0x20, tag_40)\n    /* \"constracts/HealthMediToken.sol\":1396:1403  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"constracts/HealthMediToken.sol\":1382:1403  msg.sender == owner() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"constracts/HealthMediToken.sol\":1382:1392  msg.sender */\n  caller\n    /* \"constracts/HealthMediToken.sol\":1382:1403  msg.sender == owner() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"constracts/HealthMediToken.sol\":1369:1403  !paused() || msg.sender == owner() */\ntag_38:\n    /* \"constracts/HealthMediToken.sol\":1361:1435  require(!paused() || msg.sender == owner(), \"Token transfer while paused\") */\n  tag_41\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_41:\n    /* \"constracts/HealthMediToken.sol\":1508:1532  _checkLock(from, amount) */\n  tag_44\n    /* \"constracts/HealthMediToken.sol\":1519:1523  from */\n  dup4\n    /* \"constracts/HealthMediToken.sol\":1525:1531  amount */\n  dup3\n    /* \"constracts/HealthMediToken.sol\":1508:1518  _checkLock */\n  shl(0x20, tag_45)\n    /* \"constracts/HealthMediToken.sol\":1508:1532  _checkLock(from, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"constracts/HealthMediToken.sol\":1500:1592  require(_checkLock(from, amount), \"ERC20Lockable: transfer amount exceeds unlocked balance\") */\n  tag_46\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_47\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_46:\n    /* \"constracts/HealthMediToken.sol\":1304:1603  if(from != address(0) && to != address(0)) {... */\ntag_35:\n    /* \"constracts/HealthMediToken.sol\":1621:1652  super._update(from, to, amount) */\n  tag_49\n    /* \"constracts/HealthMediToken.sol\":1635:1639  from */\n  dup4\n    /* \"constracts/HealthMediToken.sol\":1641:1643  to */\n  dup4\n    /* \"constracts/HealthMediToken.sol\":1645:1651  amount */\n  dup4\n    /* \"constracts/HealthMediToken.sol\":1621:1634  super._update */\n  shl(0x20, tag_50)\n    /* \"constracts/HealthMediToken.sol\":1621:1652  super._update(from, to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_49:\n    /* \"constracts/HealthMediToken.sol\":1126:1659  function _update(address from, address to, uint256 amount) internal override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"constracts/HealthMediToken.sol\":3240:3808  function _checkLock(address from, uint256 amount) private view returns (bool) {... */\ntag_45:\n    /* \"constracts/HealthMediToken.sol\":3312:3316  bool */\n  0x00\n    /* \"constracts/HealthMediToken.sol\":3328:3348  uint256 lockedAmount */\n  dup1\n    /* \"constracts/HealthMediToken.sol\":3351:3352  0 */\n  0x00\n    /* \"constracts/HealthMediToken.sol\":3328:3352  uint256 lockedAmount = 0 */\n  swap1\n  pop\n    /* \"constracts/HealthMediToken.sol\":3456:3465  uint256 i */\n  0x00\n    /* \"constracts/HealthMediToken.sol\":3451:3647  for (uint256 i = 0; i < _locks[from].length; i++) {... */\ntag_54:\n    /* \"constracts/HealthMediToken.sol\":3475:3481  _locks */\n  0x07\n    /* \"constracts/HealthMediToken.sol\":3475:3487  _locks[from] */\n  0x00\n    /* \"constracts/HealthMediToken.sol\":3482:3486  from */\n  dup7\n    /* \"constracts/HealthMediToken.sol\":3475:3487  _locks[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"constracts/HealthMediToken.sol\":3475:3494  _locks[from].length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"constracts/HealthMediToken.sol\":3471:3472  i */\n  dup2\n    /* \"constracts/HealthMediToken.sol\":3471:3494  i < _locks[from].length */\n  lt\n    /* \"constracts/HealthMediToken.sol\":3451:3647  for (uint256 i = 0; i < _locks[from].length; i++) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"constracts/HealthMediToken.sol\":3549:3564  block.timestamp */\n  timestamp\n    /* \"constracts/HealthMediToken.sol\":3519:3525  _locks */\n  0x07\n    /* \"constracts/HealthMediToken.sol\":3519:3531  _locks[from] */\n  0x00\n    /* \"constracts/HealthMediToken.sol\":3526:3530  from */\n  dup8\n    /* \"constracts/HealthMediToken.sol\":3519:3531  _locks[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"constracts/HealthMediToken.sol\":3532:3533  i */\n  dup3\n    /* \"constracts/HealthMediToken.sol\":3519:3534  _locks[from][i] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_57\n  jumpi\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\ntag_57:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n    /* \"constracts/HealthMediToken.sol\":3519:3546  _locks[from][i].releaseTime */\n  0x01\n  add\n  sload\n    /* \"constracts/HealthMediToken.sol\":3519:3564  _locks[from][i].releaseTime > block.timestamp */\n  gt\n    /* \"constracts/HealthMediToken.sol\":3515:3637  if (_locks[from][i].releaseTime > block.timestamp) {... */\n  iszero\n  tag_61\n  jumpi\n    /* \"constracts/HealthMediToken.sol\":3600:3606  _locks */\n  0x07\n    /* \"constracts/HealthMediToken.sol\":3600:3612  _locks[from] */\n  0x00\n    /* \"constracts/HealthMediToken.sol\":3607:3611  from */\n  dup7\n    /* \"constracts/HealthMediToken.sol\":3600:3612  _locks[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"constracts/HealthMediToken.sol\":3613:3614  i */\n  dup2\n    /* \"constracts/HealthMediToken.sol\":3600:3615  _locks[from][i] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_62\n  jumpi\n  tag_63\n  tag_59\n  jump\t// in\ntag_63:\ntag_62:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n    /* \"constracts/HealthMediToken.sol\":3600:3622  _locks[from][i].amount */\n  0x00\n  add\n  sload\n    /* \"constracts/HealthMediToken.sol\":3584:3622  lockedAmount += _locks[from][i].amount */\n  dup3\n  tag_65\n  swap2\n  swap1\n  tag_66\n  jump\t// in\ntag_65:\n  swap2\n  pop\n    /* \"constracts/HealthMediToken.sol\":3515:3637  if (_locks[from][i].releaseTime > block.timestamp) {... */\ntag_61:\n    /* \"constracts/HealthMediToken.sol\":3496:3499  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"constracts/HealthMediToken.sol\":3451:3647  for (uint256 i = 0; i < _locks[from].length; i++) {... */\n  jump(tag_54)\ntag_55:\n  pop\n    /* \"constracts/HealthMediToken.sol\":3795:3801  amount */\n  dup3\n    /* \"constracts/HealthMediToken.sol\":3779:3791  lockedAmount */\n  dup2\n    /* \"constracts/HealthMediToken.sol\":3761:3776  balanceOf(from) */\n  tag_67\n    /* \"constracts/HealthMediToken.sol\":3771:3775  from */\n  dup7\n    /* \"constracts/HealthMediToken.sol\":3761:3770  balanceOf */\n  shl(0x20, tag_68)\n    /* \"constracts/HealthMediToken.sol\":3761:3776  balanceOf(from) */\n  0x20\n  shr\n  jump\t// in\ntag_67:\n    /* \"constracts/HealthMediToken.sol\":3761:3791  balanceOf(from) - lockedAmount */\n  tag_69\n  swap2\n  swap1\n  tag_70\n  jump\t// in\ntag_69:\n    /* \"constracts/HealthMediToken.sol\":3761:3801  balanceOf(from) - lockedAmount >= amount */\n  lt\n  iszero\n    /* \"constracts/HealthMediToken.sol\":3754:3801  return balanceOf(from) - lockedAmount >= amount */\n  swap2\n  pop\n  pop\n    /* \"constracts/HealthMediToken.sol\":3240:3808  function _checkLock(address from, uint256 amount) private view returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6280:7387  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6385:6386  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6369:6387  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6369:6373  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6369:6387  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6365:6905  if (from == address(0)) {... */\n  tag_72\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6521:6526  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6505:6517  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6505:6526  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_73\n  swap2\n  swap1\n  tag_66\n  jump\t// in\ntag_73:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6365:6905  if (from == address(0)) {... */\n  jump(tag_74)\ntag_72:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6557:6576  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6588  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6593  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6557:6594  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6626:6631  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6612:6623  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6612:6631  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6608:6723  if (fromBalance < value) {... */\n  iszero\n  tag_75\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6683:6687  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6689:6700  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6702:6707  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6658:6708  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_76\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_77\n  jump\t// in\ntag_76:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6608:6723  if (fromBalance < value) {... */\ntag_75:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6875:6880  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6861:6872  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6861:6880  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6843:6852  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6843:6858  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6853:6857  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6843:6858  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6843:6880  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6543:6905  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6365:6905  if (from == address(0)) {... */\ntag_74:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6933:6934  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6935  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6921  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6935  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6915:7340  if (to == address(0)) {... */\n  tag_78\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7103  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7082:7094  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7082:7103  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6915:7340  if (to == address(0)) {... */\n  jump(tag_79)\ntag_78:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7310:7315  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7293:7302  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7293:7306  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7303:7305  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7293:7306  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7293:7315  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6915:7340  if (to == address(0)) {... */\ntag_79:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7370:7372  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7380  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7364:7368  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7380  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7374:7379  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7380  Transfer(from, to, value) */\n  mload(0x40)\n  tag_80\n  swap2\n  swap1\n  tag_81\n  jump\t// in\ntag_80:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6280:7387  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\ntag_68:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_83:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_84:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_85:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_86:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_87:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_88:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_89:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_90:\n    /* \"#utility.yul\":957:984   */\n  tag_137\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_88\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_139\n  tag_89\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":1030:1118   */\ntag_138:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_91:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_141\n  tag_83\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_142\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_90\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_92:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_145\n  tag_89\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":1434:1490   */\ntag_144:\n    /* \"#utility.yul\":1508:1537   */\n  tag_146\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_88\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_93:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_148:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_148)\ntag_150:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_94:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_152\n    /* \"#utility.yul\":1992:2041   */\n  tag_153\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_92\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":1976:2042   */\n  tag_91\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_155\n  tag_87\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":2117:2229   */\ntag_154:\n    /* \"#utility.yul\":2238:2290   */\n  tag_156\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_93\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_95:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_159\n  tag_86\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":2399:2521   */\ntag_158:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_160\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_94\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_163\n  tag_84\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":2801:2920   */\ntag_162:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_165\n  tag_85\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":2996:3113   */\ntag_164:\n    /* \"#utility.yul\":3137:3211   */\n  tag_166\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_95\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_168\n  tag_85\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":3298:3415   */\ntag_167:\n    /* \"#utility.yul\":3439:3513   */\n  tag_169\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_95\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_96:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_97:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_98:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_173\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_173:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_174\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_175\n  tag_97\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":4057:4141   */\ntag_174:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_99:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_100:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_101:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_102:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_180\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_101\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":4772:4811   */\n  tag_181\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_101\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_103:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_104:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_105:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_185\n    /* \"#utility.yul\":5161:5195   */\n  tag_186\n    /* \"#utility.yul\":5170:5194   */\n  tag_187\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_103\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":5161:5195   */\n  tag_104\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":5143:5196   */\n  tag_103\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_106:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_107:\n    /* \"#utility.yul\":5399:5438   */\n  tag_190\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_105\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":5460:5551   */\n  tag_191\n    /* \"#utility.yul\":5509:5550   */\n  tag_192\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_102\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_108:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_109:\n    /* \"#utility.yul\":5720:5752   */\n  tag_195\n  tag_108\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":5761:5826   */\n  tag_196\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_107\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_110:\n    /* \"#utility.yul\":5898:6018   */\ntag_198:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_200\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_201\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_109\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_198)\ntag_200:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_111:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_204\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_99\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":6249:6278   */\n  tag_205\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_100\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_206\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_206:\n    /* \"#utility.yul\":6476:6556   */\n  tag_207\n    /* \"#utility.yul\":6532:6554   */\n  tag_208\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_100\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_110\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_203:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_112:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_113:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_211\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_112\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_114:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_213\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_113\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_10:\n    /* \"#utility.yul\":7293:7330   */\n  tag_215\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_96\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_217\n  tag_89\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":7381:7437   */\ntag_216:\n    /* \"#utility.yul\":7461:7499   */\n  tag_218\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_98\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":7546:7613   */\n  tag_219\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_111\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_221\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_222\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_222:\n    /* \"#utility.yul\":8487:8554   */\n  tag_223\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_114\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_220)\n    /* \"#utility.yul\":7708:8326   */\ntag_221:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_224\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_99\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_225:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_227\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_225)\ntag_227:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_228\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_229\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_113\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_228:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_220:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8577:8703   */\ntag_115:\n    /* \"#utility.yul\":8614:8621   */\n  0x00\n    /* \"#utility.yul\":8654:8696   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8647:8652   */\n  dup3\n    /* \"#utility.yul\":8643:8697   */\n  and\n    /* \"#utility.yul\":8632:8697   */\n  swap1\n  pop\n    /* \"#utility.yul\":8577:8703   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8709:8805   */\ntag_116:\n    /* \"#utility.yul\":8746:8753   */\n  0x00\n    /* \"#utility.yul\":8775:8799   */\n  tag_232\n    /* \"#utility.yul\":8793:8798   */\n  dup3\n    /* \"#utility.yul\":8775:8799   */\n  tag_115\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":8764:8799   */\n  swap1\n  pop\n    /* \"#utility.yul\":8709:8805   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8811:8929   */\ntag_117:\n    /* \"#utility.yul\":8898:8922   */\n  tag_234\n    /* \"#utility.yul\":8916:8921   */\n  dup2\n    /* \"#utility.yul\":8898:8922   */\n  tag_116\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":8893:8896   */\n  dup3\n    /* \"#utility.yul\":8886:8923   */\n  mstore\n    /* \"#utility.yul\":8811:8929   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8935:9157   */\ntag_16:\n    /* \"#utility.yul\":9028:9032   */\n  0x00\n    /* \"#utility.yul\":9066:9068   */\n  0x20\n    /* \"#utility.yul\":9055:9064   */\n  dup3\n    /* \"#utility.yul\":9051:9069   */\n  add\n    /* \"#utility.yul\":9043:9069   */\n  swap1\n  pop\n    /* \"#utility.yul\":9079:9150   */\n  tag_236\n    /* \"#utility.yul\":9147:9148   */\n  0x00\n    /* \"#utility.yul\":9136:9145   */\n  dup4\n    /* \"#utility.yul\":9132:9149   */\n  add\n    /* \"#utility.yul\":9123:9129   */\n  dup5\n    /* \"#utility.yul\":9079:9150   */\n  tag_117\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":8935:9157   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9163:9343   */\ntag_118:\n    /* \"#utility.yul\":9211:9288   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9208:9209   */\n  0x00\n    /* \"#utility.yul\":9201:9289   */\n  mstore\n    /* \"#utility.yul\":9308:9312   */\n  0x11\n    /* \"#utility.yul\":9305:9306   */\n  0x04\n    /* \"#utility.yul\":9298:9313   */\n  mstore\n    /* \"#utility.yul\":9332:9336   */\n  0x24\n    /* \"#utility.yul\":9329:9330   */\n  0x00\n    /* \"#utility.yul\":9322:9337   */\n  revert\n    /* \"#utility.yul\":9349:9451   */\ntag_119:\n    /* \"#utility.yul\":9391:9399   */\n  0x00\n    /* \"#utility.yul\":9438:9443   */\n  dup2\n    /* \"#utility.yul\":9435:9436   */\n  0x01\n    /* \"#utility.yul\":9431:9444   */\n  shr\n    /* \"#utility.yul\":9410:9444   */\n  swap1\n  pop\n    /* \"#utility.yul\":9349:9451   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9457:10305   */\ntag_120:\n    /* \"#utility.yul\":9518:9523   */\n  0x00\n    /* \"#utility.yul\":9525:9529   */\n  dup1\n    /* \"#utility.yul\":9549:9555   */\n  dup3\n    /* \"#utility.yul\":9540:9555   */\n  swap2\n  pop\n    /* \"#utility.yul\":9573:9578   */\n  dup4\n    /* \"#utility.yul\":9564:9578   */\n  swap1\n  pop\n    /* \"#utility.yul\":9587:10299   */\ntag_240:\n    /* \"#utility.yul\":9608:9609   */\n  0x01\n    /* \"#utility.yul\":9598:9606   */\n  dup6\n    /* \"#utility.yul\":9595:9610   */\n  gt\n    /* \"#utility.yul\":9587:10299   */\n  iszero\n  tag_242\n  jumpi\n    /* \"#utility.yul\":9703:9707   */\n  dup1\n    /* \"#utility.yul\":9698:9701   */\n  dup7\n    /* \"#utility.yul\":9694:9708   */\n  div\n    /* \"#utility.yul\":9688:9692   */\n  dup2\n    /* \"#utility.yul\":9685:9709   */\n  gt\n    /* \"#utility.yul\":9682:9732   */\n  iszero\n  tag_243\n  jumpi\n    /* \"#utility.yul\":9712:9730   */\n  tag_244\n  tag_118\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":9682:9732   */\ntag_243:\n    /* \"#utility.yul\":9762:9763   */\n  0x01\n    /* \"#utility.yul\":9752:9760   */\n  dup6\n    /* \"#utility.yul\":9748:9764   */\n  and\n    /* \"#utility.yul\":9745:10196   */\n  iszero\n  tag_245\n  jumpi\n    /* \"#utility.yul\":10177:10181   */\n  dup1\n    /* \"#utility.yul\":10170:10175   */\n  dup3\n    /* \"#utility.yul\":10166:10182   */\n  mul\n    /* \"#utility.yul\":10157:10182   */\n  swap2\n  pop\n    /* \"#utility.yul\":9745:10196   */\ntag_245:\n    /* \"#utility.yul\":10227:10231   */\n  dup1\n    /* \"#utility.yul\":10221:10225   */\n  dup2\n    /* \"#utility.yul\":10217:10232   */\n  mul\n    /* \"#utility.yul\":10209:10232   */\n  swap1\n  pop\n    /* \"#utility.yul\":10257:10289   */\n  tag_246\n    /* \"#utility.yul\":10280:10288   */\n  dup6\n    /* \"#utility.yul\":10257:10289   */\n  tag_119\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":10245:10289   */\n  swap5\n  pop\n    /* \"#utility.yul\":9587:10299   */\n  jump(tag_240)\ntag_242:\n    /* \"#utility.yul\":9457:10305   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10311:11384   */\ntag_121:\n    /* \"#utility.yul\":10365:10370   */\n  0x00\n    /* \"#utility.yul\":10556:10564   */\n  dup3\n    /* \"#utility.yul\":10546:10586   */\n  tag_248\n  jumpi\n    /* \"#utility.yul\":10577:10578   */\n  0x01\n    /* \"#utility.yul\":10568:10578   */\n  swap1\n  pop\n    /* \"#utility.yul\":10579:10584   */\n  jump(tag_247)\n    /* \"#utility.yul\":10546:10586   */\ntag_248:\n    /* \"#utility.yul\":10605:10609   */\n  dup2\n    /* \"#utility.yul\":10595:10631   */\n  tag_249\n  jumpi\n    /* \"#utility.yul\":10622:10623   */\n  0x00\n    /* \"#utility.yul\":10613:10623   */\n  swap1\n  pop\n    /* \"#utility.yul\":10624:10629   */\n  jump(tag_247)\n    /* \"#utility.yul\":10595:10631   */\ntag_249:\n    /* \"#utility.yul\":10691:10695   */\n  dup2\n    /* \"#utility.yul\":10739:10740   */\n  0x01\n    /* \"#utility.yul\":10734:10761   */\n  dup2\n  eq\n  tag_251\n  jumpi\n    /* \"#utility.yul\":10775:10776   */\n  0x02\n    /* \"#utility.yul\":10770:10961   */\n  dup2\n  eq\n  tag_252\n  jumpi\n    /* \"#utility.yul\":10684:10961   */\n  jump(tag_250)\n    /* \"#utility.yul\":10734:10761   */\ntag_251:\n    /* \"#utility.yul\":10752:10753   */\n  0x01\n    /* \"#utility.yul\":10743:10753   */\n  swap2\n  pop\n    /* \"#utility.yul\":10754:10759   */\n  pop\n  jump(tag_247)\n    /* \"#utility.yul\":10770:10961   */\ntag_252:\n    /* \"#utility.yul\":10815:10818   */\n  0xff\n    /* \"#utility.yul\":10805:10813   */\n  dup5\n    /* \"#utility.yul\":10802:10819   */\n  gt\n    /* \"#utility.yul\":10799:10842   */\n  iszero\n  tag_253\n  jumpi\n    /* \"#utility.yul\":10822:10840   */\n  tag_254\n  tag_118\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":10799:10842   */\ntag_253:\n    /* \"#utility.yul\":10871:10879   */\n  dup4\n    /* \"#utility.yul\":10868:10869   */\n  0x02\n    /* \"#utility.yul\":10864:10880   */\n  exp\n    /* \"#utility.yul\":10855:10880   */\n  swap2\n  pop\n    /* \"#utility.yul\":10906:10909   */\n  dup5\n    /* \"#utility.yul\":10899:10904   */\n  dup3\n    /* \"#utility.yul\":10896:10910   */\n  gt\n    /* \"#utility.yul\":10893:10933   */\n  iszero\n  tag_255\n  jumpi\n    /* \"#utility.yul\":10913:10931   */\n  tag_256\n  tag_118\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":10893:10933   */\ntag_255:\n    /* \"#utility.yul\":10946:10951   */\n  pop\n  jump(tag_247)\n    /* \"#utility.yul\":10684:10961   */\ntag_250:\n  pop\n    /* \"#utility.yul\":11070:11072   */\n  0x20\n    /* \"#utility.yul\":11060:11068   */\n  dup4\n    /* \"#utility.yul\":11057:11073   */\n  lt\n    /* \"#utility.yul\":11051:11054   */\n  0x0133\n    /* \"#utility.yul\":11045:11049   */\n  dup4\n    /* \"#utility.yul\":11042:11055   */\n  lt\n    /* \"#utility.yul\":11038:11074   */\n  and\n    /* \"#utility.yul\":11020:11022   */\n  0x4e\n    /* \"#utility.yul\":11010:11018   */\n  dup5\n    /* \"#utility.yul\":11007:11023   */\n  lt\n    /* \"#utility.yul\":11002:11004   */\n  0x0b\n    /* \"#utility.yul\":10996:11000   */\n  dup5\n    /* \"#utility.yul\":10993:11005   */\n  lt\n    /* \"#utility.yul\":10989:11024   */\n  and\n    /* \"#utility.yul\":10973:11084   */\n  or\n    /* \"#utility.yul\":10970:11216   */\n  iszero\n  tag_257\n  jumpi\n    /* \"#utility.yul\":11126:11134   */\n  dup3\n    /* \"#utility.yul\":11120:11124   */\n  dup3\n    /* \"#utility.yul\":11116:11135   */\n  exp\n    /* \"#utility.yul\":11107:11135   */\n  swap1\n  pop\n    /* \"#utility.yul\":11161:11164   */\n  dup4\n    /* \"#utility.yul\":11154:11159   */\n  dup2\n    /* \"#utility.yul\":11151:11165   */\n  gt\n    /* \"#utility.yul\":11148:11188   */\n  iszero\n  tag_258\n  jumpi\n    /* \"#utility.yul\":11168:11186   */\n  tag_259\n  tag_118\n  jump\t// in\ntag_259:\n    /* \"#utility.yul\":11148:11188   */\ntag_258:\n    /* \"#utility.yul\":11201:11206   */\n  jump(tag_247)\n    /* \"#utility.yul\":10970:11216   */\ntag_257:\n    /* \"#utility.yul\":11241:11283   */\n  tag_260\n    /* \"#utility.yul\":11279:11282   */\n  dup5\n    /* \"#utility.yul\":11269:11277   */\n  dup5\n    /* \"#utility.yul\":11263:11267   */\n  dup5\n    /* \"#utility.yul\":11260:11261   */\n  0x01\n    /* \"#utility.yul\":11241:11283   */\n  tag_120\n  jump\t// in\ntag_260:\n    /* \"#utility.yul\":11226:11283   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11315:11319   */\n  dup2\n    /* \"#utility.yul\":11310:11313   */\n  dup5\n    /* \"#utility.yul\":11306:11320   */\n  div\n    /* \"#utility.yul\":11299:11304   */\n  dup2\n    /* \"#utility.yul\":11296:11321   */\n  gt\n    /* \"#utility.yul\":11293:11344   */\n  iszero\n  tag_261\n  jumpi\n    /* \"#utility.yul\":11324:11342   */\n  tag_262\n  tag_118\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":11293:11344   */\ntag_261:\n    /* \"#utility.yul\":11373:11377   */\n  dup2\n    /* \"#utility.yul\":11366:11371   */\n  dup2\n    /* \"#utility.yul\":11362:11378   */\n  mul\n    /* \"#utility.yul\":11353:11378   */\n  swap1\n  pop\n    /* \"#utility.yul\":10311:11384   */\ntag_247:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11390:11675   */\ntag_22:\n    /* \"#utility.yul\":11450:11455   */\n  0x00\n    /* \"#utility.yul\":11474:11497   */\n  tag_264\n    /* \"#utility.yul\":11492:11496   */\n  dup3\n    /* \"#utility.yul\":11474:11497   */\n  tag_103\n  jump\t// in\ntag_264:\n    /* \"#utility.yul\":11466:11497   */\n  swap2\n  pop\n    /* \"#utility.yul\":11518:11545   */\n  tag_265\n    /* \"#utility.yul\":11536:11544   */\n  dup4\n    /* \"#utility.yul\":11518:11545   */\n  tag_103\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":11506:11545   */\n  swap3\n  pop\n    /* \"#utility.yul\":11564:11668   */\n  tag_266\n    /* \"#utility.yul\":11601:11667   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11591:11599   */\n  dup5\n    /* \"#utility.yul\":11585:11589   */\n  dup5\n    /* \"#utility.yul\":11564:11668   */\n  tag_121\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":11555:11668   */\n  swap1\n  pop\n    /* \"#utility.yul\":11390:11675   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11681:12091   */\ntag_24:\n    /* \"#utility.yul\":11721:11728   */\n  0x00\n    /* \"#utility.yul\":11744:11764   */\n  tag_268\n    /* \"#utility.yul\":11762:11763   */\n  dup3\n    /* \"#utility.yul\":11744:11764   */\n  tag_103\n  jump\t// in\ntag_268:\n    /* \"#utility.yul\":11739:11764   */\n  swap2\n  pop\n    /* \"#utility.yul\":11778:11798   */\n  tag_269\n    /* \"#utility.yul\":11796:11797   */\n  dup4\n    /* \"#utility.yul\":11778:11798   */\n  tag_103\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":11773:11798   */\n  swap3\n  pop\n    /* \"#utility.yul\":11833:11834   */\n  dup3\n    /* \"#utility.yul\":11830:11831   */\n  dup3\n    /* \"#utility.yul\":11826:11835   */\n  mul\n    /* \"#utility.yul\":11855:11885   */\n  tag_270\n    /* \"#utility.yul\":11873:11884   */\n  dup2\n    /* \"#utility.yul\":11855:11885   */\n  tag_103\n  jump\t// in\ntag_270:\n    /* \"#utility.yul\":11844:11885   */\n  swap2\n  pop\n    /* \"#utility.yul\":12034:12035   */\n  dup3\n    /* \"#utility.yul\":12025:12032   */\n  dup3\n    /* \"#utility.yul\":12021:12036   */\n  div\n    /* \"#utility.yul\":12018:12019   */\n  dup5\n    /* \"#utility.yul\":12015:12037   */\n  eq\n    /* \"#utility.yul\":11995:11996   */\n  dup4\n    /* \"#utility.yul\":11988:11997   */\n  iszero\n    /* \"#utility.yul\":11968:12051   */\n  or\n    /* \"#utility.yul\":11945:12084   */\n  tag_271\n  jumpi\n    /* \"#utility.yul\":12064:12082   */\n  tag_272\n  tag_118\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":11945:12084   */\ntag_271:\n    /* \"#utility.yul\":11729:12091   */\n  pop\n    /* \"#utility.yul\":11681:12091   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12097:12266   */\ntag_122:\n    /* \"#utility.yul\":12181:12192   */\n  0x00\n    /* \"#utility.yul\":12215:12221   */\n  dup3\n    /* \"#utility.yul\":12210:12213   */\n  dup3\n    /* \"#utility.yul\":12203:12222   */\n  mstore\n    /* \"#utility.yul\":12255:12259   */\n  0x20\n    /* \"#utility.yul\":12250:12253   */\n  dup3\n    /* \"#utility.yul\":12246:12260   */\n  add\n    /* \"#utility.yul\":12231:12260   */\n  swap1\n  pop\n    /* \"#utility.yul\":12097:12266   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12272:12449   */\ntag_123:\n    /* \"#utility.yul\":12412:12441   */\n  0x546f6b656e207472616e73666572207768696c65207061757365640000000000\n    /* \"#utility.yul\":12408:12409   */\n  0x00\n    /* \"#utility.yul\":12400:12406   */\n  dup3\n    /* \"#utility.yul\":12396:12410   */\n  add\n    /* \"#utility.yul\":12389:12442   */\n  mstore\n    /* \"#utility.yul\":12272:12449   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12455:12821   */\ntag_124:\n    /* \"#utility.yul\":12597:12600   */\n  0x00\n    /* \"#utility.yul\":12618:12685   */\n  tag_276\n    /* \"#utility.yul\":12682:12684   */\n  0x1b\n    /* \"#utility.yul\":12677:12680   */\n  dup4\n    /* \"#utility.yul\":12618:12685   */\n  tag_122\n  jump\t// in\ntag_276:\n    /* \"#utility.yul\":12611:12685   */\n  swap2\n  pop\n    /* \"#utility.yul\":12694:12787   */\n  tag_277\n    /* \"#utility.yul\":12783:12786   */\n  dup3\n    /* \"#utility.yul\":12694:12787   */\n  tag_123\n  jump\t// in\ntag_277:\n    /* \"#utility.yul\":12812:12814   */\n  0x20\n    /* \"#utility.yul\":12807:12810   */\n  dup3\n    /* \"#utility.yul\":12803:12815   */\n  add\n    /* \"#utility.yul\":12796:12815   */\n  swap1\n  pop\n    /* \"#utility.yul\":12455:12821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12827:13246   */\ntag_43:\n    /* \"#utility.yul\":12993:12997   */\n  0x00\n    /* \"#utility.yul\":13031:13033   */\n  0x20\n    /* \"#utility.yul\":13020:13029   */\n  dup3\n    /* \"#utility.yul\":13016:13034   */\n  add\n    /* \"#utility.yul\":13008:13034   */\n  swap1\n  pop\n    /* \"#utility.yul\":13080:13089   */\n  dup2\n    /* \"#utility.yul\":13074:13078   */\n  dup2\n    /* \"#utility.yul\":13070:13090   */\n  sub\n    /* \"#utility.yul\":13066:13067   */\n  0x00\n    /* \"#utility.yul\":13055:13064   */\n  dup4\n    /* \"#utility.yul\":13051:13068   */\n  add\n    /* \"#utility.yul\":13044:13091   */\n  mstore\n    /* \"#utility.yul\":13108:13239   */\n  tag_279\n    /* \"#utility.yul\":13234:13238   */\n  dup2\n    /* \"#utility.yul\":13108:13239   */\n  tag_124\n  jump\t// in\ntag_279:\n    /* \"#utility.yul\":13100:13239   */\n  swap1\n  pop\n    /* \"#utility.yul\":12827:13246   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13252:13494   */\ntag_125:\n    /* \"#utility.yul\":13392:13426   */\n  0x45524332304c6f636b61626c653a207472616e7366657220616d6f756e742065\n    /* \"#utility.yul\":13388:13389   */\n  0x00\n    /* \"#utility.yul\":13380:13386   */\n  dup3\n    /* \"#utility.yul\":13376:13390   */\n  add\n    /* \"#utility.yul\":13369:13427   */\n  mstore\n    /* \"#utility.yul\":13461:13486   */\n  0x78636565647320756e6c6f636b65642062616c616e6365000000000000000000\n    /* \"#utility.yul\":13456:13458   */\n  0x20\n    /* \"#utility.yul\":13448:13454   */\n  dup3\n    /* \"#utility.yul\":13444:13459   */\n  add\n    /* \"#utility.yul\":13437:13487   */\n  mstore\n    /* \"#utility.yul\":13252:13494   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13500:13866   */\ntag_126:\n    /* \"#utility.yul\":13642:13645   */\n  0x00\n    /* \"#utility.yul\":13663:13730   */\n  tag_282\n    /* \"#utility.yul\":13727:13729   */\n  0x37\n    /* \"#utility.yul\":13722:13725   */\n  dup4\n    /* \"#utility.yul\":13663:13730   */\n  tag_122\n  jump\t// in\ntag_282:\n    /* \"#utility.yul\":13656:13730   */\n  swap2\n  pop\n    /* \"#utility.yul\":13739:13832   */\n  tag_283\n    /* \"#utility.yul\":13828:13831   */\n  dup3\n    /* \"#utility.yul\":13739:13832   */\n  tag_125\n  jump\t// in\ntag_283:\n    /* \"#utility.yul\":13857:13859   */\n  0x40\n    /* \"#utility.yul\":13852:13855   */\n  dup3\n    /* \"#utility.yul\":13848:13860   */\n  add\n    /* \"#utility.yul\":13841:13860   */\n  swap1\n  pop\n    /* \"#utility.yul\":13500:13866   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13872:14291   */\ntag_48:\n    /* \"#utility.yul\":14038:14042   */\n  0x00\n    /* \"#utility.yul\":14076:14078   */\n  0x20\n    /* \"#utility.yul\":14065:14074   */\n  dup3\n    /* \"#utility.yul\":14061:14079   */\n  add\n    /* \"#utility.yul\":14053:14079   */\n  swap1\n  pop\n    /* \"#utility.yul\":14125:14134   */\n  dup2\n    /* \"#utility.yul\":14119:14123   */\n  dup2\n    /* \"#utility.yul\":14115:14135   */\n  sub\n    /* \"#utility.yul\":14111:14112   */\n  0x00\n    /* \"#utility.yul\":14100:14109   */\n  dup4\n    /* \"#utility.yul\":14096:14113   */\n  add\n    /* \"#utility.yul\":14089:14136   */\n  mstore\n    /* \"#utility.yul\":14153:14284   */\n  tag_285\n    /* \"#utility.yul\":14279:14283   */\n  dup2\n    /* \"#utility.yul\":14153:14284   */\n  tag_126\n  jump\t// in\ntag_285:\n    /* \"#utility.yul\":14145:14284   */\n  swap1\n  pop\n    /* \"#utility.yul\":13872:14291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14297:14477   */\ntag_59:\n    /* \"#utility.yul\":14345:14422   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":14342:14343   */\n  0x00\n    /* \"#utility.yul\":14335:14423   */\n  mstore\n    /* \"#utility.yul\":14442:14446   */\n  0x32\n    /* \"#utility.yul\":14439:14440   */\n  0x04\n    /* \"#utility.yul\":14432:14447   */\n  mstore\n    /* \"#utility.yul\":14466:14470   */\n  0x24\n    /* \"#utility.yul\":14463:14464   */\n  0x00\n    /* \"#utility.yul\":14456:14471   */\n  revert\n    /* \"#utility.yul\":14483:14674   */\ntag_66:\n    /* \"#utility.yul\":14523:14526   */\n  0x00\n    /* \"#utility.yul\":14542:14562   */\n  tag_288\n    /* \"#utility.yul\":14560:14561   */\n  dup3\n    /* \"#utility.yul\":14542:14562   */\n  tag_103\n  jump\t// in\ntag_288:\n    /* \"#utility.yul\":14537:14562   */\n  swap2\n  pop\n    /* \"#utility.yul\":14576:14596   */\n  tag_289\n    /* \"#utility.yul\":14594:14595   */\n  dup4\n    /* \"#utility.yul\":14576:14596   */\n  tag_103\n  jump\t// in\ntag_289:\n    /* \"#utility.yul\":14571:14596   */\n  swap3\n  pop\n    /* \"#utility.yul\":14619:14620   */\n  dup3\n    /* \"#utility.yul\":14616:14617   */\n  dup3\n    /* \"#utility.yul\":14612:14621   */\n  add\n    /* \"#utility.yul\":14605:14621   */\n  swap1\n  pop\n    /* \"#utility.yul\":14640:14643   */\n  dup1\n    /* \"#utility.yul\":14637:14638   */\n  dup3\n    /* \"#utility.yul\":14634:14644   */\n  gt\n    /* \"#utility.yul\":14631:14667   */\n  iszero\n  tag_290\n  jumpi\n    /* \"#utility.yul\":14647:14665   */\n  tag_291\n  tag_118\n  jump\t// in\ntag_291:\n    /* \"#utility.yul\":14631:14667   */\ntag_290:\n    /* \"#utility.yul\":14483:14674   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14680:14874   */\ntag_70:\n    /* \"#utility.yul\":14720:14724   */\n  0x00\n    /* \"#utility.yul\":14740:14760   */\n  tag_293\n    /* \"#utility.yul\":14758:14759   */\n  dup3\n    /* \"#utility.yul\":14740:14760   */\n  tag_103\n  jump\t// in\ntag_293:\n    /* \"#utility.yul\":14735:14760   */\n  swap2\n  pop\n    /* \"#utility.yul\":14774:14794   */\n  tag_294\n    /* \"#utility.yul\":14792:14793   */\n  dup4\n    /* \"#utility.yul\":14774:14794   */\n  tag_103\n  jump\t// in\ntag_294:\n    /* \"#utility.yul\":14769:14794   */\n  swap3\n  pop\n    /* \"#utility.yul\":14818:14819   */\n  dup3\n    /* \"#utility.yul\":14815:14816   */\n  dup3\n    /* \"#utility.yul\":14811:14820   */\n  sub\n    /* \"#utility.yul\":14803:14820   */\n  swap1\n  pop\n    /* \"#utility.yul\":14842:14843   */\n  dup2\n    /* \"#utility.yul\":14836:14840   */\n  dup2\n    /* \"#utility.yul\":14833:14844   */\n  gt\n    /* \"#utility.yul\":14830:14867   */\n  iszero\n  tag_295\n  jumpi\n    /* \"#utility.yul\":14847:14865   */\n  tag_296\n  tag_118\n  jump\t// in\ntag_296:\n    /* \"#utility.yul\":14830:14867   */\ntag_295:\n    /* \"#utility.yul\":14680:14874   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14880:14998   */\ntag_127:\n    /* \"#utility.yul\":14967:14991   */\n  tag_298\n    /* \"#utility.yul\":14985:14990   */\n  dup2\n    /* \"#utility.yul\":14967:14991   */\n  tag_103\n  jump\t// in\ntag_298:\n    /* \"#utility.yul\":14962:14965   */\n  dup3\n    /* \"#utility.yul\":14955:14992   */\n  mstore\n    /* \"#utility.yul\":14880:14998   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15004:15446   */\ntag_77:\n    /* \"#utility.yul\":15153:15157   */\n  0x00\n    /* \"#utility.yul\":15191:15193   */\n  0x60\n    /* \"#utility.yul\":15180:15189   */\n  dup3\n    /* \"#utility.yul\":15176:15194   */\n  add\n    /* \"#utility.yul\":15168:15194   */\n  swap1\n  pop\n    /* \"#utility.yul\":15204:15275   */\n  tag_300\n    /* \"#utility.yul\":15272:15273   */\n  0x00\n    /* \"#utility.yul\":15261:15270   */\n  dup4\n    /* \"#utility.yul\":15257:15274   */\n  add\n    /* \"#utility.yul\":15248:15254   */\n  dup7\n    /* \"#utility.yul\":15204:15275   */\n  tag_117\n  jump\t// in\ntag_300:\n    /* \"#utility.yul\":15285:15357   */\n  tag_301\n    /* \"#utility.yul\":15353:15355   */\n  0x20\n    /* \"#utility.yul\":15342:15351   */\n  dup4\n    /* \"#utility.yul\":15338:15356   */\n  add\n    /* \"#utility.yul\":15329:15335   */\n  dup6\n    /* \"#utility.yul\":15285:15357   */\n  tag_127\n  jump\t// in\ntag_301:\n    /* \"#utility.yul\":15367:15439   */\n  tag_302\n    /* \"#utility.yul\":15435:15437   */\n  0x40\n    /* \"#utility.yul\":15424:15433   */\n  dup4\n    /* \"#utility.yul\":15420:15438   */\n  add\n    /* \"#utility.yul\":15411:15417   */\n  dup5\n    /* \"#utility.yul\":15367:15439   */\n  tag_127\n  jump\t// in\ntag_302:\n    /* \"#utility.yul\":15004:15446   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15452:15674   */\ntag_81:\n    /* \"#utility.yul\":15545:15549   */\n  0x00\n    /* \"#utility.yul\":15583:15585   */\n  0x20\n    /* \"#utility.yul\":15572:15581   */\n  dup3\n    /* \"#utility.yul\":15568:15586   */\n  add\n    /* \"#utility.yul\":15560:15586   */\n  swap1\n  pop\n    /* \"#utility.yul\":15596:15667   */\n  tag_304\n    /* \"#utility.yul\":15664:15665   */\n  0x00\n    /* \"#utility.yul\":15653:15662   */\n  dup4\n    /* \"#utility.yul\":15649:15666   */\n  add\n    /* \"#utility.yul\":15640:15646   */\n  dup5\n    /* \"#utility.yul\":15596:15667   */\n  tag_127\n  jump\t// in\ntag_304:\n    /* \"#utility.yul\":15452:15674   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"constracts/HealthMediToken.sol\":306:4172  contract HMEDERC20Token is ERC20, ERC20Burnable, Pausable, Ownable(msg.sender) {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"constracts/HealthMediToken.sol\":306:4172  contract HMEDERC20Token is ERC20, ERC20Burnable, Pausable, Ownable(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x929ec537\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x929ec537\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd1c46916\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8d1fdf2f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x38b82092\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x38b82092\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x45c8b1a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5e1372f4\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"constracts/HealthMediToken.sol\":2882:3100  function transferWithLockUp(address recipient, uint256 amount, uint256 lockTime) public onlyOwner {... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"constracts/HealthMediToken.sol\":3171:3234  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"constracts/HealthMediToken.sol\":1877:2083  function unfreeze(address account) public onlyOwner {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"constracts/HealthMediToken.sol\":2089:2315  function lockup(address account, uint256 amount, uint256 releaseTime) public onlyOwner {... */\n    tag_13:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"constracts/HealthMediToken.sol\":3106:3165  function pause() public onlyOwner {... */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \"constracts/HealthMediToken.sol\":1665:1871  function freeze(address account) public onlyOwner {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"constracts/HealthMediToken.sol\":3814:4170  function getLockedAmount(address account) public view returns (uint256) {... */\n    tag_20:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"constracts/HealthMediToken.sol\":2321:2876  function releaseLock(address account) public {... */\n    tag_23:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_114\n      jump\t// in\n    tag_115:\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_117\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_116)\n    tag_117:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_118:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"constracts/HealthMediToken.sol\":2882:3100  function transferWithLockUp(address recipient, uint256 amount, uint256 lockTime) public onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"constracts/HealthMediToken.sol\":2990:3030  _transfer(msg.sender, recipient, amount) */\n      tag_136\n        /* \"constracts/HealthMediToken.sol\":3000:3010  msg.sender */\n      caller\n        /* \"constracts/HealthMediToken.sol\":3012:3021  recipient */\n      dup5\n        /* \"constracts/HealthMediToken.sol\":3023:3029  amount */\n      dup5\n        /* \"constracts/HealthMediToken.sol\":2990:2999  _transfer */\n      tag_130\n        /* \"constracts/HealthMediToken.sol\":2990:3030  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_136:\n        /* \"constracts/HealthMediToken.sol\":3040:3093  lockup(recipient, amount, block.timestamp + lockTime) */\n      tag_137\n        /* \"constracts/HealthMediToken.sol\":3047:3056  recipient */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":3058:3064  amount */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":3084:3092  lockTime */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":3066:3081  block.timestamp */\n      timestamp\n        /* \"constracts/HealthMediToken.sol\":3066:3092  block.timestamp + lockTime */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"constracts/HealthMediToken.sol\":3040:3046  lockup */\n      tag_71\n        /* \"constracts/HealthMediToken.sol\":3040:3093  lockup(recipient, amount, block.timestamp + lockTime) */\n      jump\t// in\n    tag_137:\n        /* \"constracts/HealthMediToken.sol\":2882:3100  function transferWithLockUp(address recipient, uint256 amount, uint256 lockTime) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"constracts/HealthMediToken.sol\":3171:3234  function unpause() public onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"constracts/HealthMediToken.sol\":3217:3227  _unpause() */\n      tag_143\n        /* \"constracts/HealthMediToken.sol\":3217:3225  _unpause */\n      tag_144\n        /* \"constracts/HealthMediToken.sol\":3217:3227  _unpause() */\n      jump\t// in\n    tag_143:\n        /* \"constracts/HealthMediToken.sol\":3171:3234  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"constracts/HealthMediToken.sol\":1877:2083  function unfreeze(address account) public onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"constracts/HealthMediToken.sol\":1947:1961  frozenAccounts */\n      0x06\n        /* \"constracts/HealthMediToken.sol\":1947:1970  frozenAccounts[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":1962:1969  account */\n      dup3\n        /* \"constracts/HealthMediToken.sol\":1947:1970  frozenAccounts[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"constracts/HealthMediToken.sol\":1939:1996  require(frozenAccounts[account], \"Account is not frozen\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"constracts/HealthMediToken.sol\":2032:2037  false */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2006:2020  frozenAccounts */\n      0x06\n        /* \"constracts/HealthMediToken.sol\":2006:2029  frozenAccounts[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2021:2028  account */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":2006:2029  frozenAccounts[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2006:2037  frozenAccounts[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"constracts/HealthMediToken.sol\":2068:2075  account */\n      dup1\n        /* \"constracts/HealthMediToken.sol\":2052:2076  AccountUnfrozen(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf915cd9fe234de6e8d3afe7bf2388d35b2b6d48e8c629a24602019bde79c213a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"constracts/HealthMediToken.sol\":1877:2083  function unfreeze(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"constracts/HealthMediToken.sol\":2089:2315  function lockup(address account, uint256 amount, uint256 releaseTime) public onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"constracts/HealthMediToken.sol\":2216:2222  amount */\n      dup2\n        /* \"constracts/HealthMediToken.sol\":2194:2212  balanceOf(account) */\n      tag_159\n        /* \"constracts/HealthMediToken.sol\":2204:2211  account */\n      dup5\n        /* \"constracts/HealthMediToken.sol\":2194:2203  balanceOf */\n      tag_74\n        /* \"constracts/HealthMediToken.sol\":2194:2212  balanceOf(account) */\n      jump\t// in\n    tag_159:\n        /* \"constracts/HealthMediToken.sol\":2194:2222  balanceOf(account) >= amount */\n      lt\n      iszero\n        /* \"constracts/HealthMediToken.sol\":2186:2247  require(balanceOf(account) >= amount, \"Insufficient balance\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"constracts/HealthMediToken.sol\":2257:2263  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":2257:2272  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2264:2271  account */\n      dup5\n        /* \"constracts/HealthMediToken.sol\":2257:2272  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":2278:2307  LockInfo(amount, releaseTime) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"constracts/HealthMediToken.sol\":2287:2293  amount */\n      dup5\n        /* \"constracts/HealthMediToken.sol\":2278:2307  LockInfo(amount, releaseTime) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"constracts/HealthMediToken.sol\":2295:2306  releaseTime */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":2278:2307  LockInfo(amount, releaseTime) */\n      dup2\n      mstore\n      pop\n        /* \"constracts/HealthMediToken.sol\":2257:2308  _locks[account].push(LockInfo(amount, releaseTime)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"constracts/HealthMediToken.sol\":2089:2315  function lockup(address account, uint256 amount, uint256 releaseTime) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"constracts/HealthMediToken.sol\":3106:3165  function pause() public onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"constracts/HealthMediToken.sol\":3150:3158  _pause() */\n      tag_177\n        /* \"constracts/HealthMediToken.sol\":3150:3156  _pause */\n      tag_178\n        /* \"constracts/HealthMediToken.sol\":3150:3158  _pause() */\n      jump\t// in\n    tag_177:\n        /* \"constracts/HealthMediToken.sol\":3106:3165  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"constracts/HealthMediToken.sol\":1665:1871  function freeze(address account) public onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"constracts/HealthMediToken.sol\":1734:1748  frozenAccounts */\n      0x06\n        /* \"constracts/HealthMediToken.sol\":1734:1757  frozenAccounts[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":1749:1756  account */\n      dup3\n        /* \"constracts/HealthMediToken.sol\":1734:1757  frozenAccounts[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"constracts/HealthMediToken.sol\":1733:1757  !frozenAccounts[account] */\n      iszero\n        /* \"constracts/HealthMediToken.sol\":1725:1787  require(!frozenAccounts[account], \"Account is already frozen\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"constracts/HealthMediToken.sol\":1823:1827  true */\n      0x01\n        /* \"constracts/HealthMediToken.sol\":1797:1811  frozenAccounts */\n      0x06\n        /* \"constracts/HealthMediToken.sol\":1797:1820  frozenAccounts[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":1812:1819  account */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":1797:1820  frozenAccounts[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"constracts/HealthMediToken.sol\":1797:1827  frozenAccounts[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"constracts/HealthMediToken.sol\":1856:1863  account */\n      dup1\n        /* \"constracts/HealthMediToken.sol\":1842:1864  AccountFrozen(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4f2a367e694e71282f29ab5eaa04c4c0be45ac5bf2ca74fb67068b98bdc2887d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"constracts/HealthMediToken.sol\":1665:1871  function freeze(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"constracts/HealthMediToken.sol\":3814:4170  function getLockedAmount(address account) public view returns (uint256) {... */\n    tag_92:\n        /* \"constracts/HealthMediToken.sol\":3877:3884  uint256 */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":3896:3916  uint256 lockedAmount */\n      dup1\n        /* \"constracts/HealthMediToken.sol\":3919:3920  0 */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":3896:3920  uint256 lockedAmount = 0 */\n      swap1\n      pop\n        /* \"constracts/HealthMediToken.sol\":3935:3944  uint256 i */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":3930:4135  for (uint256 i = 0; i < _locks[account].length; i++) {... */\n    tag_187:\n        /* \"constracts/HealthMediToken.sol\":3954:3960  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":3954:3969  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":3961:3968  account */\n      dup6\n        /* \"constracts/HealthMediToken.sol\":3954:3969  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":3954:3976  _locks[account].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"constracts/HealthMediToken.sol\":3950:3951  i */\n      dup2\n        /* \"constracts/HealthMediToken.sol\":3950:3976  i < _locks[account].length */\n      lt\n        /* \"constracts/HealthMediToken.sol\":3930:4135  for (uint256 i = 0; i < _locks[account].length; i++) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"constracts/HealthMediToken.sol\":4034:4049  block.timestamp */\n      timestamp\n        /* \"constracts/HealthMediToken.sol\":4001:4007  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":4001:4016  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":4008:4015  account */\n      dup7\n        /* \"constracts/HealthMediToken.sol\":4001:4016  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":4017:4018  i */\n      dup3\n        /* \"constracts/HealthMediToken.sol\":4001:4019  _locks[account][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_190\n      jumpi\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n    tag_190:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"constracts/HealthMediToken.sol\":4001:4031  _locks[account][i].releaseTime */\n      0x01\n      add\n      sload\n        /* \"constracts/HealthMediToken.sol\":4001:4049  _locks[account][i].releaseTime > block.timestamp */\n      gt\n        /* \"constracts/HealthMediToken.sol\":3997:4125  if (_locks[account][i].releaseTime > block.timestamp) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"constracts/HealthMediToken.sol\":4085:4091  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":4085:4100  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":4092:4099  account */\n      dup6\n        /* \"constracts/HealthMediToken.sol\":4085:4100  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":4101:4102  i */\n      dup2\n        /* \"constracts/HealthMediToken.sol\":4085:4103  _locks[account][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_196\n      tag_192\n      jump\t// in\n    tag_196:\n    tag_195:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"constracts/HealthMediToken.sol\":4085:4110  _locks[account][i].amount */\n      0x00\n      add\n      sload\n        /* \"constracts/HealthMediToken.sol\":4069:4110  lockedAmount += _locks[account][i].amount */\n      dup3\n      tag_198\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_198:\n      swap2\n      pop\n        /* \"constracts/HealthMediToken.sol\":3997:4125  if (_locks[account][i].releaseTime > block.timestamp) {... */\n    tag_194:\n        /* \"constracts/HealthMediToken.sol\":3978:3981  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"constracts/HealthMediToken.sol\":3930:4135  for (uint256 i = 0; i < _locks[account].length; i++) {... */\n      jump(tag_187)\n    tag_188:\n      pop\n        /* \"constracts/HealthMediToken.sol\":4151:4163  lockedAmount */\n      dup1\n        /* \"constracts/HealthMediToken.sol\":4144:4163  return lockedAmount */\n      swap2\n      pop\n      pop\n        /* \"constracts/HealthMediToken.sol\":3814:4170  function getLockedAmount(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_200\n      swap1\n      tag_114\n      jump\t// in\n    tag_200:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_114\n      jump\t// in\n    tag_201:\n      dup1\n      iszero\n      tag_202\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_203\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_202)\n    tag_203:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_204:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_204\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"constracts/HealthMediToken.sol\":2321:2876  function releaseLock(address account) public {... */\n    tag_103:\n        /* \"constracts/HealthMediToken.sol\":2376:2400  uint256 releasableAmount */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2419:2428  uint256 i */\n      dup1\n        /* \"constracts/HealthMediToken.sol\":2414:2766  for (uint256 i = 0; i < _locks[account].length; i++) {... */\n    tag_209:\n        /* \"constracts/HealthMediToken.sol\":2438:2444  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":2438:2453  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2445:2452  account */\n      dup5\n        /* \"constracts/HealthMediToken.sol\":2438:2453  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":2438:2460  _locks[account].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"constracts/HealthMediToken.sol\":2434:2435  i */\n      dup2\n        /* \"constracts/HealthMediToken.sol\":2434:2460  i < _locks[account].length */\n      lt\n        /* \"constracts/HealthMediToken.sol\":2414:2766  for (uint256 i = 0; i < _locks[account].length; i++) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"constracts/HealthMediToken.sol\":2519:2534  block.timestamp */\n      timestamp\n        /* \"constracts/HealthMediToken.sol\":2485:2491  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":2485:2500  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2492:2499  account */\n      dup6\n        /* \"constracts/HealthMediToken.sol\":2485:2500  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":2501:2502  i */\n      dup3\n        /* \"constracts/HealthMediToken.sol\":2485:2503  _locks[account][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_212\n      jumpi\n      tag_213\n      tag_192\n      jump\t// in\n    tag_213:\n    tag_212:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"constracts/HealthMediToken.sol\":2485:2515  _locks[account][i].releaseTime */\n      0x01\n      add\n      sload\n        /* \"constracts/HealthMediToken.sol\":2485:2534  _locks[account][i].releaseTime <= block.timestamp */\n      gt\n        /* \"constracts/HealthMediToken.sol\":2481:2756  if (_locks[account][i].releaseTime <= block.timestamp) {... */\n      tag_215\n      jumpi\n        /* \"constracts/HealthMediToken.sol\":2574:2580  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":2574:2589  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2581:2588  account */\n      dup5\n        /* \"constracts/HealthMediToken.sol\":2574:2589  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":2590:2591  i */\n      dup2\n        /* \"constracts/HealthMediToken.sol\":2574:2592  _locks[account][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_217\n      tag_192\n      jump\t// in\n    tag_217:\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"constracts/HealthMediToken.sol\":2574:2599  _locks[account][i].amount */\n      0x00\n      add\n      sload\n        /* \"constracts/HealthMediToken.sol\":2554:2599  releasableAmount += _locks[account][i].amount */\n      dup3\n      tag_219\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_219:\n      swap2\n      pop\n        /* \"constracts/HealthMediToken.sol\":2638:2644  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":2638:2653  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2645:2652  account */\n      dup5\n        /* \"constracts/HealthMediToken.sol\":2638:2653  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":2679:2680  1 */\n      0x01\n        /* \"constracts/HealthMediToken.sol\":2654:2660  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":2654:2669  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2661:2668  account */\n      dup7\n        /* \"constracts/HealthMediToken.sol\":2654:2669  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":2654:2676  _locks[account].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"constracts/HealthMediToken.sol\":2654:2680  _locks[account].length - 1 */\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"constracts/HealthMediToken.sol\":2638:2681  _locks[account][_locks[account].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_223\n      tag_192\n      jump\t// in\n    tag_223:\n    tag_222:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"constracts/HealthMediToken.sol\":2617:2623  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":2617:2632  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2624:2631  account */\n      dup6\n        /* \"constracts/HealthMediToken.sol\":2617:2632  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":2633:2634  i */\n      dup3\n        /* \"constracts/HealthMediToken.sol\":2617:2635  _locks[account][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_226\n      tag_192\n      jump\t// in\n    tag_226:\n    tag_225:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"constracts/HealthMediToken.sol\":2617:2681  _locks[account][i] = _locks[account][_locks[account].length - 1] */\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      0x00\n      add\n      sstore\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"constracts/HealthMediToken.sol\":2699:2705  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":2699:2714  _locks[account] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2706:2713  account */\n      dup5\n        /* \"constracts/HealthMediToken.sol\":2699:2714  _locks[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":2699:2720  _locks[account].pop() */\n      dup1\n      sload\n      dup1\n      tag_228\n      jumpi\n      tag_229\n      tag_230\n      jump\t// in\n    tag_229:\n    tag_228:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n      swap1\n      sstore\n        /* \"constracts/HealthMediToken.sol\":2738:2741  i-- */\n      dup1\n      dup1\n      tag_232\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      swap2\n      pop\n      pop\n        /* \"constracts/HealthMediToken.sol\":2481:2756  if (_locks[account][i].releaseTime <= block.timestamp) {... */\n    tag_215:\n        /* \"constracts/HealthMediToken.sol\":2462:2465  i++ */\n      dup1\n      dup1\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      swap2\n      pop\n      pop\n        /* \"constracts/HealthMediToken.sol\":2414:2766  for (uint256 i = 0; i < _locks[account].length; i++) {... */\n      jump(tag_209)\n    tag_210:\n      pop\n        /* \"constracts/HealthMediToken.sol\":2798:2799  0 */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":2779:2795  releasableAmount */\n      dup2\n        /* \"constracts/HealthMediToken.sol\":2779:2799  releasableAmount > 0 */\n      gt\n        /* \"constracts/HealthMediToken.sol\":2775:2870  if (releasableAmount > 0) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"constracts/HealthMediToken.sol\":2833:2840  account */\n      dup2\n        /* \"constracts/HealthMediToken.sol\":2820:2859  LockReleased(account, releasableAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x622ca42598ab680a7def4a7346e1963a82207cf42a5ddb8056ad62cfbda19b88\n        /* \"constracts/HealthMediToken.sol\":2842:2858  releasableAmount */\n      dup3\n        /* \"constracts/HealthMediToken.sol\":2820:2859  LockReleased(account, releasableAmount) */\n      mload(0x40)\n      tag_237\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"constracts/HealthMediToken.sol\":2775:2870  if (releasableAmount > 0) {... */\n    tag_236:\n        /* \"constracts/HealthMediToken.sol\":2366:2876  {... */\n      pop\n        /* \"constracts/HealthMediToken.sol\":2321:2876  function releaseLock(address account) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8998:9126  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9119  _approve(owner, spender, value, true) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9091:9096  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9105  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9107:9112  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9114:9118  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9090  _approve */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9119  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8998:9126  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10672:11149  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10771:10795  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10798:10823  allowance(owner, spender) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10808:10813  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10815:10822  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10798:10807  allowance */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10798:10823  allowance(owner, spender) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10771:10823  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10857:10874  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10837:10853  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10837:10874  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10833:11143  if (currentAllowance != type(uint256).max) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10913:10918  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10894:10910  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10894:10918  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10890:11020  if (currentAllowance < value) {... */\n      iszero\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10979  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10981:10997  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10999:11004  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10945:11005  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10890:11020  if (currentAllowance < value) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11118  _approve(owner, spender, currentAllowance - value, false) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11070:11075  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11084  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11105:11110  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11086:11102  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11086:11110  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11112:11117  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11069  _approve */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11118  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10833:11143  if (currentAllowance != type(uint256).max) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11149  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10672:11149  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5965  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5934:5958  _update(from, to, value) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5948:5950  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5952:5957  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5934:5941  _update */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5934:5958  _update(from, to, value) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5965  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_270\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_271\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_273\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_274\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8256:8462  function _burn(address account, uint256 value) internal {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8345:8346  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8326:8347  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8326:8333  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8326:8347  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8322:8411  if (account == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8397:8398  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8370:8400  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8322:8411  if (account == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8420:8455  _update(account, address(0), value) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8428:8435  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8445:8446  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8449:8454  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8420:8427  _update */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8420:8455  _update(account, address(0), value) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8256:8462  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_281\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_282\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_284\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_285\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9958:10390  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10087:10088  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10070:10089  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10070:10075  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10070:10089  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10155  if (owner == address(0)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10141:10142  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10112:10144  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10155  if (owner == address(0)) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10187:10188  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10168:10189  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10168:10175  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10168:10189  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10164:10254  if (spender == address(0)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10240:10241  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10212:10243  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10164:10254  if (spender == address(0)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10293:10298  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10263:10274  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10263:10281  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10275:10280  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10263:10281  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10263:10290  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10282:10289  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10263:10290  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10263:10298  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10312:10321  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10308:10384  if (emitEvent) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10365  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10373  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10351:10356  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10373  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10367:10372  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10373  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_292\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10308:10384  if (emitEvent) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9958:10390  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"constracts/HealthMediToken.sol\":1126:1659  function _update(address from, address to, uint256 amount) internal override {... */\n    tag_262:\n        /* \"constracts/HealthMediToken.sol\":1323:1324  0 */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":1307:1325  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"constracts/HealthMediToken.sol\":1307:1311  from */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":1307:1325  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"constracts/HealthMediToken.sol\":1307:1345  from != address(0) && to != address(0) */\n      dup1\n      iszero\n      tag_294\n      jumpi\n      pop\n        /* \"constracts/HealthMediToken.sol\":1343:1344  0 */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":1329:1345  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"constracts/HealthMediToken.sol\":1329:1331  to */\n      dup3\n        /* \"constracts/HealthMediToken.sol\":1329:1345  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"constracts/HealthMediToken.sol\":1307:1345  from != address(0) && to != address(0) */\n    tag_294:\n        /* \"constracts/HealthMediToken.sol\":1304:1603  if(from != address(0) && to != address(0)) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"constracts/HealthMediToken.sol\":1370:1378  paused() */\n      tag_296\n        /* \"constracts/HealthMediToken.sol\":1370:1376  paused */\n      tag_67\n        /* \"constracts/HealthMediToken.sol\":1370:1378  paused() */\n      jump\t// in\n    tag_296:\n        /* \"constracts/HealthMediToken.sol\":1369:1378  !paused() */\n      iszero\n        /* \"constracts/HealthMediToken.sol\":1369:1403  !paused() || msg.sender == owner() */\n      dup1\n      tag_297\n      jumpi\n      pop\n        /* \"constracts/HealthMediToken.sol\":1396:1403  owner() */\n      tag_298\n        /* \"constracts/HealthMediToken.sol\":1396:1401  owner */\n      tag_87\n        /* \"constracts/HealthMediToken.sol\":1396:1403  owner() */\n      jump\t// in\n    tag_298:\n        /* \"constracts/HealthMediToken.sol\":1382:1403  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"constracts/HealthMediToken.sol\":1382:1392  msg.sender */\n      caller\n        /* \"constracts/HealthMediToken.sol\":1382:1403  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"constracts/HealthMediToken.sol\":1369:1403  !paused() || msg.sender == owner() */\n    tag_297:\n        /* \"constracts/HealthMediToken.sol\":1361:1435  require(!paused() || msg.sender == owner(), \"Token transfer while paused\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"constracts/HealthMediToken.sol\":1508:1532  _checkLock(from, amount) */\n      tag_302\n        /* \"constracts/HealthMediToken.sol\":1519:1523  from */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":1525:1531  amount */\n      dup3\n        /* \"constracts/HealthMediToken.sol\":1508:1518  _checkLock */\n      tag_303\n        /* \"constracts/HealthMediToken.sol\":1508:1532  _checkLock(from, amount) */\n      jump\t// in\n    tag_302:\n        /* \"constracts/HealthMediToken.sol\":1500:1592  require(_checkLock(from, amount), \"ERC20Lockable: transfer amount exceeds unlocked balance\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_304:\n        /* \"constracts/HealthMediToken.sol\":1304:1603  if(from != address(0) && to != address(0)) {... */\n    tag_295:\n        /* \"constracts/HealthMediToken.sol\":1621:1652  super._update(from, to, amount) */\n      tag_307\n        /* \"constracts/HealthMediToken.sol\":1635:1639  from */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":1641:1643  to */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":1645:1651  amount */\n      dup4\n        /* \"constracts/HealthMediToken.sol\":1621:1634  super._update */\n      tag_308\n        /* \"constracts/HealthMediToken.sol\":1621:1652  super._update(from, to, amount) */\n      jump\t// in\n    tag_307:\n        /* \"constracts/HealthMediToken.sol\":1126:1659  function _update(address from, address to, uint256 amount) internal override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_310\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_67\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_315\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_67\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_316:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"constracts/HealthMediToken.sol\":3240:3808  function _checkLock(address from, uint256 amount) private view returns (bool) {... */\n    tag_303:\n        /* \"constracts/HealthMediToken.sol\":3312:3316  bool */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":3328:3348  uint256 lockedAmount */\n      dup1\n        /* \"constracts/HealthMediToken.sol\":3351:3352  0 */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":3328:3352  uint256 lockedAmount = 0 */\n      swap1\n      pop\n        /* \"constracts/HealthMediToken.sol\":3456:3465  uint256 i */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":3451:3647  for (uint256 i = 0; i < _locks[from].length; i++) {... */\n    tag_320:\n        /* \"constracts/HealthMediToken.sol\":3475:3481  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":3475:3487  _locks[from] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":3482:3486  from */\n      dup7\n        /* \"constracts/HealthMediToken.sol\":3475:3487  _locks[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":3475:3494  _locks[from].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"constracts/HealthMediToken.sol\":3471:3472  i */\n      dup2\n        /* \"constracts/HealthMediToken.sol\":3471:3494  i < _locks[from].length */\n      lt\n        /* \"constracts/HealthMediToken.sol\":3451:3647  for (uint256 i = 0; i < _locks[from].length; i++) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"constracts/HealthMediToken.sol\":3549:3564  block.timestamp */\n      timestamp\n        /* \"constracts/HealthMediToken.sol\":3519:3525  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":3519:3531  _locks[from] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":3526:3530  from */\n      dup8\n        /* \"constracts/HealthMediToken.sol\":3519:3531  _locks[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":3532:3533  i */\n      dup3\n        /* \"constracts/HealthMediToken.sol\":3519:3534  _locks[from][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_323\n      jumpi\n      tag_324\n      tag_192\n      jump\t// in\n    tag_324:\n    tag_323:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"constracts/HealthMediToken.sol\":3519:3546  _locks[from][i].releaseTime */\n      0x01\n      add\n      sload\n        /* \"constracts/HealthMediToken.sol\":3519:3564  _locks[from][i].releaseTime > block.timestamp */\n      gt\n        /* \"constracts/HealthMediToken.sol\":3515:3637  if (_locks[from][i].releaseTime > block.timestamp) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"constracts/HealthMediToken.sol\":3600:3606  _locks */\n      0x07\n        /* \"constracts/HealthMediToken.sol\":3600:3612  _locks[from] */\n      0x00\n        /* \"constracts/HealthMediToken.sol\":3607:3611  from */\n      dup7\n        /* \"constracts/HealthMediToken.sol\":3600:3612  _locks[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"constracts/HealthMediToken.sol\":3613:3614  i */\n      dup2\n        /* \"constracts/HealthMediToken.sol\":3600:3615  _locks[from][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_327\n      jumpi\n      tag_328\n      tag_192\n      jump\t// in\n    tag_328:\n    tag_327:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"constracts/HealthMediToken.sol\":3600:3622  _locks[from][i].amount */\n      0x00\n      add\n      sload\n        /* \"constracts/HealthMediToken.sol\":3584:3622  lockedAmount += _locks[from][i].amount */\n      dup3\n      tag_330\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_330:\n      swap2\n      pop\n        /* \"constracts/HealthMediToken.sol\":3515:3637  if (_locks[from][i].releaseTime > block.timestamp) {... */\n    tag_326:\n        /* \"constracts/HealthMediToken.sol\":3496:3499  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"constracts/HealthMediToken.sol\":3451:3647  for (uint256 i = 0; i < _locks[from].length; i++) {... */\n      jump(tag_320)\n    tag_321:\n      pop\n        /* \"constracts/HealthMediToken.sol\":3795:3801  amount */\n      dup3\n        /* \"constracts/HealthMediToken.sol\":3779:3791  lockedAmount */\n      dup2\n        /* \"constracts/HealthMediToken.sol\":3761:3776  balanceOf(from) */\n      tag_331\n        /* \"constracts/HealthMediToken.sol\":3771:3775  from */\n      dup7\n        /* \"constracts/HealthMediToken.sol\":3761:3770  balanceOf */\n      tag_74\n        /* \"constracts/HealthMediToken.sol\":3761:3776  balanceOf(from) */\n      jump\t// in\n    tag_331:\n        /* \"constracts/HealthMediToken.sol\":3761:3791  balanceOf(from) - lockedAmount */\n      tag_332\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_332:\n        /* \"constracts/HealthMediToken.sol\":3761:3801  balanceOf(from) - lockedAmount >= amount */\n      lt\n      iszero\n        /* \"constracts/HealthMediToken.sol\":3754:3801  return balanceOf(from) - lockedAmount >= amount */\n      swap2\n      pop\n      pop\n        /* \"constracts/HealthMediToken.sol\":3240:3808  function _checkLock(address from, uint256 amount) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6280:7387  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6385:6386  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6369:6387  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6369:6373  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6369:6387  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6365:6905  if (from == address(0)) {... */\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6521:6526  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6505:6517  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6505:6526  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_335\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_335:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6365:6905  if (from == address(0)) {... */\n      jump(tag_336)\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6557:6576  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6588  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6593  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6557:6594  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6626:6631  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6612:6623  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6612:6631  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6608:6723  if (fromBalance < value) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6683:6687  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6689:6700  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6702:6707  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6658:6708  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6608:6723  if (fromBalance < value) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6875:6880  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6861:6872  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6861:6880  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6843:6852  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6843:6858  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6853:6857  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6843:6858  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6843:6880  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6543:6905  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6365:6905  if (from == address(0)) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6933:6934  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6935  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6921  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6935  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6915:7340  if (to == address(0)) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7103  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7082:7094  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7082:7103  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6915:7340  if (to == address(0)) {... */\n      jump(tag_340)\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7310:7315  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7293:7302  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7293:7306  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7303:7305  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7293:7306  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7293:7315  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6915:7340  if (to == address(0)) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7370:7372  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7380  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7364:7368  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7380  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7374:7379  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7380  Transfer(from, to, value) */\n      mload(0x40)\n      tag_341\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6280:7387  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_342:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_343:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_344:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_383:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_383)\n    tag_385:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_345:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_346:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_388\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_342\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":818:889   */\n      tag_389\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_343\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_390\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_344\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":988:1017   */\n      tag_391\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_345\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_32:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_393\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_346\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_348:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_350:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_351:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_399\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_350\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_352:\n        /* \"#utility.yul\":1983:2007   */\n      tag_401\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_351\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_402:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_353:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_404\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_352\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_354:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_355:\n        /* \"#utility.yul\":2339:2363   */\n      tag_407\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_354\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_408:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_356:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_410\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_355\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_35:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_413\n      tag_348\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2632:2751   */\n    tag_412:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_414\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_353\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_415\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_356\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_357:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_358:\n        /* \"#utility.yul\":3196:3217   */\n      tag_418\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_357\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_38:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_420\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_358\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_359:\n        /* \"#utility.yul\":3533:3557   */\n      tag_422\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_354\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_42:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_424\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_359\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_45:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_427\n      tag_348\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3908:4027   */\n    tag_426:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_428\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_353\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_429\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_353\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_430\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_356\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_360:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_361:\n        /* \"#utility.yul\":4598:4620   */\n      tag_433\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_360\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_51:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_435\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_361\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5472   */\n    tag_54:\n        /* \"#utility.yul\":4930:4936   */\n      0x00\n        /* \"#utility.yul\":4938:4944   */\n      dup1\n        /* \"#utility.yul\":4946:4952   */\n      0x00\n        /* \"#utility.yul\":4995:4997   */\n      0x60\n        /* \"#utility.yul\":4983:4992   */\n      dup5\n        /* \"#utility.yul\":4974:4981   */\n      dup7\n        /* \"#utility.yul\":4970:4993   */\n      sub\n        /* \"#utility.yul\":4966:4998   */\n      slt\n        /* \"#utility.yul\":4963:5082   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":5001:5080   */\n      tag_438\n      tag_348\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4963:5082   */\n    tag_437:\n        /* \"#utility.yul\":5121:5122   */\n      0x00\n        /* \"#utility.yul\":5146:5199   */\n      tag_439\n        /* \"#utility.yul\":5191:5198   */\n      dup7\n        /* \"#utility.yul\":5182:5188   */\n      dup3\n        /* \"#utility.yul\":5171:5180   */\n      dup8\n        /* \"#utility.yul\":5167:5189   */\n      add\n        /* \"#utility.yul\":5146:5199   */\n      tag_353\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5136:5199   */\n      swap4\n      pop\n        /* \"#utility.yul\":5092:5209   */\n      pop\n        /* \"#utility.yul\":5248:5250   */\n      0x20\n        /* \"#utility.yul\":5274:5327   */\n      tag_440\n        /* \"#utility.yul\":5319:5326   */\n      dup7\n        /* \"#utility.yul\":5310:5316   */\n      dup3\n        /* \"#utility.yul\":5299:5308   */\n      dup8\n        /* \"#utility.yul\":5295:5317   */\n      add\n        /* \"#utility.yul\":5274:5327   */\n      tag_356\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":5264:5327   */\n      swap3\n      pop\n        /* \"#utility.yul\":5219:5337   */\n      pop\n        /* \"#utility.yul\":5376:5378   */\n      0x40\n        /* \"#utility.yul\":5402:5455   */\n      tag_441\n        /* \"#utility.yul\":5447:5454   */\n      dup7\n        /* \"#utility.yul\":5438:5444   */\n      dup3\n        /* \"#utility.yul\":5427:5436   */\n      dup8\n        /* \"#utility.yul\":5423:5445   */\n      add\n        /* \"#utility.yul\":5402:5455   */\n      tag_356\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5392:5455   */\n      swap2\n      pop\n        /* \"#utility.yul\":5347:5465   */\n      pop\n        /* \"#utility.yul\":4853:5472   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5478:5807   */\n    tag_60:\n        /* \"#utility.yul\":5537:5543   */\n      0x00\n        /* \"#utility.yul\":5586:5588   */\n      0x20\n        /* \"#utility.yul\":5574:5583   */\n      dup3\n        /* \"#utility.yul\":5565:5572   */\n      dup5\n        /* \"#utility.yul\":5561:5584   */\n      sub\n        /* \"#utility.yul\":5557:5589   */\n      slt\n        /* \"#utility.yul\":5554:5673   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":5592:5671   */\n      tag_444\n      tag_348\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5554:5673   */\n    tag_443:\n        /* \"#utility.yul\":5712:5713   */\n      0x00\n        /* \"#utility.yul\":5737:5790   */\n      tag_445\n        /* \"#utility.yul\":5782:5789   */\n      dup5\n        /* \"#utility.yul\":5773:5779   */\n      dup3\n        /* \"#utility.yul\":5762:5771   */\n      dup6\n        /* \"#utility.yul\":5758:5780   */\n      add\n        /* \"#utility.yul\":5737:5790   */\n      tag_356\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5727:5790   */\n      swap2\n      pop\n        /* \"#utility.yul\":5683:5800   */\n      pop\n        /* \"#utility.yul\":5478:5807   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5813:6142   */\n    tag_64:\n        /* \"#utility.yul\":5872:5878   */\n      0x00\n        /* \"#utility.yul\":5921:5923   */\n      0x20\n        /* \"#utility.yul\":5909:5918   */\n      dup3\n        /* \"#utility.yul\":5900:5907   */\n      dup5\n        /* \"#utility.yul\":5896:5919   */\n      sub\n        /* \"#utility.yul\":5892:5924   */\n      slt\n        /* \"#utility.yul\":5889:6008   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":5927:6006   */\n      tag_448\n      tag_348\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5889:6008   */\n    tag_447:\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6072:6125   */\n      tag_449\n        /* \"#utility.yul\":6117:6124   */\n      dup5\n        /* \"#utility.yul\":6108:6114   */\n      dup3\n        /* \"#utility.yul\":6097:6106   */\n      dup6\n        /* \"#utility.yul\":6093:6115   */\n      add\n        /* \"#utility.yul\":6072:6125   */\n      tag_353\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6062:6125   */\n      swap2\n      pop\n        /* \"#utility.yul\":6018:6135   */\n      pop\n        /* \"#utility.yul\":5813:6142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6148:6266   */\n    tag_362:\n        /* \"#utility.yul\":6235:6259   */\n      tag_451\n        /* \"#utility.yul\":6253:6258   */\n      dup2\n        /* \"#utility.yul\":6235:6259   */\n      tag_351\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6230:6233   */\n      dup3\n        /* \"#utility.yul\":6223:6260   */\n      mstore\n        /* \"#utility.yul\":6148:6266   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6272:6494   */\n    tag_89:\n        /* \"#utility.yul\":6365:6369   */\n      0x00\n        /* \"#utility.yul\":6403:6405   */\n      0x20\n        /* \"#utility.yul\":6392:6401   */\n      dup3\n        /* \"#utility.yul\":6388:6406   */\n      add\n        /* \"#utility.yul\":6380:6406   */\n      swap1\n      pop\n        /* \"#utility.yul\":6416:6487   */\n      tag_453\n        /* \"#utility.yul\":6484:6485   */\n      0x00\n        /* \"#utility.yul\":6473:6482   */\n      dup4\n        /* \"#utility.yul\":6469:6486   */\n      add\n        /* \"#utility.yul\":6460:6466   */\n      dup5\n        /* \"#utility.yul\":6416:6487   */\n      tag_362\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":6272:6494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6500:6974   */\n    tag_106:\n        /* \"#utility.yul\":6568:6574   */\n      0x00\n        /* \"#utility.yul\":6576:6582   */\n      dup1\n        /* \"#utility.yul\":6625:6627   */\n      0x40\n        /* \"#utility.yul\":6613:6622   */\n      dup4\n        /* \"#utility.yul\":6604:6611   */\n      dup6\n        /* \"#utility.yul\":6600:6623   */\n      sub\n        /* \"#utility.yul\":6596:6628   */\n      slt\n        /* \"#utility.yul\":6593:6712   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":6631:6710   */\n      tag_456\n      tag_348\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6593:6712   */\n    tag_455:\n        /* \"#utility.yul\":6751:6752   */\n      0x00\n        /* \"#utility.yul\":6776:6829   */\n      tag_457\n        /* \"#utility.yul\":6821:6828   */\n      dup6\n        /* \"#utility.yul\":6812:6818   */\n      dup3\n        /* \"#utility.yul\":6801:6810   */\n      dup7\n        /* \"#utility.yul\":6797:6819   */\n      add\n        /* \"#utility.yul\":6776:6829   */\n      tag_353\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6766:6829   */\n      swap3\n      pop\n        /* \"#utility.yul\":6722:6839   */\n      pop\n        /* \"#utility.yul\":6878:6880   */\n      0x20\n        /* \"#utility.yul\":6904:6957   */\n      tag_458\n        /* \"#utility.yul\":6949:6956   */\n      dup6\n        /* \"#utility.yul\":6940:6946   */\n      dup3\n        /* \"#utility.yul\":6929:6938   */\n      dup7\n        /* \"#utility.yul\":6925:6947   */\n      add\n        /* \"#utility.yul\":6904:6957   */\n      tag_353\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6894:6957   */\n      swap2\n      pop\n        /* \"#utility.yul\":6849:6967   */\n      pop\n        /* \"#utility.yul\":6500:6974   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7160   */\n    tag_363:\n        /* \"#utility.yul\":7028:7105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7106   */\n      mstore\n        /* \"#utility.yul\":7125:7129   */\n      0x22\n        /* \"#utility.yul\":7122:7123   */\n      0x04\n        /* \"#utility.yul\":7115:7130   */\n      mstore\n        /* \"#utility.yul\":7149:7153   */\n      0x24\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7154   */\n      revert\n        /* \"#utility.yul\":7166:7486   */\n    tag_114:\n        /* \"#utility.yul\":7210:7216   */\n      0x00\n        /* \"#utility.yul\":7247:7248   */\n      0x02\n        /* \"#utility.yul\":7241:7245   */\n      dup3\n        /* \"#utility.yul\":7237:7249   */\n      div\n        /* \"#utility.yul\":7227:7249   */\n      swap1\n      pop\n        /* \"#utility.yul\":7294:7295   */\n      0x01\n        /* \"#utility.yul\":7288:7292   */\n      dup3\n        /* \"#utility.yul\":7284:7296   */\n      and\n        /* \"#utility.yul\":7315:7333   */\n      dup1\n        /* \"#utility.yul\":7305:7386   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":7371:7375   */\n      0x7f\n        /* \"#utility.yul\":7363:7369   */\n      dup3\n        /* \"#utility.yul\":7359:7376   */\n      and\n        /* \"#utility.yul\":7349:7376   */\n      swap2\n      pop\n        /* \"#utility.yul\":7305:7386   */\n    tag_461:\n        /* \"#utility.yul\":7433:7435   */\n      0x20\n        /* \"#utility.yul\":7425:7431   */\n      dup3\n        /* \"#utility.yul\":7422:7436   */\n      lt\n        /* \"#utility.yul\":7402:7420   */\n      dup2\n        /* \"#utility.yul\":7399:7437   */\n      sub\n        /* \"#utility.yul\":7396:7480   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":7452:7470   */\n      tag_463\n      tag_363\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":7396:7480   */\n    tag_462:\n        /* \"#utility.yul\":7217:7486   */\n      pop\n        /* \"#utility.yul\":7166:7486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7492:7672   */\n    tag_364:\n        /* \"#utility.yul\":7540:7617   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7537:7538   */\n      0x00\n        /* \"#utility.yul\":7530:7618   */\n      mstore\n        /* \"#utility.yul\":7637:7641   */\n      0x11\n        /* \"#utility.yul\":7634:7635   */\n      0x04\n        /* \"#utility.yul\":7627:7642   */\n      mstore\n        /* \"#utility.yul\":7661:7665   */\n      0x24\n        /* \"#utility.yul\":7658:7659   */\n      0x00\n        /* \"#utility.yul\":7651:7666   */\n      revert\n        /* \"#utility.yul\":7678:7869   */\n    tag_139:\n        /* \"#utility.yul\":7718:7721   */\n      0x00\n        /* \"#utility.yul\":7737:7757   */\n      tag_466\n        /* \"#utility.yul\":7755:7756   */\n      dup3\n        /* \"#utility.yul\":7737:7757   */\n      tag_354\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7732:7757   */\n      swap2\n      pop\n        /* \"#utility.yul\":7771:7791   */\n      tag_467\n        /* \"#utility.yul\":7789:7790   */\n      dup4\n        /* \"#utility.yul\":7771:7791   */\n      tag_354\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":7766:7791   */\n      swap3\n      pop\n        /* \"#utility.yul\":7814:7815   */\n      dup3\n        /* \"#utility.yul\":7811:7812   */\n      dup3\n        /* \"#utility.yul\":7807:7816   */\n      add\n        /* \"#utility.yul\":7800:7816   */\n      swap1\n      pop\n        /* \"#utility.yul\":7835:7838   */\n      dup1\n        /* \"#utility.yul\":7832:7833   */\n      dup3\n        /* \"#utility.yul\":7829:7839   */\n      gt\n        /* \"#utility.yul\":7826:7862   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":7842:7860   */\n      tag_469\n      tag_364\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":7826:7862   */\n    tag_468:\n        /* \"#utility.yul\":7678:7869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7875:8046   */\n    tag_365:\n        /* \"#utility.yul\":8015:8038   */\n      0x4163636f756e74206973206e6f742066726f7a656e0000000000000000000000\n        /* \"#utility.yul\":8011:8012   */\n      0x00\n        /* \"#utility.yul\":8003:8009   */\n      dup3\n        /* \"#utility.yul\":7999:8013   */\n      add\n        /* \"#utility.yul\":7992:8039   */\n      mstore\n        /* \"#utility.yul\":7875:8046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8052:8418   */\n    tag_366:\n        /* \"#utility.yul\":8194:8197   */\n      0x00\n        /* \"#utility.yul\":8215:8282   */\n      tag_472\n        /* \"#utility.yul\":8279:8281   */\n      0x15\n        /* \"#utility.yul\":8274:8277   */\n      dup4\n        /* \"#utility.yul\":8215:8282   */\n      tag_343\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":8208:8282   */\n      swap2\n      pop\n        /* \"#utility.yul\":8291:8384   */\n      tag_473\n        /* \"#utility.yul\":8380:8383   */\n      dup3\n        /* \"#utility.yul\":8291:8384   */\n      tag_365\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":8409:8411   */\n      0x20\n        /* \"#utility.yul\":8404:8407   */\n      dup3\n        /* \"#utility.yul\":8400:8412   */\n      add\n        /* \"#utility.yul\":8393:8412   */\n      swap1\n      pop\n        /* \"#utility.yul\":8052:8418   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8424:8843   */\n    tag_154:\n        /* \"#utility.yul\":8590:8594   */\n      0x00\n        /* \"#utility.yul\":8628:8630   */\n      0x20\n        /* \"#utility.yul\":8617:8626   */\n      dup3\n        /* \"#utility.yul\":8613:8631   */\n      add\n        /* \"#utility.yul\":8605:8631   */\n      swap1\n      pop\n        /* \"#utility.yul\":8677:8686   */\n      dup2\n        /* \"#utility.yul\":8671:8675   */\n      dup2\n        /* \"#utility.yul\":8667:8687   */\n      sub\n        /* \"#utility.yul\":8663:8664   */\n      0x00\n        /* \"#utility.yul\":8652:8661   */\n      dup4\n        /* \"#utility.yul\":8648:8665   */\n      add\n        /* \"#utility.yul\":8641:8688   */\n      mstore\n        /* \"#utility.yul\":8705:8836   */\n      tag_475\n        /* \"#utility.yul\":8831:8835   */\n      dup2\n        /* \"#utility.yul\":8705:8836   */\n      tag_366\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":8697:8836   */\n      swap1\n      pop\n        /* \"#utility.yul\":8424:8843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8849:9019   */\n    tag_367:\n        /* \"#utility.yul\":8989:9011   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":8985:8986   */\n      0x00\n        /* \"#utility.yul\":8977:8983   */\n      dup3\n        /* \"#utility.yul\":8973:8987   */\n      add\n        /* \"#utility.yul\":8966:9012   */\n      mstore\n        /* \"#utility.yul\":8849:9019   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9025:9391   */\n    tag_368:\n        /* \"#utility.yul\":9167:9170   */\n      0x00\n        /* \"#utility.yul\":9188:9255   */\n      tag_478\n        /* \"#utility.yul\":9252:9254   */\n      0x14\n        /* \"#utility.yul\":9247:9250   */\n      dup4\n        /* \"#utility.yul\":9188:9255   */\n      tag_343\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":9181:9255   */\n      swap2\n      pop\n        /* \"#utility.yul\":9264:9357   */\n      tag_479\n        /* \"#utility.yul\":9353:9356   */\n      dup3\n        /* \"#utility.yul\":9264:9357   */\n      tag_367\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":9382:9384   */\n      0x20\n        /* \"#utility.yul\":9377:9380   */\n      dup3\n        /* \"#utility.yul\":9373:9385   */\n      add\n        /* \"#utility.yul\":9366:9385   */\n      swap1\n      pop\n        /* \"#utility.yul\":9025:9391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9397:9816   */\n    tag_162:\n        /* \"#utility.yul\":9563:9567   */\n      0x00\n        /* \"#utility.yul\":9601:9603   */\n      0x20\n        /* \"#utility.yul\":9590:9599   */\n      dup3\n        /* \"#utility.yul\":9586:9604   */\n      add\n        /* \"#utility.yul\":9578:9604   */\n      swap1\n      pop\n        /* \"#utility.yul\":9650:9659   */\n      dup2\n        /* \"#utility.yul\":9644:9648   */\n      dup2\n        /* \"#utility.yul\":9640:9660   */\n      sub\n        /* \"#utility.yul\":9636:9637   */\n      0x00\n        /* \"#utility.yul\":9625:9634   */\n      dup4\n        /* \"#utility.yul\":9621:9638   */\n      add\n        /* \"#utility.yul\":9614:9661   */\n      mstore\n        /* \"#utility.yul\":9678:9809   */\n      tag_481\n        /* \"#utility.yul\":9804:9808   */\n      dup2\n        /* \"#utility.yul\":9678:9809   */\n      tag_368\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9670:9809   */\n      swap1\n      pop\n        /* \"#utility.yul\":9397:9816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9822:9997   */\n    tag_369:\n        /* \"#utility.yul\":9962:9989   */\n      0x4163636f756e7420697320616c72656164792066726f7a656e00000000000000\n        /* \"#utility.yul\":9958:9959   */\n      0x00\n        /* \"#utility.yul\":9950:9956   */\n      dup3\n        /* \"#utility.yul\":9946:9960   */\n      add\n        /* \"#utility.yul\":9939:9990   */\n      mstore\n        /* \"#utility.yul\":9822:9997   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10003:10369   */\n    tag_370:\n        /* \"#utility.yul\":10145:10148   */\n      0x00\n        /* \"#utility.yul\":10166:10233   */\n      tag_484\n        /* \"#utility.yul\":10230:10232   */\n      0x19\n        /* \"#utility.yul\":10225:10228   */\n      dup4\n        /* \"#utility.yul\":10166:10233   */\n      tag_343\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":10159:10233   */\n      swap2\n      pop\n        /* \"#utility.yul\":10242:10335   */\n      tag_485\n        /* \"#utility.yul\":10331:10334   */\n      dup3\n        /* \"#utility.yul\":10242:10335   */\n      tag_369\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":10360:10362   */\n      0x20\n        /* \"#utility.yul\":10355:10358   */\n      dup3\n        /* \"#utility.yul\":10351:10363   */\n      add\n        /* \"#utility.yul\":10344:10363   */\n      swap1\n      pop\n        /* \"#utility.yul\":10003:10369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10375:10794   */\n    tag_184:\n        /* \"#utility.yul\":10541:10545   */\n      0x00\n        /* \"#utility.yul\":10579:10581   */\n      0x20\n        /* \"#utility.yul\":10568:10577   */\n      dup3\n        /* \"#utility.yul\":10564:10582   */\n      add\n        /* \"#utility.yul\":10556:10582   */\n      swap1\n      pop\n        /* \"#utility.yul\":10628:10637   */\n      dup2\n        /* \"#utility.yul\":10622:10626   */\n      dup2\n        /* \"#utility.yul\":10618:10638   */\n      sub\n        /* \"#utility.yul\":10614:10615   */\n      0x00\n        /* \"#utility.yul\":10603:10612   */\n      dup4\n        /* \"#utility.yul\":10599:10616   */\n      add\n        /* \"#utility.yul\":10592:10639   */\n      mstore\n        /* \"#utility.yul\":10656:10787   */\n      tag_487\n        /* \"#utility.yul\":10782:10786   */\n      dup2\n        /* \"#utility.yul\":10656:10787   */\n      tag_370\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":10648:10787   */\n      swap1\n      pop\n        /* \"#utility.yul\":10375:10794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10800:10980   */\n    tag_192:\n        /* \"#utility.yul\":10848:10925   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10845:10846   */\n      0x00\n        /* \"#utility.yul\":10838:10926   */\n      mstore\n        /* \"#utility.yul\":10945:10949   */\n      0x32\n        /* \"#utility.yul\":10942:10943   */\n      0x04\n        /* \"#utility.yul\":10935:10950   */\n      mstore\n        /* \"#utility.yul\":10969:10973   */\n      0x24\n        /* \"#utility.yul\":10966:10967   */\n      0x00\n        /* \"#utility.yul\":10959:10974   */\n      revert\n        /* \"#utility.yul\":10986:11180   */\n    tag_221:\n        /* \"#utility.yul\":11026:11030   */\n      0x00\n        /* \"#utility.yul\":11046:11066   */\n      tag_490\n        /* \"#utility.yul\":11064:11065   */\n      dup3\n        /* \"#utility.yul\":11046:11066   */\n      tag_354\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":11041:11066   */\n      swap2\n      pop\n        /* \"#utility.yul\":11080:11100   */\n      tag_491\n        /* \"#utility.yul\":11098:11099   */\n      dup4\n        /* \"#utility.yul\":11080:11100   */\n      tag_354\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":11075:11100   */\n      swap3\n      pop\n        /* \"#utility.yul\":11124:11125   */\n      dup3\n        /* \"#utility.yul\":11121:11122   */\n      dup3\n        /* \"#utility.yul\":11117:11126   */\n      sub\n        /* \"#utility.yul\":11109:11126   */\n      swap1\n      pop\n        /* \"#utility.yul\":11148:11149   */\n      dup2\n        /* \"#utility.yul\":11142:11146   */\n      dup2\n        /* \"#utility.yul\":11139:11150   */\n      gt\n        /* \"#utility.yul\":11136:11173   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":11153:11171   */\n      tag_493\n      tag_364\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":11136:11173   */\n    tag_492:\n        /* \"#utility.yul\":10986:11180   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11186:11366   */\n    tag_230:\n        /* \"#utility.yul\":11234:11311   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11231:11232   */\n      0x00\n        /* \"#utility.yul\":11224:11312   */\n      mstore\n        /* \"#utility.yul\":11331:11335   */\n      0x31\n        /* \"#utility.yul\":11328:11329   */\n      0x04\n        /* \"#utility.yul\":11321:11336   */\n      mstore\n        /* \"#utility.yul\":11355:11359   */\n      0x24\n        /* \"#utility.yul\":11352:11353   */\n      0x00\n        /* \"#utility.yul\":11345:11360   */\n      revert\n        /* \"#utility.yul\":11372:11543   */\n    tag_233:\n        /* \"#utility.yul\":11411:11414   */\n      0x00\n        /* \"#utility.yul\":11434:11458   */\n      tag_496\n        /* \"#utility.yul\":11452:11457   */\n      dup3\n        /* \"#utility.yul\":11434:11458   */\n      tag_354\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":11425:11458   */\n      swap2\n      pop\n        /* \"#utility.yul\":11480:11484   */\n      0x00\n        /* \"#utility.yul\":11473:11478   */\n      dup3\n        /* \"#utility.yul\":11470:11485   */\n      sub\n        /* \"#utility.yul\":11467:11508   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":11488:11506   */\n      tag_498\n      tag_364\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11467:11508   */\n    tag_497:\n        /* \"#utility.yul\":11535:11536   */\n      0x01\n        /* \"#utility.yul\":11528:11533   */\n      dup3\n        /* \"#utility.yul\":11524:11537   */\n      sub\n        /* \"#utility.yul\":11517:11537   */\n      swap1\n      pop\n        /* \"#utility.yul\":11372:11543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11549:11782   */\n    tag_235:\n        /* \"#utility.yul\":11588:11591   */\n      0x00\n        /* \"#utility.yul\":11611:11635   */\n      tag_500\n        /* \"#utility.yul\":11629:11634   */\n      dup3\n        /* \"#utility.yul\":11611:11635   */\n      tag_354\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":11602:11635   */\n      swap2\n      pop\n        /* \"#utility.yul\":11657:11723   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11650:11655   */\n      dup3\n        /* \"#utility.yul\":11647:11724   */\n      sub\n        /* \"#utility.yul\":11644:11747   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":11727:11745   */\n      tag_502\n      tag_364\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11644:11747   */\n    tag_501:\n        /* \"#utility.yul\":11774:11775   */\n      0x01\n        /* \"#utility.yul\":11767:11772   */\n      dup3\n        /* \"#utility.yul\":11763:11776   */\n      add\n        /* \"#utility.yul\":11756:11776   */\n      swap1\n      pop\n        /* \"#utility.yul\":11549:11782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11788:12230   */\n    tag_254:\n        /* \"#utility.yul\":11937:11941   */\n      0x00\n        /* \"#utility.yul\":11975:11977   */\n      0x60\n        /* \"#utility.yul\":11964:11973   */\n      dup3\n        /* \"#utility.yul\":11960:11978   */\n      add\n        /* \"#utility.yul\":11952:11978   */\n      swap1\n      pop\n        /* \"#utility.yul\":11988:12059   */\n      tag_504\n        /* \"#utility.yul\":12056:12057   */\n      0x00\n        /* \"#utility.yul\":12045:12054   */\n      dup4\n        /* \"#utility.yul\":12041:12058   */\n      add\n        /* \"#utility.yul\":12032:12038   */\n      dup7\n        /* \"#utility.yul\":11988:12059   */\n      tag_362\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":12069:12141   */\n      tag_505\n        /* \"#utility.yul\":12137:12139   */\n      0x20\n        /* \"#utility.yul\":12126:12135   */\n      dup4\n        /* \"#utility.yul\":12122:12140   */\n      add\n        /* \"#utility.yul\":12113:12119   */\n      dup6\n        /* \"#utility.yul\":12069:12141   */\n      tag_359\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":12151:12223   */\n      tag_506\n        /* \"#utility.yul\":12219:12221   */\n      0x40\n        /* \"#utility.yul\":12208:12217   */\n      dup4\n        /* \"#utility.yul\":12204:12222   */\n      add\n        /* \"#utility.yul\":12195:12201   */\n      dup5\n        /* \"#utility.yul\":12151:12223   */\n      tag_359\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11788:12230   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:12413   */\n    tag_371:\n        /* \"#utility.yul\":12376:12405   */\n      0x546f6b656e207472616e73666572207768696c65207061757365640000000000\n        /* \"#utility.yul\":12372:12373   */\n      0x00\n        /* \"#utility.yul\":12364:12370   */\n      dup3\n        /* \"#utility.yul\":12360:12374   */\n      add\n        /* \"#utility.yul\":12353:12406   */\n      mstore\n        /* \"#utility.yul\":12236:12413   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12419:12785   */\n    tag_372:\n        /* \"#utility.yul\":12561:12564   */\n      0x00\n        /* \"#utility.yul\":12582:12649   */\n      tag_509\n        /* \"#utility.yul\":12646:12648   */\n      0x1b\n        /* \"#utility.yul\":12641:12644   */\n      dup4\n        /* \"#utility.yul\":12582:12649   */\n      tag_343\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":12575:12649   */\n      swap2\n      pop\n        /* \"#utility.yul\":12658:12751   */\n      tag_510\n        /* \"#utility.yul\":12747:12750   */\n      dup3\n        /* \"#utility.yul\":12658:12751   */\n      tag_371\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12776:12778   */\n      0x20\n        /* \"#utility.yul\":12771:12774   */\n      dup3\n        /* \"#utility.yul\":12767:12779   */\n      add\n        /* \"#utility.yul\":12760:12779   */\n      swap1\n      pop\n        /* \"#utility.yul\":12419:12785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12791:13210   */\n    tag_301:\n        /* \"#utility.yul\":12957:12961   */\n      0x00\n        /* \"#utility.yul\":12995:12997   */\n      0x20\n        /* \"#utility.yul\":12984:12993   */\n      dup3\n        /* \"#utility.yul\":12980:12998   */\n      add\n        /* \"#utility.yul\":12972:12998   */\n      swap1\n      pop\n        /* \"#utility.yul\":13044:13053   */\n      dup2\n        /* \"#utility.yul\":13038:13042   */\n      dup2\n        /* \"#utility.yul\":13034:13054   */\n      sub\n        /* \"#utility.yul\":13030:13031   */\n      0x00\n        /* \"#utility.yul\":13019:13028   */\n      dup4\n        /* \"#utility.yul\":13015:13032   */\n      add\n        /* \"#utility.yul\":13008:13055   */\n      mstore\n        /* \"#utility.yul\":13072:13203   */\n      tag_512\n        /* \"#utility.yul\":13198:13202   */\n      dup2\n        /* \"#utility.yul\":13072:13203   */\n      tag_372\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":13064:13203   */\n      swap1\n      pop\n        /* \"#utility.yul\":12791:13210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13216:13458   */\n    tag_373:\n        /* \"#utility.yul\":13356:13390   */\n      0x45524332304c6f636b61626c653a207472616e7366657220616d6f756e742065\n        /* \"#utility.yul\":13352:13353   */\n      0x00\n        /* \"#utility.yul\":13344:13350   */\n      dup3\n        /* \"#utility.yul\":13340:13354   */\n      add\n        /* \"#utility.yul\":13333:13391   */\n      mstore\n        /* \"#utility.yul\":13425:13450   */\n      0x78636565647320756e6c6f636b65642062616c616e6365000000000000000000\n        /* \"#utility.yul\":13420:13422   */\n      0x20\n        /* \"#utility.yul\":13412:13418   */\n      dup3\n        /* \"#utility.yul\":13408:13423   */\n      add\n        /* \"#utility.yul\":13401:13451   */\n      mstore\n        /* \"#utility.yul\":13216:13458   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13464:13830   */\n    tag_374:\n        /* \"#utility.yul\":13606:13609   */\n      0x00\n        /* \"#utility.yul\":13627:13694   */\n      tag_515\n        /* \"#utility.yul\":13691:13693   */\n      0x37\n        /* \"#utility.yul\":13686:13689   */\n      dup4\n        /* \"#utility.yul\":13627:13694   */\n      tag_343\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":13620:13694   */\n      swap2\n      pop\n        /* \"#utility.yul\":13703:13796   */\n      tag_516\n        /* \"#utility.yul\":13792:13795   */\n      dup3\n        /* \"#utility.yul\":13703:13796   */\n      tag_373\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":13821:13823   */\n      0x40\n        /* \"#utility.yul\":13816:13819   */\n      dup3\n        /* \"#utility.yul\":13812:13824   */\n      add\n        /* \"#utility.yul\":13805:13824   */\n      swap1\n      pop\n        /* \"#utility.yul\":13464:13830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13836:14255   */\n    tag_306:\n        /* \"#utility.yul\":14002:14006   */\n      0x00\n        /* \"#utility.yul\":14040:14042   */\n      0x20\n        /* \"#utility.yul\":14029:14038   */\n      dup3\n        /* \"#utility.yul\":14025:14043   */\n      add\n        /* \"#utility.yul\":14017:14043   */\n      swap1\n      pop\n        /* \"#utility.yul\":14089:14098   */\n      dup2\n        /* \"#utility.yul\":14083:14087   */\n      dup2\n        /* \"#utility.yul\":14079:14099   */\n      sub\n        /* \"#utility.yul\":14075:14076   */\n      0x00\n        /* \"#utility.yul\":14064:14073   */\n      dup4\n        /* \"#utility.yul\":14060:14077   */\n      add\n        /* \"#utility.yul\":14053:14100   */\n      mstore\n        /* \"#utility.yul\":14117:14248   */\n      tag_518\n        /* \"#utility.yul\":14243:14247   */\n      dup2\n        /* \"#utility.yul\":14117:14248   */\n      tag_374\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":14109:14248   */\n      swap1\n      pop\n        /* \"#utility.yul\":13836:14255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14261:14431   */\n    tag_375:\n        /* \"#utility.yul\":14401:14423   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":14397:14398   */\n      0x00\n        /* \"#utility.yul\":14389:14395   */\n      dup3\n        /* \"#utility.yul\":14385:14399   */\n      add\n        /* \"#utility.yul\":14378:14424   */\n      mstore\n        /* \"#utility.yul\":14261:14431   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14437:14803   */\n    tag_376:\n        /* \"#utility.yul\":14579:14582   */\n      0x00\n        /* \"#utility.yul\":14600:14667   */\n      tag_521\n        /* \"#utility.yul\":14664:14666   */\n      0x14\n        /* \"#utility.yul\":14659:14662   */\n      dup4\n        /* \"#utility.yul\":14600:14667   */\n      tag_343\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":14593:14667   */\n      swap2\n      pop\n        /* \"#utility.yul\":14676:14769   */\n      tag_522\n        /* \"#utility.yul\":14765:14768   */\n      dup3\n        /* \"#utility.yul\":14676:14769   */\n      tag_375\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14794:14796   */\n      0x20\n        /* \"#utility.yul\":14789:14792   */\n      dup3\n        /* \"#utility.yul\":14785:14797   */\n      add\n        /* \"#utility.yul\":14778:14797   */\n      swap1\n      pop\n        /* \"#utility.yul\":14437:14803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14809:15228   */\n    tag_313:\n        /* \"#utility.yul\":14975:14979   */\n      0x00\n        /* \"#utility.yul\":15013:15015   */\n      0x20\n        /* \"#utility.yul\":15002:15011   */\n      dup3\n        /* \"#utility.yul\":14998:15016   */\n      add\n        /* \"#utility.yul\":14990:15016   */\n      swap1\n      pop\n        /* \"#utility.yul\":15062:15071   */\n      dup2\n        /* \"#utility.yul\":15056:15060   */\n      dup2\n        /* \"#utility.yul\":15052:15072   */\n      sub\n        /* \"#utility.yul\":15048:15049   */\n      0x00\n        /* \"#utility.yul\":15037:15046   */\n      dup4\n        /* \"#utility.yul\":15033:15050   */\n      add\n        /* \"#utility.yul\":15026:15073   */\n      mstore\n        /* \"#utility.yul\":15090:15221   */\n      tag_524\n        /* \"#utility.yul\":15216:15220   */\n      dup2\n        /* \"#utility.yul\":15090:15221   */\n      tag_376\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":15082:15221   */\n      swap1\n      pop\n        /* \"#utility.yul\":14809:15228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15234:15400   */\n    tag_377:\n        /* \"#utility.yul\":15374:15392   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":15370:15371   */\n      0x00\n        /* \"#utility.yul\":15362:15368   */\n      dup3\n        /* \"#utility.yul\":15358:15372   */\n      add\n        /* \"#utility.yul\":15351:15393   */\n      mstore\n        /* \"#utility.yul\":15234:15400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15406:15772   */\n    tag_378:\n        /* \"#utility.yul\":15548:15551   */\n      0x00\n        /* \"#utility.yul\":15569:15636   */\n      tag_527\n        /* \"#utility.yul\":15633:15635   */\n      0x10\n        /* \"#utility.yul\":15628:15631   */\n      dup4\n        /* \"#utility.yul\":15569:15636   */\n      tag_343\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15562:15636   */\n      swap2\n      pop\n        /* \"#utility.yul\":15645:15738   */\n      tag_528\n        /* \"#utility.yul\":15734:15737   */\n      dup3\n        /* \"#utility.yul\":15645:15738   */\n      tag_377\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15763:15765   */\n      0x20\n        /* \"#utility.yul\":15758:15761   */\n      dup3\n        /* \"#utility.yul\":15754:15766   */\n      add\n        /* \"#utility.yul\":15747:15766   */\n      swap1\n      pop\n        /* \"#utility.yul\":15406:15772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15778:16197   */\n    tag_318:\n        /* \"#utility.yul\":15944:15948   */\n      0x00\n        /* \"#utility.yul\":15982:15984   */\n      0x20\n        /* \"#utility.yul\":15971:15980   */\n      dup3\n        /* \"#utility.yul\":15967:15985   */\n      add\n        /* \"#utility.yul\":15959:15985   */\n      swap1\n      pop\n        /* \"#utility.yul\":16031:16040   */\n      dup2\n        /* \"#utility.yul\":16025:16029   */\n      dup2\n        /* \"#utility.yul\":16021:16041   */\n      sub\n        /* \"#utility.yul\":16017:16018   */\n      0x00\n        /* \"#utility.yul\":16006:16015   */\n      dup4\n        /* \"#utility.yul\":16002:16019   */\n      add\n        /* \"#utility.yul\":15995:16042   */\n      mstore\n        /* \"#utility.yul\":16059:16190   */\n      tag_530\n        /* \"#utility.yul\":16185:16189   */\n      dup2\n        /* \"#utility.yul\":16059:16190   */\n      tag_378\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16051:16190   */\n      swap1\n      pop\n        /* \"#utility.yul\":15778:16197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ed3aabeb9a17af9a9f5702530c563b6cb58638c2894b51b5f741a3570429679a64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1164": {
									"entryPoint": null,
									"id": 1164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkLock_1485": {
									"entryPoint": 1085,
									"id": 1485,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_747": {
									"entryPoint": 512,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 315,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1219": {
									"entryPoint": 650,
									"id": 1219,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 1441,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOf_493": {
									"entryPoint": 1989,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1044,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_336": {
									"entryPoint": 1023,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4454,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3524,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3614,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2588,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4276,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2075,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2079,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2071,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d": {
									"entryPoint": 4128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15677:9",
										"nodeType": "YulBlock",
										"src": "0:15677:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "423:28:9",
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:9",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:12:9",
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nativeSrc": "433:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nativeSrc": "546:28:9",
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:9",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:9",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nativeSrc": "556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nativeSrc": "556:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nativeSrc": "628:54:9",
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nativeSrc": "638:38:9",
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:9",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nativeSrc": "652:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:9",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nativeSrc": "668:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nativeSrc": "648:28:9",
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:9",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:9",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nativeSrc": "716:152:9",
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:9",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:9",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nativeSrc": "726:88:9",
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nativeSrc": "726:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:9",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:9",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nativeSrc": "823:15:9",
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nativeSrc": "823:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:9",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:9",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nativeSrc": "847:15:9",
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nativeSrc": "847:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nativeSrc": "917:238:9",
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nativeSrc": "927:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nativeSrc": "957:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nativeSrc": "945:40:9",
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:9",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:9",
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nativeSrc": "1098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nativeSrc": "1098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:9",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nativeSrc": "1036:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nativeSrc": "1072:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nativeSrc": "1033:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nativeSrc": "1030:88:9",
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nativeSrc": "1127:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nativeSrc": "1127:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:9",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:9",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nativeSrc": "1202:88:9",
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nativeSrc": "1212:30:9",
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nativeSrc": "1222:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nativeSrc": "1251:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nativeSrc": "1251:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:9",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:9",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nativeSrc": "1363:241:9",
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:9",
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nativeSrc": "1470:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nativeSrc": "1470:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nativeSrc": "1437:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nativeSrc": "1434:56:9",
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nativeSrc": "1500:37:9",
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nativeSrc": "1508:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nativeSrc": "1574:23:9",
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nativeSrc": "1582:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:9",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:9",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nativeSrc": "1672:184:9",
													"nodeType": "YulBlock",
													"src": "1672:184:9",
													"statements": [
														{
															"nativeSrc": "1682:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:9",
																"nodeType": "YulLiteral",
																"src": "1691:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:9",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:9",
																"nodeType": "YulBlock",
																"src": "1751:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:9"
																					},
																					"nativeSrc": "1772:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:9"
																							},
																							"nativeSrc": "1791:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:9"
																					},
																					"nativeSrc": "1785:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:9"
																			},
																			"nativeSrc": "1765:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:9"
																		},
																		"nativeSrc": "1765:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:9"
																},
																"nativeSrc": "1709:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:9"
															},
															"nativeSrc": "1701:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:9",
																"nodeType": "YulBlock",
																"src": "1723:19:9",
																"statements": [
																	{
																		"nativeSrc": "1725:15:9",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:9",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:9"
																			},
																			"nativeSrc": "1730:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:9",
																"nodeType": "YulBlock",
																"src": "1705:3:9",
																"statements": []
															},
															"src": "1701:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:9"
																		},
																		"nativeSrc": "1830:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:9"
																},
																"nativeSrc": "1823:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:9"
															},
															"nativeSrc": "1823:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:9",
														"nodeType": "YulTypedName",
														"src": "1654:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:9",
														"nodeType": "YulTypedName",
														"src": "1659:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:9",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"src": "1610:246:9"
											},
											{
												"body": {
													"nativeSrc": "1957:339:9",
													"nodeType": "YulBlock",
													"src": "1957:339:9",
													"statements": [
														{
															"nativeSrc": "1967:75:9",
															"nodeType": "YulAssignment",
															"src": "1967:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:9"
																		},
																		"nativeSrc": "1992:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:9"
																},
																"nativeSrc": "1976:66:9",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:9"
																},
																"nativeSrc": "2051:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:9"
															},
															"nativeSrc": "2051:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:9"
														},
														{
															"nativeSrc": "2081:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:9"
																},
																"nativeSrc": "2092:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:9",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:9",
																"nodeType": "YulBlock",
																"src": "2146:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:9"
																			},
																			"nativeSrc": "2148:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:9"
																		},
																		"nativeSrc": "2148:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:9"
																		},
																		"nativeSrc": "2123:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:9"
																},
																"nativeSrc": "2120:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:9"
															},
															"nativeSrc": "2117:112:9",
															"nodeType": "YulIf",
															"src": "2117:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:9"
																},
																"nativeSrc": "2238:52:9",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:9"
															},
															"nativeSrc": "2238:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:9",
														"nodeType": "YulTypedName",
														"src": "1930:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:9",
														"nodeType": "YulTypedName",
														"src": "1935:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:9",
														"nodeType": "YulTypedName",
														"src": "1943:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:9",
														"nodeType": "YulTypedName",
														"src": "1951:5:9",
														"type": ""
													}
												],
												"src": "1862:434:9"
											},
											{
												"body": {
													"nativeSrc": "2389:282:9",
													"nodeType": "YulBlock",
													"src": "2389:282:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:9",
																"nodeType": "YulBlock",
																"src": "2438:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:9"
																			},
																			"nativeSrc": "2440:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:9"
																		},
																		"nativeSrc": "2440:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:9"
																				},
																				"nativeSrc": "2413:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:9"
																		},
																		"nativeSrc": "2409:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:9"
																},
																"nativeSrc": "2402:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:9"
															},
															"nativeSrc": "2399:122:9",
															"nodeType": "YulIf",
															"src": "2399:122:9"
														},
														{
															"nativeSrc": "2530:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:9"
																},
																"nativeSrc": "2544:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:9",
															"nodeType": "YulAssignment",
															"src": "2566:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:9"
																		},
																		"nativeSrc": "2634:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:9"
																},
																"nativeSrc": "2575:90:9",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:9",
														"nodeType": "YulTypedName",
														"src": "2367:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:9",
														"nodeType": "YulTypedName",
														"src": "2375:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:9",
														"nodeType": "YulTypedName",
														"src": "2383:5:9",
														"type": ""
													}
												],
												"src": "2316:355:9"
											},
											{
												"body": {
													"nativeSrc": "2791:739:9",
													"nodeType": "YulBlock",
													"src": "2791:739:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2837:83:9",
																"nodeType": "YulBlock",
																"src": "2837:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2839:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:9"
																			},
																			"nativeSrc": "2839:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:9"
																		},
																		"nativeSrc": "2839:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2812:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2821:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:9"
																		},
																		"nativeSrc": "2808:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2833:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2804:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:9"
																},
																"nativeSrc": "2804:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2804:32:9"
															},
															"nativeSrc": "2801:119:9",
															"nodeType": "YulIf",
															"src": "2801:119:9"
														},
														{
															"nativeSrc": "2930:291:9",
															"nodeType": "YulBlock",
															"src": "2930:291:9",
															"statements": [
																{
																	"nativeSrc": "2945:38:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2969:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2980:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2965:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:9"
																				},
																				"nativeSrc": "2965:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2959:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:9"
																		},
																		"nativeSrc": "2959:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2949:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3030:83:9",
																		"nodeType": "YulBlock",
																		"src": "3030:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3032:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:9"
																					},
																					"nativeSrc": "3032:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:9"
																				},
																				"nativeSrc": "3032:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3002:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3010:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2999:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:9"
																		},
																		"nativeSrc": "2999:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:9"
																	},
																	"nativeSrc": "2996:117:9",
																	"nodeType": "YulIf",
																	"src": "2996:117:9"
																},
																{
																	"nativeSrc": "3127:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3127:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3183:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3194:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3179:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:9"
																				},
																				"nativeSrc": "3179:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3203:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3137:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:9"
																		},
																		"nativeSrc": "3137:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3127:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3231:292:9",
															"nodeType": "YulBlock",
															"src": "3231:292:9",
															"statements": [
																{
																	"nativeSrc": "3246:39:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3270:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3281:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:9"
																				},
																				"nativeSrc": "3266:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3260:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:9"
																		},
																		"nativeSrc": "3260:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3250:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3332:83:9",
																		"nodeType": "YulBlock",
																		"src": "3332:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3334:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:9"
																					},
																					"nativeSrc": "3334:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:9"
																				},
																				"nativeSrc": "3334:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3304:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3312:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3301:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:9"
																		},
																		"nativeSrc": "3301:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:9"
																	},
																	"nativeSrc": "3298:117:9",
																	"nodeType": "YulIf",
																	"src": "3298:117:9"
																},
																{
																	"nativeSrc": "3429:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3429:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3485:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3496:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3481:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:9"
																				},
																				"nativeSrc": "3481:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3505:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3439:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:9"
																		},
																		"nativeSrc": "3439:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3429:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2677:853:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2753:9:9",
														"nodeType": "YulTypedName",
														"src": "2753:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2764:7:9",
														"nodeType": "YulTypedName",
														"src": "2764:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2776:6:9",
														"nodeType": "YulTypedName",
														"src": "2776:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2784:6:9",
														"nodeType": "YulTypedName",
														"src": "2784:6:9",
														"type": ""
													}
												],
												"src": "2677:853:9"
											},
											{
												"body": {
													"nativeSrc": "3595:40:9",
													"nodeType": "YulBlock",
													"src": "3595:40:9",
													"statements": [
														{
															"nativeSrc": "3606:22:9",
															"nodeType": "YulAssignment",
															"src": "3606:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3622:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3616:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:9"
																},
																"nativeSrc": "3616:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3616:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3606:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3536:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:9",
														"nodeType": "YulTypedName",
														"src": "3578:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3588:6:9",
														"nodeType": "YulTypedName",
														"src": "3588:6:9",
														"type": ""
													}
												],
												"src": "3536:99:9"
											},
											{
												"body": {
													"nativeSrc": "3669:152:9",
													"nodeType": "YulBlock",
													"src": "3669:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3686:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3689:77:9",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3679:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:9"
																},
																"nativeSrc": "3679:88:9",
																"nodeType": "YulFunctionCall",
																"src": "3679:88:9"
															},
															"nativeSrc": "3679:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3783:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3776:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:9"
																},
																"nativeSrc": "3776:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3776:15:9"
															},
															"nativeSrc": "3776:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3807:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3810:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3800:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:9"
																},
																"nativeSrc": "3800:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3800:15:9"
															},
															"nativeSrc": "3800:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3641:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:9"
											},
											{
												"body": {
													"nativeSrc": "3878:269:9",
													"nodeType": "YulBlock",
													"src": "3878:269:9",
													"statements": [
														{
															"nativeSrc": "3888:22:9",
															"nodeType": "YulAssignment",
															"src": "3888:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3902:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3908:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3898:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:9"
																},
																"nativeSrc": "3898:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3898:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3888:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:9"
																}
															]
														},
														{
															"nativeSrc": "3919:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3949:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3955:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:9"
																},
																"nativeSrc": "3945:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3945:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3923:18:9",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3996:51:9",
																"nodeType": "YulBlock",
																"src": "3996:51:9",
																"statements": [
																	{
																		"nativeSrc": "4010:27:9",
																		"nodeType": "YulAssignment",
																		"src": "4010:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4024:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4032:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4020:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:9"
																			},
																			"nativeSrc": "4020:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4010:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3976:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3969:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:9"
																},
																"nativeSrc": "3969:26:9",
																"nodeType": "YulFunctionCall",
																"src": "3969:26:9"
															},
															"nativeSrc": "3966:81:9",
															"nodeType": "YulIf",
															"src": "3966:81:9"
														},
														{
															"body": {
																"nativeSrc": "4099:42:9",
																"nodeType": "YulBlock",
																"src": "4099:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4113:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:9"
																			},
																			"nativeSrc": "4113:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:9"
																		},
																		"nativeSrc": "4113:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4063:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4086:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4094:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4083:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:9"
																		},
																		"nativeSrc": "4083:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4060:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:9"
																},
																"nativeSrc": "4060:38:9",
																"nodeType": "YulFunctionCall",
																"src": "4060:38:9"
															},
															"nativeSrc": "4057:84:9",
															"nodeType": "YulIf",
															"src": "4057:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3827:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3862:4:9",
														"nodeType": "YulTypedName",
														"src": "3862:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3871:6:9",
														"nodeType": "YulTypedName",
														"src": "3871:6:9",
														"type": ""
													}
												],
												"src": "3827:320:9"
											},
											{
												"body": {
													"nativeSrc": "4207:87:9",
													"nodeType": "YulBlock",
													"src": "4207:87:9",
													"statements": [
														{
															"nativeSrc": "4217:11:9",
															"nodeType": "YulAssignment",
															"src": "4217:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "4225:3:9",
																"nodeType": "YulIdentifier",
																"src": "4225:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4217:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4245:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4248:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4238:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:9"
																},
																"nativeSrc": "4238:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4238:14:9"
															},
															"nativeSrc": "4238:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:9"
														},
														{
															"nativeSrc": "4261:26:9",
															"nodeType": "YulAssignment",
															"src": "4261:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4279:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4282:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4269:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:9"
																},
																"nativeSrc": "4269:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4269:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4261:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4153:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4194:3:9",
														"nodeType": "YulTypedName",
														"src": "4194:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4202:4:9",
														"nodeType": "YulTypedName",
														"src": "4202:4:9",
														"type": ""
													}
												],
												"src": "4153:141:9"
											},
											{
												"body": {
													"nativeSrc": "4344:49:9",
													"nodeType": "YulBlock",
													"src": "4344:49:9",
													"statements": [
														{
															"nativeSrc": "4354:33:9",
															"nodeType": "YulAssignment",
															"src": "4354:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4372:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4379:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4368:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:9"
																		},
																		"nativeSrc": "4368:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4364:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:9"
																},
																"nativeSrc": "4364:23:9",
																"nodeType": "YulFunctionCall",
																"src": "4364:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4354:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4300:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4327:5:9",
														"nodeType": "YulTypedName",
														"src": "4327:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4337:6:9",
														"nodeType": "YulTypedName",
														"src": "4337:6:9",
														"type": ""
													}
												],
												"src": "4300:93:9"
											},
											{
												"body": {
													"nativeSrc": "4452:54:9",
													"nodeType": "YulBlock",
													"src": "4452:54:9",
													"statements": [
														{
															"nativeSrc": "4462:37:9",
															"nodeType": "YulAssignment",
															"src": "4462:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4487:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4483:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:9"
																},
																"nativeSrc": "4483:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4483:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4462:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4399:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4427:4:9",
														"nodeType": "YulTypedName",
														"src": "4427:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4433:5:9",
														"nodeType": "YulTypedName",
														"src": "4433:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4443:8:9",
														"nodeType": "YulTypedName",
														"src": "4443:8:9",
														"type": ""
													}
												],
												"src": "4399:107:9"
											},
											{
												"body": {
													"nativeSrc": "4588:317:9",
													"nodeType": "YulBlock",
													"src": "4588:317:9",
													"statements": [
														{
															"nativeSrc": "4598:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4619:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4615:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:9"
																},
																"nativeSrc": "4615:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4615:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4602:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4642:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4673:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4684:66:9",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4654:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:9"
																},
																"nativeSrc": "4654:97:9",
																"nodeType": "YulFunctionCall",
																"src": "4654:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4646:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4760:51:9",
															"nodeType": "YulAssignment",
															"src": "4760:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4791:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4802:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4772:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:9"
																},
																"nativeSrc": "4772:39:9",
																"nodeType": "YulFunctionCall",
																"src": "4772:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4760:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:9"
																}
															]
														},
														{
															"nativeSrc": "4820:30:9",
															"nodeType": "YulAssignment",
															"src": "4820:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4833:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4844:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4840:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:9"
																		},
																		"nativeSrc": "4840:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4829:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:9"
																},
																"nativeSrc": "4829:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4829:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4820:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:9"
																}
															]
														},
														{
															"nativeSrc": "4859:40:9",
															"nodeType": "YulAssignment",
															"src": "4859:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4872:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4883:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4893:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4879:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:9"
																		},
																		"nativeSrc": "4879:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4869:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:9"
																},
																"nativeSrc": "4869:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4869:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4859:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4512:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4549:5:9",
														"nodeType": "YulTypedName",
														"src": "4549:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4556:10:9",
														"nodeType": "YulTypedName",
														"src": "4556:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4568:8:9",
														"nodeType": "YulTypedName",
														"src": "4568:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4581:6:9",
														"nodeType": "YulTypedName",
														"src": "4581:6:9",
														"type": ""
													}
												],
												"src": "4512:393:9"
											},
											{
												"body": {
													"nativeSrc": "4956:32:9",
													"nodeType": "YulBlock",
													"src": "4956:32:9",
													"statements": [
														{
															"nativeSrc": "4966:16:9",
															"nodeType": "YulAssignment",
															"src": "4966:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "4977:5:9",
																"nodeType": "YulIdentifier",
																"src": "4977:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4966:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4911:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4938:5:9",
														"nodeType": "YulTypedName",
														"src": "4938:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4948:7:9",
														"nodeType": "YulTypedName",
														"src": "4948:7:9",
														"type": ""
													}
												],
												"src": "4911:77:9"
											},
											{
												"body": {
													"nativeSrc": "5026:28:9",
													"nodeType": "YulBlock",
													"src": "5026:28:9",
													"statements": [
														{
															"nativeSrc": "5036:12:9",
															"nodeType": "YulAssignment",
															"src": "5036:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5043:5:9",
																"nodeType": "YulIdentifier",
																"src": "5043:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5036:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4994:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5012:5:9",
														"nodeType": "YulTypedName",
														"src": "5012:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5022:3:9",
														"nodeType": "YulTypedName",
														"src": "5022:3:9",
														"type": ""
													}
												],
												"src": "4994:60:9"
											},
											{
												"body": {
													"nativeSrc": "5120:82:9",
													"nodeType": "YulBlock",
													"src": "5120:82:9",
													"statements": [
														{
															"nativeSrc": "5130:66:9",
															"nodeType": "YulAssignment",
															"src": "5130:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5188:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5170:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:9"
																				},
																				"nativeSrc": "5170:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5161:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:9"
																		},
																		"nativeSrc": "5161:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5143:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:9"
																},
																"nativeSrc": "5143:53:9",
																"nodeType": "YulFunctionCall",
																"src": "5143:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5130:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5060:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:9",
														"nodeType": "YulTypedName",
														"src": "5100:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5110:9:9",
														"nodeType": "YulTypedName",
														"src": "5110:9:9",
														"type": ""
													}
												],
												"src": "5060:142:9"
											},
											{
												"body": {
													"nativeSrc": "5255:28:9",
													"nodeType": "YulBlock",
													"src": "5255:28:9",
													"statements": [
														{
															"nativeSrc": "5265:12:9",
															"nodeType": "YulAssignment",
															"src": "5265:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5272:5:9",
																"nodeType": "YulIdentifier",
																"src": "5272:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5265:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5208:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:9",
														"nodeType": "YulTypedName",
														"src": "5241:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5251:3:9",
														"nodeType": "YulTypedName",
														"src": "5251:3:9",
														"type": ""
													}
												],
												"src": "5208:75:9"
											},
											{
												"body": {
													"nativeSrc": "5365:193:9",
													"nodeType": "YulBlock",
													"src": "5365:193:9",
													"statements": [
														{
															"nativeSrc": "5375:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5430:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5399:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:9"
																},
																"nativeSrc": "5399:39:9",
																"nodeType": "YulFunctionCall",
																"src": "5399:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5379:16:9",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5454:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5494:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5488:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:9"
																				},
																				"nativeSrc": "5488:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5501:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5533:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5509:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:9"
																				},
																				"nativeSrc": "5509:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5460:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:9"
																		},
																		"nativeSrc": "5460:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5447:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:9"
																},
																"nativeSrc": "5447:105:9",
																"nodeType": "YulFunctionCall",
																"src": "5447:105:9"
															},
															"nativeSrc": "5447:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5289:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5342:4:9",
														"nodeType": "YulTypedName",
														"src": "5342:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5348:6:9",
														"nodeType": "YulTypedName",
														"src": "5348:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5356:7:9",
														"nodeType": "YulTypedName",
														"src": "5356:7:9",
														"type": ""
													}
												],
												"src": "5289:269:9"
											},
											{
												"body": {
													"nativeSrc": "5613:24:9",
													"nodeType": "YulBlock",
													"src": "5613:24:9",
													"statements": [
														{
															"nativeSrc": "5623:8:9",
															"nodeType": "YulAssignment",
															"src": "5623:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5630:1:9",
																"nodeType": "YulLiteral",
																"src": "5630:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5623:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5564:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5609:3:9",
														"nodeType": "YulTypedName",
														"src": "5609:3:9",
														"type": ""
													}
												],
												"src": "5564:73:9"
											},
											{
												"body": {
													"nativeSrc": "5696:136:9",
													"nodeType": "YulBlock",
													"src": "5696:136:9",
													"statements": [
														{
															"nativeSrc": "5706:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5720:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:9"
																},
																"nativeSrc": "5720:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5720:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5710:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5805:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5811:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5819:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5761:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:9"
																},
																"nativeSrc": "5761:65:9",
																"nodeType": "YulFunctionCall",
																"src": "5761:65:9"
															},
															"nativeSrc": "5761:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5643:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5682:4:9",
														"nodeType": "YulTypedName",
														"src": "5682:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5688:6:9",
														"nodeType": "YulTypedName",
														"src": "5688:6:9",
														"type": ""
													}
												],
												"src": "5643:189:9"
											},
											{
												"body": {
													"nativeSrc": "5888:136:9",
													"nodeType": "YulBlock",
													"src": "5888:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5955:63:9",
																"nodeType": "YulBlock",
																"src": "5955:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5999:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6006:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5969:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:9"
																			},
																			"nativeSrc": "5969:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:9"
																		},
																		"nativeSrc": "5969:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5908:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5915:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5905:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:9"
																},
																"nativeSrc": "5905:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5905:14:9"
															},
															"nativeSrc": "5898:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5920:26:9",
																"nodeType": "YulBlock",
																"src": "5920:26:9",
																"statements": [
																	{
																		"nativeSrc": "5922:22:9",
																		"nodeType": "YulAssignment",
																		"src": "5922:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5935:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5942:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5931:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:9"
																			},
																			"nativeSrc": "5931:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5922:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5902:2:9",
																"nodeType": "YulBlock",
																"src": "5902:2:9",
																"statements": []
															},
															"src": "5898:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5838:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5876:5:9",
														"nodeType": "YulTypedName",
														"src": "5876:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5883:3:9",
														"nodeType": "YulTypedName",
														"src": "5883:3:9",
														"type": ""
													}
												],
												"src": "5838:186:9"
											},
											{
												"body": {
													"nativeSrc": "6109:464:9",
													"nodeType": "YulBlock",
													"src": "6109:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6135:431:9",
																"nodeType": "YulBlock",
																"src": "6135:431:9",
																"statements": [
																	{
																		"nativeSrc": "6149:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6197:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6165:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:9"
																			},
																			"nativeSrc": "6165:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6153:8:9",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6216:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6239:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6267:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6249:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:9"
																					},
																					"nativeSrc": "6249:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6235:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:9"
																			},
																			"nativeSrc": "6235:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6220:11:9",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6436:27:9",
																			"nodeType": "YulBlock",
																			"src": "6436:27:9",
																			"statements": [
																				{
																					"nativeSrc": "6438:23:9",
																					"nodeType": "YulAssignment",
																					"src": "6438:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6453:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6438:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6420:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6432:2:9",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6417:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:9"
																			},
																			"nativeSrc": "6417:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:9"
																		},
																		"nativeSrc": "6414:49:9",
																		"nodeType": "YulIf",
																		"src": "6414:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6505:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6522:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6550:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6532:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:9"
																							},
																							"nativeSrc": "6532:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6518:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:9"
																					},
																					"nativeSrc": "6518:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6476:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:9"
																			},
																			"nativeSrc": "6476:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:9"
																		},
																		"nativeSrc": "6476:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6126:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6131:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6123:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:9"
																},
																"nativeSrc": "6123:11:9",
																"nodeType": "YulFunctionCall",
																"src": "6123:11:9"
															},
															"nativeSrc": "6120:446:9",
															"nodeType": "YulIf",
															"src": "6120:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6030:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6085:5:9",
														"nodeType": "YulTypedName",
														"src": "6085:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6092:3:9",
														"nodeType": "YulTypedName",
														"src": "6092:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6097:10:9",
														"nodeType": "YulTypedName",
														"src": "6097:10:9",
														"type": ""
													}
												],
												"src": "6030:543:9"
											},
											{
												"body": {
													"nativeSrc": "6642:54:9",
													"nodeType": "YulBlock",
													"src": "6642:54:9",
													"statements": [
														{
															"nativeSrc": "6652:37:9",
															"nodeType": "YulAssignment",
															"src": "6652:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6677:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6683:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6673:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:9"
																},
																"nativeSrc": "6673:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6673:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6652:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6579:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6617:4:9",
														"nodeType": "YulTypedName",
														"src": "6617:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6623:5:9",
														"nodeType": "YulTypedName",
														"src": "6623:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6633:8:9",
														"nodeType": "YulTypedName",
														"src": "6633:8:9",
														"type": ""
													}
												],
												"src": "6579:117:9"
											},
											{
												"body": {
													"nativeSrc": "6753:118:9",
													"nodeType": "YulBlock",
													"src": "6753:118:9",
													"statements": [
														{
															"nativeSrc": "6763:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6812:1:9",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6815:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6808:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:9"
																				},
																				"nativeSrc": "6808:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6827:1:9",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6823:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:9"
																				},
																				"nativeSrc": "6823:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6779:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:9"
																		},
																		"nativeSrc": "6779:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6775:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:9"
																},
																"nativeSrc": "6775:56:9",
																"nodeType": "YulFunctionCall",
																"src": "6775:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6767:4:9",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6840:25:9",
															"nodeType": "YulAssignment",
															"src": "6840:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6854:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6860:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6850:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:9"
																},
																"nativeSrc": "6850:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6850:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6840:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6702:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6730:4:9",
														"nodeType": "YulTypedName",
														"src": "6730:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6736:5:9",
														"nodeType": "YulTypedName",
														"src": "6736:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6746:6:9",
														"nodeType": "YulTypedName",
														"src": "6746:6:9",
														"type": ""
													}
												],
												"src": "6702:169:9"
											},
											{
												"body": {
													"nativeSrc": "6957:214:9",
													"nodeType": "YulBlock",
													"src": "6957:214:9",
													"statements": [
														{
															"nativeSrc": "7090:37:9",
															"nodeType": "YulAssignment",
															"src": "7090:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7117:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7123:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7098:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:9"
																},
																"nativeSrc": "7098:29:9",
																"nodeType": "YulFunctionCall",
																"src": "7098:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7090:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:9"
																}
															]
														},
														{
															"nativeSrc": "7136:29:9",
															"nodeType": "YulAssignment",
															"src": "7136:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7147:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7157:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7160:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7153:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:9"
																		},
																		"nativeSrc": "7153:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7144:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:9"
																},
																"nativeSrc": "7144:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7144:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7136:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6876:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6938:4:9",
														"nodeType": "YulTypedName",
														"src": "6938:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6944:3:9",
														"nodeType": "YulTypedName",
														"src": "6944:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6952:4:9",
														"nodeType": "YulTypedName",
														"src": "6952:4:9",
														"type": ""
													}
												],
												"src": "6876:295:9"
											},
											{
												"body": {
													"nativeSrc": "7268:1303:9",
													"nodeType": "YulBlock",
													"src": "7268:1303:9",
													"statements": [
														{
															"nativeSrc": "7279:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7326:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7293:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:9"
																},
																"nativeSrc": "7293:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7293:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7283:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7415:22:9",
																"nodeType": "YulBlock",
																"src": "7415:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7417:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:9"
																			},
																			"nativeSrc": "7417:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:9"
																		},
																		"nativeSrc": "7417:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7387:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7395:18:9",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7384:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:9"
																},
																"nativeSrc": "7384:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7384:30:9"
															},
															"nativeSrc": "7381:56:9",
															"nodeType": "YulIf",
															"src": "7381:56:9"
														},
														{
															"nativeSrc": "7447:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7493:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7487:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:9"
																		},
																		"nativeSrc": "7487:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7461:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:9"
																},
																"nativeSrc": "7461:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7461:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7451:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7592:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7598:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7606:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7546:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:9"
																},
																"nativeSrc": "7546:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7546:67:9"
															},
															"nativeSrc": "7546:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:9"
														},
														{
															"nativeSrc": "7623:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7640:1:9",
																"nodeType": "YulLiteral",
																"src": "7640:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7627:9:9",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7651:17:9",
															"nodeType": "YulAssignment",
															"src": "7651:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7664:4:9",
																"nodeType": "YulLiteral",
																"src": "7664:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7651:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7715:611:9",
																		"nodeType": "YulBlock",
																		"src": "7715:611:9",
																		"statements": [
																			{
																				"nativeSrc": "7729:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7748:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7760:4:9",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7756:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:9"
																							},
																							"nativeSrc": "7756:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7744:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:9"
																					},
																					"nativeSrc": "7744:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7733:7:9",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7780:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7826:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7794:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:9"
																					},
																					"nativeSrc": "7794:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7784:6:9",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7844:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7853:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7848:1:9",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7912:163:9",
																					"nodeType": "YulBlock",
																					"src": "7912:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7937:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7955:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7960:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7951:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:9"
																												},
																												"nativeSrc": "7951:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7945:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:9"
																										},
																										"nativeSrc": "7945:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7930:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:9"
																								},
																								"nativeSrc": "7930:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:9"
																							},
																							"nativeSrc": "7930:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:9"
																						},
																						{
																							"nativeSrc": "7989:24:9",
																							"nodeType": "YulAssignment",
																							"src": "7989:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8003:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8011:1:9",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7999:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:9"
																								},
																								"nativeSrc": "7999:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7989:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8030:31:9",
																							"nodeType": "YulAssignment",
																							"src": "8030:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8047:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8058:2:9",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8043:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:9"
																								},
																								"nativeSrc": "8043:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8030:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7878:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7881:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7875:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:9"
																					},
																					"nativeSrc": "7875:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:9"
																				},
																				"nativeSrc": "7867:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7890:21:9",
																					"nodeType": "YulBlock",
																					"src": "7890:21:9",
																					"statements": [
																						{
																							"nativeSrc": "7892:17:9",
																							"nodeType": "YulAssignment",
																							"src": "7892:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7901:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:4:9",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7897:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:9"
																								},
																								"nativeSrc": "7897:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7892:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7871:3:9",
																					"nodeType": "YulBlock",
																					"src": "7871:3:9",
																					"statements": []
																				},
																				"src": "7867:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "8111:156:9",
																					"nodeType": "YulBlock",
																					"src": "8111:156:9",
																					"statements": [
																						{
																							"nativeSrc": "8129:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8156:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8161:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8152:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:9"
																										},
																										"nativeSrc": "8152:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8146:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:9"
																								},
																								"nativeSrc": "8146:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8133:9:9",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8196:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8223:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8238:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8246:4:9",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8234:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:9"
																												},
																												"nativeSrc": "8234:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8204:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:9"
																										},
																										"nativeSrc": "8204:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8189:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:9"
																								},
																								"nativeSrc": "8189:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:9"
																							},
																							"nativeSrc": "8189:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8094:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8103:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8091:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:9"
																					},
																					"nativeSrc": "8091:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:9"
																				},
																				"nativeSrc": "8088:179:9",
																				"nodeType": "YulIf",
																				"src": "8088:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8287:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8301:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8309:1:9",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8297:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:9"
																									},
																									"nativeSrc": "8297:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8313:1:9",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8293:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:9"
																							},
																							"nativeSrc": "8293:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8280:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:9"
																					},
																					"nativeSrc": "8280:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:9"
																				},
																				"nativeSrc": "8280:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:9"
																			}
																		]
																	},
																	"nativeSrc": "7708:618:9",
																	"nodeType": "YulCase",
																	"src": "7708:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7713:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8343:222:9",
																		"nodeType": "YulBlock",
																		"src": "8343:222:9",
																		"statements": [
																			{
																				"nativeSrc": "8357:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8361:5:9",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8394:67:9",
																					"nodeType": "YulBlock",
																					"src": "8394:67:9",
																					"statements": [
																						{
																							"nativeSrc": "8412:35:9",
																							"nodeType": "YulAssignment",
																							"src": "8412:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8431:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8436:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8427:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:9"
																										},
																										"nativeSrc": "8427:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8421:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:9"
																								},
																								"nativeSrc": "8421:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8412:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8387:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:9"
																				},
																				"nativeSrc": "8384:77:9",
																				"nodeType": "YulIf",
																				"src": "8384:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8481:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8540:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8547:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8487:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:9"
																							},
																							"nativeSrc": "8487:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8474:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:9"
																					},
																					"nativeSrc": "8474:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:9"
																				},
																				"nativeSrc": "8474:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:9"
																			}
																		]
																	},
																	"nativeSrc": "8335:230:9",
																	"nodeType": "YulCase",
																	"src": "8335:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7688:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7696:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7685:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:9"
																},
																"nativeSrc": "7685:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7685:14:9"
															},
															"nativeSrc": "7678:887:9",
															"nodeType": "YulSwitch",
															"src": "7678:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7176:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7257:4:9",
														"nodeType": "YulTypedName",
														"src": "7257:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7263:3:9",
														"nodeType": "YulTypedName",
														"src": "7263:3:9",
														"type": ""
													}
												],
												"src": "7176:1395:9"
											},
											{
												"body": {
													"nativeSrc": "8622:81:9",
													"nodeType": "YulBlock",
													"src": "8622:81:9",
													"statements": [
														{
															"nativeSrc": "8632:65:9",
															"nodeType": "YulAssignment",
															"src": "8632:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8647:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8647:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8654:42:9",
																		"nodeType": "YulLiteral",
																		"src": "8654:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8643:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8643:3:9"
																},
																"nativeSrc": "8643:54:9",
																"nodeType": "YulFunctionCall",
																"src": "8643:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8632:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8632:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8577:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8604:5:9",
														"nodeType": "YulTypedName",
														"src": "8604:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8614:7:9",
														"nodeType": "YulTypedName",
														"src": "8614:7:9",
														"type": ""
													}
												],
												"src": "8577:126:9"
											},
											{
												"body": {
													"nativeSrc": "8754:51:9",
													"nodeType": "YulBlock",
													"src": "8754:51:9",
													"statements": [
														{
															"nativeSrc": "8764:35:9",
															"nodeType": "YulAssignment",
															"src": "8764:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8793:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8793:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8775:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8775:17:9"
																},
																"nativeSrc": "8775:24:9",
																"nodeType": "YulFunctionCall",
																"src": "8775:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8764:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8764:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8709:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8736:5:9",
														"nodeType": "YulTypedName",
														"src": "8736:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8746:7:9",
														"nodeType": "YulTypedName",
														"src": "8746:7:9",
														"type": ""
													}
												],
												"src": "8709:96:9"
											},
											{
												"body": {
													"nativeSrc": "8876:53:9",
													"nodeType": "YulBlock",
													"src": "8876:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8893:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8893:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8916:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8916:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8898:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8898:17:9"
																		},
																		"nativeSrc": "8898:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8898:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8886:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8886:6:9"
																},
																"nativeSrc": "8886:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8886:37:9"
															},
															"nativeSrc": "8886:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8886:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8811:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8864:5:9",
														"nodeType": "YulTypedName",
														"src": "8864:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8871:3:9",
														"nodeType": "YulTypedName",
														"src": "8871:3:9",
														"type": ""
													}
												],
												"src": "8811:118:9"
											},
											{
												"body": {
													"nativeSrc": "9033:124:9",
													"nodeType": "YulBlock",
													"src": "9033:124:9",
													"statements": [
														{
															"nativeSrc": "9043:26:9",
															"nodeType": "YulAssignment",
															"src": "9043:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9055:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9055:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9066:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9066:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9051:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9051:3:9"
																},
																"nativeSrc": "9051:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9051:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9043:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9043:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9123:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9123:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9136:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9136:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9147:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9147:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9132:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9132:3:9"
																		},
																		"nativeSrc": "9132:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9132:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9079:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9079:43:9"
																},
																"nativeSrc": "9079:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9079:71:9"
															},
															"nativeSrc": "9079:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9079:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8935:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9005:9:9",
														"nodeType": "YulTypedName",
														"src": "9005:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9017:6:9",
														"nodeType": "YulTypedName",
														"src": "9017:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9028:4:9",
														"nodeType": "YulTypedName",
														"src": "9028:4:9",
														"type": ""
													}
												],
												"src": "8935:222:9"
											},
											{
												"body": {
													"nativeSrc": "9191:152:9",
													"nodeType": "YulBlock",
													"src": "9191:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9208:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9208:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9211:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9211:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9201:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9201:6:9"
																},
																"nativeSrc": "9201:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9201:88:9"
															},
															"nativeSrc": "9201:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9201:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9305:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9305:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9308:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9308:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9298:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9298:6:9"
																},
																"nativeSrc": "9298:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9298:15:9"
															},
															"nativeSrc": "9298:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9298:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9329:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9329:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9332:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9332:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9322:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9322:6:9"
																},
																"nativeSrc": "9322:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9322:15:9"
															},
															"nativeSrc": "9322:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9322:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9163:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9163:180:9"
											},
											{
												"body": {
													"nativeSrc": "9400:51:9",
													"nodeType": "YulBlock",
													"src": "9400:51:9",
													"statements": [
														{
															"nativeSrc": "9410:34:9",
															"nodeType": "YulAssignment",
															"src": "9410:34:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9435:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9435:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9438:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9438:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9431:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9431:3:9"
																},
																"nativeSrc": "9431:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9431:13:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9410:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "9410:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9349:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9381:5:9",
														"nodeType": "YulTypedName",
														"src": "9381:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9391:8:9",
														"nodeType": "YulTypedName",
														"src": "9391:8:9",
														"type": ""
													}
												],
												"src": "9349:102:9"
											},
											{
												"body": {
													"nativeSrc": "9530:775:9",
													"nodeType": "YulBlock",
													"src": "9530:775:9",
													"statements": [
														{
															"nativeSrc": "9540:15:9",
															"nodeType": "YulAssignment",
															"src": "9540:15:9",
															"value": {
																"name": "_power",
																"nativeSrc": "9549:6:9",
																"nodeType": "YulIdentifier",
																"src": "9549:6:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9540:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9540:5:9"
																}
															]
														},
														{
															"nativeSrc": "9564:14:9",
															"nodeType": "YulAssignment",
															"src": "9564:14:9",
															"value": {
																"name": "_base",
																"nativeSrc": "9573:5:9",
																"nodeType": "YulIdentifier",
																"src": "9573:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9564:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9564:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9622:677:9",
																"nodeType": "YulBlock",
																"src": "9622:677:9",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9710:22:9",
																			"nodeType": "YulBlock",
																			"src": "9710:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9712:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "9712:16:9"
																						},
																						"nativeSrc": "9712:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "9712:18:9"
																					},
																					"nativeSrc": "9712:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "9712:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9688:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "9688:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9698:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "9698:3:9"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9703:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "9703:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9694:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "9694:3:9"
																					},
																					"nativeSrc": "9694:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9694:14:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9685:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "9685:2:9"
																			},
																			"nativeSrc": "9685:24:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9685:24:9"
																		},
																		"nativeSrc": "9682:50:9",
																		"nodeType": "YulIf",
																		"src": "9682:50:9"
																	},
																	{
																		"body": {
																			"nativeSrc": "9777:419:9",
																			"nodeType": "YulBlock",
																			"src": "9777:419:9",
																			"statements": [
																				{
																					"nativeSrc": "10157:25:9",
																					"nodeType": "YulAssignment",
																					"src": "10157:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10170:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "10170:5:9"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10177:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "10177:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10166:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10166:3:9"
																						},
																						"nativeSrc": "10166:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10166:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10157:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "10157:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9752:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "9752:8:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9762:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9762:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9748:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9748:3:9"
																			},
																			"nativeSrc": "9748:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9748:16:9"
																		},
																		"nativeSrc": "9745:451:9",
																		"nodeType": "YulIf",
																		"src": "9745:451:9"
																	},
																	{
																		"nativeSrc": "10209:23:9",
																		"nodeType": "YulAssignment",
																		"src": "10209:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10221:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "10221:4:9"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10227:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "10227:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10217:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10217:3:9"
																			},
																			"nativeSrc": "10217:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10217:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10209:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10209:4:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10245:44:9",
																		"nodeType": "YulAssignment",
																		"src": "10245:44:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10280:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "10280:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10257:22:9",
																				"nodeType": "YulIdentifier",
																				"src": "10257:22:9"
																			},
																			"nativeSrc": "10257:32:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10257:32:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10245:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "10245:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9598:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "9598:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9608:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9608:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9595:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9595:2:9"
																},
																"nativeSrc": "9595:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9595:15:9"
															},
															"nativeSrc": "9587:712:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9611:2:9",
																"nodeType": "YulBlock",
																"src": "9611:2:9",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9591:3:9",
																"nodeType": "YulBlock",
																"src": "9591:3:9",
																"statements": []
															},
															"src": "9587:712:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9457:848:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9485:6:9",
														"nodeType": "YulTypedName",
														"src": "9485:6:9",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9493:5:9",
														"nodeType": "YulTypedName",
														"src": "9493:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9500:8:9",
														"nodeType": "YulTypedName",
														"src": "9500:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9510:3:9",
														"nodeType": "YulTypedName",
														"src": "9510:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9518:5:9",
														"nodeType": "YulTypedName",
														"src": "9518:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9525:4:9",
														"nodeType": "YulTypedName",
														"src": "9525:4:9",
														"type": ""
													}
												],
												"src": "9457:848:9"
											},
											{
												"body": {
													"nativeSrc": "10371:1013:9",
													"nodeType": "YulBlock",
													"src": "10371:1013:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10566:20:9",
																"nodeType": "YulBlock",
																"src": "10566:20:9",
																"statements": [
																	{
																		"nativeSrc": "10568:10:9",
																		"nodeType": "YulAssignment",
																		"src": "10568:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10577:1:9",
																			"nodeType": "YulLiteral",
																			"src": "10577:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10568:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10568:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10579:5:9",
																		"nodeType": "YulLeave",
																		"src": "10579:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10556:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "10556:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10549:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10549:6:9"
																},
																"nativeSrc": "10549:16:9",
																"nodeType": "YulFunctionCall",
																"src": "10549:16:9"
															},
															"nativeSrc": "10546:40:9",
															"nodeType": "YulIf",
															"src": "10546:40:9"
														},
														{
															"body": {
																"nativeSrc": "10611:20:9",
																"nodeType": "YulBlock",
																"src": "10611:20:9",
																"statements": [
																	{
																		"nativeSrc": "10613:10:9",
																		"nodeType": "YulAssignment",
																		"src": "10613:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10622:1:9",
																			"nodeType": "YulLiteral",
																			"src": "10622:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10613:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10613:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10624:5:9",
																		"nodeType": "YulLeave",
																		"src": "10624:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10605:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10605:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10598:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10598:6:9"
																},
																"nativeSrc": "10598:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10598:12:9"
															},
															"nativeSrc": "10595:36:9",
															"nodeType": "YulIf",
															"src": "10595:36:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10741:20:9",
																		"nodeType": "YulBlock",
																		"src": "10741:20:9",
																		"statements": [
																			{
																				"nativeSrc": "10743:10:9",
																				"nodeType": "YulAssignment",
																				"src": "10743:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10752:1:9",
																					"nodeType": "YulLiteral",
																					"src": "10752:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10743:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "10743:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10754:5:9",
																				"nodeType": "YulLeave",
																				"src": "10754:5:9"
																			}
																		]
																	},
																	"nativeSrc": "10734:27:9",
																	"nodeType": "YulCase",
																	"src": "10734:27:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10739:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10739:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10785:176:9",
																		"nodeType": "YulBlock",
																		"src": "10785:176:9",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10820:22:9",
																					"nodeType": "YulBlock",
																					"src": "10820:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10822:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "10822:16:9"
																								},
																								"nativeSrc": "10822:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "10822:18:9"
																							},
																							"nativeSrc": "10822:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "10822:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10805:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "10805:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10815:3:9",
																							"nodeType": "YulLiteral",
																							"src": "10815:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10802:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "10802:2:9"
																					},
																					"nativeSrc": "10802:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "10802:17:9"
																				},
																				"nativeSrc": "10799:43:9",
																				"nodeType": "YulIf",
																				"src": "10799:43:9"
																			},
																			{
																				"nativeSrc": "10855:25:9",
																				"nodeType": "YulAssignment",
																				"src": "10855:25:9",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10868:1:9",
																							"nodeType": "YulLiteral",
																							"src": "10868:1:9",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "10871:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "10871:8:9"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "10864:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "10864:3:9"
																					},
																					"nativeSrc": "10864:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "10864:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10855:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "10855:5:9"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10911:22:9",
																					"nodeType": "YulBlock",
																					"src": "10911:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10913:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "10913:16:9"
																								},
																								"nativeSrc": "10913:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "10913:18:9"
																							},
																							"nativeSrc": "10913:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "10913:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "10899:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "10899:5:9"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "10906:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10906:3:9"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10896:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "10896:2:9"
																					},
																					"nativeSrc": "10896:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "10896:14:9"
																				},
																				"nativeSrc": "10893:40:9",
																				"nodeType": "YulIf",
																				"src": "10893:40:9"
																			},
																			{
																				"nativeSrc": "10946:5:9",
																				"nodeType": "YulLeave",
																				"src": "10946:5:9"
																			}
																		]
																	},
																	"nativeSrc": "10770:191:9",
																	"nodeType": "YulCase",
																	"src": "10770:191:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10775:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10775:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10691:4:9",
																"nodeType": "YulIdentifier",
																"src": "10691:4:9"
															},
															"nativeSrc": "10684:277:9",
															"nodeType": "YulSwitch",
															"src": "10684:277:9"
														},
														{
															"body": {
																"nativeSrc": "11093:123:9",
																"nodeType": "YulBlock",
																"src": "11093:123:9",
																"statements": [
																	{
																		"nativeSrc": "11107:28:9",
																		"nodeType": "YulAssignment",
																		"src": "11107:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11120:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "11120:4:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11126:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "11126:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11116:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "11116:3:9"
																			},
																			"nativeSrc": "11116:19:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11116:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11107:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11107:5:9"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11166:22:9",
																			"nodeType": "YulBlock",
																			"src": "11166:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11168:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "11168:16:9"
																						},
																						"nativeSrc": "11168:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "11168:18:9"
																					},
																					"nativeSrc": "11168:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "11168:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11154:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "11154:5:9"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11161:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "11161:3:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11151:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "11151:2:9"
																			},
																			"nativeSrc": "11151:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11151:14:9"
																		},
																		"nativeSrc": "11148:40:9",
																		"nodeType": "YulIf",
																		"src": "11148:40:9"
																	},
																	{
																		"nativeSrc": "11201:5:9",
																		"nodeType": "YulLeave",
																		"src": "11201:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10996:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "10996:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11002:2:9",
																						"nodeType": "YulLiteral",
																						"src": "11002:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10993:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "10993:2:9"
																				},
																				"nativeSrc": "10993:12:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10993:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11010:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "11010:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11020:2:9",
																						"nodeType": "YulLiteral",
																						"src": "11020:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11007:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11007:2:9"
																				},
																				"nativeSrc": "11007:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11007:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10989:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10989:3:9"
																		},
																		"nativeSrc": "10989:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10989:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11045:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "11045:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11051:3:9",
																						"nodeType": "YulLiteral",
																						"src": "11051:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11042:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11042:2:9"
																				},
																				"nativeSrc": "11042:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11042:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11060:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "11060:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11070:2:9",
																						"nodeType": "YulLiteral",
																						"src": "11070:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11057:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11057:2:9"
																				},
																				"nativeSrc": "11057:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11057:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11038:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11038:3:9"
																		},
																		"nativeSrc": "11038:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11038:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10973:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10973:2:9"
																},
																"nativeSrc": "10973:111:9",
																"nodeType": "YulFunctionCall",
																"src": "10973:111:9"
															},
															"nativeSrc": "10970:246:9",
															"nodeType": "YulIf",
															"src": "10970:246:9"
														},
														{
															"nativeSrc": "11226:57:9",
															"nodeType": "YulAssignment",
															"src": "11226:57:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11260:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11260:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11263:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11263:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11269:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "11269:8:9"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11279:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11279:3:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11241:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "11241:18:9"
																},
																"nativeSrc": "11241:42:9",
																"nodeType": "YulFunctionCall",
																"src": "11241:42:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11226:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11226:5:9"
																},
																{
																	"name": "base",
																	"nativeSrc": "11233:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11233:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11322:22:9",
																"nodeType": "YulBlock",
																"src": "11322:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11324:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11324:16:9"
																			},
																			"nativeSrc": "11324:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11324:18:9"
																		},
																		"nativeSrc": "11324:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11324:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11299:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11299:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11310:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "11310:3:9"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11315:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11315:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11306:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11306:3:9"
																		},
																		"nativeSrc": "11306:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11306:14:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11296:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11296:2:9"
																},
																"nativeSrc": "11296:25:9",
																"nodeType": "YulFunctionCall",
																"src": "11296:25:9"
															},
															"nativeSrc": "11293:51:9",
															"nodeType": "YulIf",
															"src": "11293:51:9"
														},
														{
															"nativeSrc": "11353:25:9",
															"nodeType": "YulAssignment",
															"src": "11353:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11366:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11366:5:9"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11373:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11373:4:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11362:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:9"
																},
																"nativeSrc": "11362:16:9",
																"nodeType": "YulFunctionCall",
																"src": "11362:16:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11353:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11353:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10311:1073:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10341:4:9",
														"nodeType": "YulTypedName",
														"src": "10341:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10347:8:9",
														"nodeType": "YulTypedName",
														"src": "10347:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10357:3:9",
														"nodeType": "YulTypedName",
														"src": "10357:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10365:5:9",
														"nodeType": "YulTypedName",
														"src": "10365:5:9",
														"type": ""
													}
												],
												"src": "10311:1073:9"
											},
											{
												"body": {
													"nativeSrc": "11456:219:9",
													"nodeType": "YulBlock",
													"src": "11456:219:9",
													"statements": [
														{
															"nativeSrc": "11466:31:9",
															"nodeType": "YulAssignment",
															"src": "11466:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11492:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11492:4:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11474:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11474:17:9"
																},
																"nativeSrc": "11474:23:9",
																"nodeType": "YulFunctionCall",
																"src": "11474:23:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11466:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11466:4:9"
																}
															]
														},
														{
															"nativeSrc": "11506:39:9",
															"nodeType": "YulAssignment",
															"src": "11506:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11536:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "11536:8:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11518:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11518:17:9"
																},
																"nativeSrc": "11518:27:9",
																"nodeType": "YulFunctionCall",
																"src": "11518:27:9"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "11506:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "11506:8:9"
																}
															]
														},
														{
															"nativeSrc": "11555:113:9",
															"nodeType": "YulAssignment",
															"src": "11555:113:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11585:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11585:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11591:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "11591:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11601:66:9",
																		"nodeType": "YulLiteral",
																		"src": "11601:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11564:20:9",
																	"nodeType": "YulIdentifier",
																	"src": "11564:20:9"
																},
																"nativeSrc": "11564:104:9",
																"nodeType": "YulFunctionCall",
																"src": "11564:104:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11555:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11555:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "11390:285:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11431:4:9",
														"nodeType": "YulTypedName",
														"src": "11431:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11437:8:9",
														"nodeType": "YulTypedName",
														"src": "11437:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11450:5:9",
														"nodeType": "YulTypedName",
														"src": "11450:5:9",
														"type": ""
													}
												],
												"src": "11390:285:9"
											},
											{
												"body": {
													"nativeSrc": "11729:362:9",
													"nodeType": "YulBlock",
													"src": "11729:362:9",
													"statements": [
														{
															"nativeSrc": "11739:25:9",
															"nodeType": "YulAssignment",
															"src": "11739:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11762:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11762:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11744:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11744:17:9"
																},
																"nativeSrc": "11744:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11744:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11739:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11739:1:9"
																}
															]
														},
														{
															"nativeSrc": "11773:25:9",
															"nodeType": "YulAssignment",
															"src": "11773:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11796:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11796:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11778:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11778:17:9"
																},
																"nativeSrc": "11778:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11778:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11773:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11773:1:9"
																}
															]
														},
														{
															"nativeSrc": "11807:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "11807:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11830:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11830:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11833:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11833:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11826:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11826:3:9"
																},
																"nativeSrc": "11826:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11826:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11811:11:9",
																	"nodeType": "YulTypedName",
																	"src": "11811:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11844:41:9",
															"nodeType": "YulAssignment",
															"src": "11844:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11873:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "11873:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11855:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11855:17:9"
																},
																"nativeSrc": "11855:30:9",
																"nodeType": "YulFunctionCall",
																"src": "11855:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11844:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "11844:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12062:22:9",
																"nodeType": "YulBlock",
																"src": "12062:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12064:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12064:16:9"
																			},
																			"nativeSrc": "12064:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12064:18:9"
																		},
																		"nativeSrc": "12064:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12064:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11995:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "11995:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11988:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "11988:6:9"
																				},
																				"nativeSrc": "11988:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11988:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12018:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "12018:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12025:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "12025:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12034:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "12034:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12021:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "12021:3:9"
																						},
																						"nativeSrc": "12021:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "12021:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12015:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "12015:2:9"
																				},
																				"nativeSrc": "12015:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12015:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11968:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "11968:2:9"
																		},
																		"nativeSrc": "11968:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11968:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11948:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11948:6:9"
																},
																"nativeSrc": "11948:113:9",
																"nodeType": "YulFunctionCall",
																"src": "11948:113:9"
															},
															"nativeSrc": "11945:139:9",
															"nodeType": "YulIf",
															"src": "11945:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11681:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11712:1:9",
														"nodeType": "YulTypedName",
														"src": "11712:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11715:1:9",
														"nodeType": "YulTypedName",
														"src": "11715:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11721:7:9",
														"nodeType": "YulTypedName",
														"src": "11721:7:9",
														"type": ""
													}
												],
												"src": "11681:410:9"
											},
											{
												"body": {
													"nativeSrc": "12193:73:9",
													"nodeType": "YulBlock",
													"src": "12193:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12210:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12210:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12215:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12203:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:9"
																},
																"nativeSrc": "12203:19:9",
																"nodeType": "YulFunctionCall",
																"src": "12203:19:9"
															},
															"nativeSrc": "12203:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "12203:19:9"
														},
														{
															"nativeSrc": "12231:29:9",
															"nodeType": "YulAssignment",
															"src": "12231:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12250:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12250:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12255:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12255:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12246:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12246:3:9"
																},
																"nativeSrc": "12246:14:9",
																"nodeType": "YulFunctionCall",
																"src": "12246:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12231:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "12231:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "12097:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12165:3:9",
														"nodeType": "YulTypedName",
														"src": "12165:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12170:6:9",
														"nodeType": "YulTypedName",
														"src": "12170:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12181:11:9",
														"nodeType": "YulTypedName",
														"src": "12181:11:9",
														"type": ""
													}
												],
												"src": "12097:169:9"
											},
											{
												"body": {
													"nativeSrc": "12378:71:9",
													"nodeType": "YulBlock",
													"src": "12378:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12400:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12400:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12408:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12408:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12396:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12396:3:9"
																		},
																		"nativeSrc": "12396:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12396:14:9"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572207768696c6520706175736564",
																		"kind": "string",
																		"nativeSrc": "12412:29:9",
																		"nodeType": "YulLiteral",
																		"src": "12412:29:9",
																		"type": "",
																		"value": "Token transfer while paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12389:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12389:6:9"
																},
																"nativeSrc": "12389:53:9",
																"nodeType": "YulFunctionCall",
																"src": "12389:53:9"
															},
															"nativeSrc": "12389:53:9",
															"nodeType": "YulExpressionStatement",
															"src": "12389:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65",
												"nativeSrc": "12272:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12370:6:9",
														"nodeType": "YulTypedName",
														"src": "12370:6:9",
														"type": ""
													}
												],
												"src": "12272:177:9"
											},
											{
												"body": {
													"nativeSrc": "12601:220:9",
													"nodeType": "YulBlock",
													"src": "12601:220:9",
													"statements": [
														{
															"nativeSrc": "12611:74:9",
															"nodeType": "YulAssignment",
															"src": "12611:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12677:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12677:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12682:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12682:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12618:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12618:58:9"
																},
																"nativeSrc": "12618:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12618:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12611:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12611:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12783:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12783:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65",
																	"nativeSrc": "12694:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12694:88:9"
																},
																"nativeSrc": "12694:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12694:93:9"
															},
															"nativeSrc": "12694:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12694:93:9"
														},
														{
															"nativeSrc": "12796:19:9",
															"nodeType": "YulAssignment",
															"src": "12796:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12807:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12807:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12812:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12812:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12803:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12803:3:9"
																},
																"nativeSrc": "12803:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12803:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12796:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12796:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12455:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12589:3:9",
														"nodeType": "YulTypedName",
														"src": "12589:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12597:3:9",
														"nodeType": "YulTypedName",
														"src": "12597:3:9",
														"type": ""
													}
												],
												"src": "12455:366:9"
											},
											{
												"body": {
													"nativeSrc": "12998:248:9",
													"nodeType": "YulBlock",
													"src": "12998:248:9",
													"statements": [
														{
															"nativeSrc": "13008:26:9",
															"nodeType": "YulAssignment",
															"src": "13008:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13020:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13020:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13031:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13031:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13016:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13016:3:9"
																},
																"nativeSrc": "13016:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13016:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13008:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13008:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13055:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13055:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13066:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13066:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13051:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13051:3:9"
																		},
																		"nativeSrc": "13051:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13051:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13074:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13074:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13080:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13080:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13070:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13070:3:9"
																		},
																		"nativeSrc": "13070:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13070:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13044:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13044:6:9"
																},
																"nativeSrc": "13044:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13044:47:9"
															},
															"nativeSrc": "13044:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13044:47:9"
														},
														{
															"nativeSrc": "13100:139:9",
															"nodeType": "YulAssignment",
															"src": "13100:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13234:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13234:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13108:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13108:124:9"
																},
																"nativeSrc": "13108:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13108:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13100:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13100:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12827:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12978:9:9",
														"nodeType": "YulTypedName",
														"src": "12978:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12993:4:9",
														"nodeType": "YulTypedName",
														"src": "12993:4:9",
														"type": ""
													}
												],
												"src": "12827:419:9"
											},
											{
												"body": {
													"nativeSrc": "13358:136:9",
													"nodeType": "YulBlock",
													"src": "13358:136:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13380:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13380:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13388:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13388:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13376:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13376:3:9"
																		},
																		"nativeSrc": "13376:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13376:14:9"
																	},
																	{
																		"hexValue": "45524332304c6f636b61626c653a207472616e7366657220616d6f756e742065",
																		"kind": "string",
																		"nativeSrc": "13392:34:9",
																		"nodeType": "YulLiteral",
																		"src": "13392:34:9",
																		"type": "",
																		"value": "ERC20Lockable: transfer amount e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13369:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13369:6:9"
																},
																"nativeSrc": "13369:58:9",
																"nodeType": "YulFunctionCall",
																"src": "13369:58:9"
															},
															"nativeSrc": "13369:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "13369:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13448:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13448:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13456:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13456:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13444:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13444:3:9"
																		},
																		"nativeSrc": "13444:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13444:15:9"
																	},
																	{
																		"hexValue": "78636565647320756e6c6f636b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "13461:25:9",
																		"nodeType": "YulLiteral",
																		"src": "13461:25:9",
																		"type": "",
																		"value": "xceeds unlocked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13437:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13437:6:9"
																},
																"nativeSrc": "13437:50:9",
																"nodeType": "YulFunctionCall",
																"src": "13437:50:9"
															},
															"nativeSrc": "13437:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "13437:50:9"
														}
													]
												},
												"name": "store_literal_in_memory_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d",
												"nativeSrc": "13252:242:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13350:6:9",
														"nodeType": "YulTypedName",
														"src": "13350:6:9",
														"type": ""
													}
												],
												"src": "13252:242:9"
											},
											{
												"body": {
													"nativeSrc": "13646:220:9",
													"nodeType": "YulBlock",
													"src": "13646:220:9",
													"statements": [
														{
															"nativeSrc": "13656:74:9",
															"nodeType": "YulAssignment",
															"src": "13656:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13722:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13722:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13727:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13727:2:9",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13663:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13663:58:9"
																},
																"nativeSrc": "13663:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13663:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13656:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13656:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13828:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13828:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d",
																	"nativeSrc": "13739:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13739:88:9"
																},
																"nativeSrc": "13739:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13739:93:9"
															},
															"nativeSrc": "13739:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13739:93:9"
														},
														{
															"nativeSrc": "13841:19:9",
															"nodeType": "YulAssignment",
															"src": "13841:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13852:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13852:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13857:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13857:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13848:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13848:3:9"
																},
																"nativeSrc": "13848:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13848:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13841:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13841:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13500:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13634:3:9",
														"nodeType": "YulTypedName",
														"src": "13634:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13642:3:9",
														"nodeType": "YulTypedName",
														"src": "13642:3:9",
														"type": ""
													}
												],
												"src": "13500:366:9"
											},
											{
												"body": {
													"nativeSrc": "14043:248:9",
													"nodeType": "YulBlock",
													"src": "14043:248:9",
													"statements": [
														{
															"nativeSrc": "14053:26:9",
															"nodeType": "YulAssignment",
															"src": "14053:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14065:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14065:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14076:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14076:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14061:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14061:3:9"
																},
																"nativeSrc": "14061:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14061:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14053:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14053:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14100:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14100:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14111:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14111:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14096:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14096:3:9"
																		},
																		"nativeSrc": "14096:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14096:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14119:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14119:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14125:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14115:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14115:3:9"
																		},
																		"nativeSrc": "14115:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14115:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14089:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14089:6:9"
																},
																"nativeSrc": "14089:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14089:47:9"
															},
															"nativeSrc": "14089:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14089:47:9"
														},
														{
															"nativeSrc": "14145:139:9",
															"nodeType": "YulAssignment",
															"src": "14145:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14279:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14153:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14153:124:9"
																},
																"nativeSrc": "14153:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14153:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14145:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14145:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13872:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14023:9:9",
														"nodeType": "YulTypedName",
														"src": "14023:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14038:4:9",
														"nodeType": "YulTypedName",
														"src": "14038:4:9",
														"type": ""
													}
												],
												"src": "13872:419:9"
											},
											{
												"body": {
													"nativeSrc": "14325:152:9",
													"nodeType": "YulBlock",
													"src": "14325:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14342:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14342:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14345:77:9",
																		"nodeType": "YulLiteral",
																		"src": "14345:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14335:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14335:6:9"
																},
																"nativeSrc": "14335:88:9",
																"nodeType": "YulFunctionCall",
																"src": "14335:88:9"
															},
															"nativeSrc": "14335:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "14335:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14439:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14439:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14442:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14442:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14432:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14432:6:9"
																},
																"nativeSrc": "14432:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14432:15:9"
															},
															"nativeSrc": "14432:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14432:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14463:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14463:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14466:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14466:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14456:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14456:6:9"
																},
																"nativeSrc": "14456:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14456:15:9"
															},
															"nativeSrc": "14456:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14456:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14297:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14297:180:9"
											},
											{
												"body": {
													"nativeSrc": "14527:147:9",
													"nodeType": "YulBlock",
													"src": "14527:147:9",
													"statements": [
														{
															"nativeSrc": "14537:25:9",
															"nodeType": "YulAssignment",
															"src": "14537:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14560:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14560:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14542:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14542:17:9"
																},
																"nativeSrc": "14542:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14542:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14537:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14537:1:9"
																}
															]
														},
														{
															"nativeSrc": "14571:25:9",
															"nodeType": "YulAssignment",
															"src": "14571:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14594:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14594:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14576:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14576:17:9"
																},
																"nativeSrc": "14576:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14576:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14571:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14571:1:9"
																}
															]
														},
														{
															"nativeSrc": "14605:16:9",
															"nodeType": "YulAssignment",
															"src": "14605:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14616:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14616:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14619:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14619:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14612:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14612:3:9"
																},
																"nativeSrc": "14612:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14612:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14605:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14605:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14645:22:9",
																"nodeType": "YulBlock",
																"src": "14645:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14647:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14647:16:9"
																			},
																			"nativeSrc": "14647:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14647:18:9"
																		},
																		"nativeSrc": "14647:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14647:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14637:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14637:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14640:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14640:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14634:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "14634:2:9"
																},
																"nativeSrc": "14634:10:9",
																"nodeType": "YulFunctionCall",
																"src": "14634:10:9"
															},
															"nativeSrc": "14631:36:9",
															"nodeType": "YulIf",
															"src": "14631:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14483:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14514:1:9",
														"nodeType": "YulTypedName",
														"src": "14514:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14517:1:9",
														"nodeType": "YulTypedName",
														"src": "14517:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14523:3:9",
														"nodeType": "YulTypedName",
														"src": "14523:3:9",
														"type": ""
													}
												],
												"src": "14483:191:9"
											},
											{
												"body": {
													"nativeSrc": "14725:149:9",
													"nodeType": "YulBlock",
													"src": "14725:149:9",
													"statements": [
														{
															"nativeSrc": "14735:25:9",
															"nodeType": "YulAssignment",
															"src": "14735:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14758:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14758:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14740:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14740:17:9"
																},
																"nativeSrc": "14740:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14740:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14735:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14735:1:9"
																}
															]
														},
														{
															"nativeSrc": "14769:25:9",
															"nodeType": "YulAssignment",
															"src": "14769:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14792:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14792:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14774:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14774:17:9"
																},
																"nativeSrc": "14774:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14774:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14769:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14769:1:9"
																}
															]
														},
														{
															"nativeSrc": "14803:17:9",
															"nodeType": "YulAssignment",
															"src": "14803:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14815:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14815:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14818:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14818:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14811:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14811:3:9"
																},
																"nativeSrc": "14811:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14811:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14803:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14803:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14845:22:9",
																"nodeType": "YulBlock",
																"src": "14845:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14847:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14847:16:9"
																			},
																			"nativeSrc": "14847:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14847:18:9"
																		},
																		"nativeSrc": "14847:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14847:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14836:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14836:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14842:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14842:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14833:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "14833:2:9"
																},
																"nativeSrc": "14833:11:9",
																"nodeType": "YulFunctionCall",
																"src": "14833:11:9"
															},
															"nativeSrc": "14830:37:9",
															"nodeType": "YulIf",
															"src": "14830:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14680:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14711:1:9",
														"nodeType": "YulTypedName",
														"src": "14711:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14714:1:9",
														"nodeType": "YulTypedName",
														"src": "14714:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14720:4:9",
														"nodeType": "YulTypedName",
														"src": "14720:4:9",
														"type": ""
													}
												],
												"src": "14680:194:9"
											},
											{
												"body": {
													"nativeSrc": "14945:53:9",
													"nodeType": "YulBlock",
													"src": "14945:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14962:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14962:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14985:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "14985:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14967:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "14967:17:9"
																		},
																		"nativeSrc": "14967:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14967:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14955:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14955:6:9"
																},
																"nativeSrc": "14955:37:9",
																"nodeType": "YulFunctionCall",
																"src": "14955:37:9"
															},
															"nativeSrc": "14955:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "14955:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "14880:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14933:5:9",
														"nodeType": "YulTypedName",
														"src": "14933:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14940:3:9",
														"nodeType": "YulTypedName",
														"src": "14940:3:9",
														"type": ""
													}
												],
												"src": "14880:118:9"
											},
											{
												"body": {
													"nativeSrc": "15158:288:9",
													"nodeType": "YulBlock",
													"src": "15158:288:9",
													"statements": [
														{
															"nativeSrc": "15168:26:9",
															"nodeType": "YulAssignment",
															"src": "15168:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15180:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15180:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15191:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15191:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15176:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15176:3:9"
																},
																"nativeSrc": "15176:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15176:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15168:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15168:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15248:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15248:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15261:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15261:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15272:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15272:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15257:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15257:3:9"
																		},
																		"nativeSrc": "15257:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15257:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15204:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15204:43:9"
																},
																"nativeSrc": "15204:71:9",
																"nodeType": "YulFunctionCall",
																"src": "15204:71:9"
															},
															"nativeSrc": "15204:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "15204:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15329:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15329:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15342:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15342:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15353:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15353:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15338:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15338:3:9"
																		},
																		"nativeSrc": "15338:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15338:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15285:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15285:43:9"
																},
																"nativeSrc": "15285:72:9",
																"nodeType": "YulFunctionCall",
																"src": "15285:72:9"
															},
															"nativeSrc": "15285:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "15285:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15411:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15411:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15424:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15424:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15435:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15435:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15420:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15420:3:9"
																		},
																		"nativeSrc": "15420:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15420:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15367:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15367:43:9"
																},
																"nativeSrc": "15367:72:9",
																"nodeType": "YulFunctionCall",
																"src": "15367:72:9"
															},
															"nativeSrc": "15367:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "15367:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15004:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15114:9:9",
														"nodeType": "YulTypedName",
														"src": "15114:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15126:6:9",
														"nodeType": "YulTypedName",
														"src": "15126:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15134:6:9",
														"nodeType": "YulTypedName",
														"src": "15134:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15142:6:9",
														"nodeType": "YulTypedName",
														"src": "15142:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15153:4:9",
														"nodeType": "YulTypedName",
														"src": "15153:4:9",
														"type": ""
													}
												],
												"src": "15004:442:9"
											},
											{
												"body": {
													"nativeSrc": "15550:124:9",
													"nodeType": "YulBlock",
													"src": "15550:124:9",
													"statements": [
														{
															"nativeSrc": "15560:26:9",
															"nodeType": "YulAssignment",
															"src": "15560:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15572:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15572:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15583:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15583:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15568:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15568:3:9"
																},
																"nativeSrc": "15568:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15568:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15560:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15560:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15640:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15640:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15653:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15653:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15664:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15664:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15649:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15649:3:9"
																		},
																		"nativeSrc": "15649:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15649:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15596:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15596:43:9"
																},
																"nativeSrc": "15596:71:9",
																"nodeType": "YulFunctionCall",
																"src": "15596:71:9"
															},
															"nativeSrc": "15596:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "15596:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "15452:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15522:9:9",
														"nodeType": "YulTypedName",
														"src": "15522:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15534:6:9",
														"nodeType": "YulTypedName",
														"src": "15534:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15545:4:9",
														"nodeType": "YulTypedName",
														"src": "15545:4:9",
														"type": ""
													}
												],
												"src": "15452:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer while paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Lockable: transfer amount e\")\n\n        mstore(add(memPtr, 32), \"xceeds unlocked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620035093803806200350983398181016040528101906200003691906200098f565b33828281600390816200004a919062000c49565b5080600490816200005c919062000c49565b5050505f60055f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000eb575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000e2919062000d70565b60405180910390fd5b620000fc816200013b60201b60201c565b506200013333601260ff16600a62000115919062000f08565b6402540be40062000127919062000f58565b6200020060201b60201c565b5050620011bc565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000273575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200026a919062000d70565b60405180910390fd5b620002865f83836200028a60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015620002f357505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15620003e75762000309620003ff60201b60201c565b1580620003505750620003216200041460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b62000392576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003899062001000565b60405180910390fd5b620003a483826200043d60201b60201c565b620003e6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003dd9062001094565b60405180910390fd5b5b620003fa838383620005a160201b60201c565b505050565b5f60055f9054906101000a900460ff16905090565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f90505f5b60075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905081101562000576574260075f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110620004e057620004df620010b4565b5b905f5260205f209060020201600101541115620005685760075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208181548110620005495762000548620010b4565b5b905f5260205f2090600202015f015482620005659190620010e1565b91505b808060010191505062000444565b5082816200058a86620007c560201b60201c565b6200059691906200111b565b101591505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620005f5578060025f828254620005e89190620010e1565b92505081905550620006c6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000681578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620006789392919062001166565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200070f578060025f828254039250508190555062000759565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620007b89190620011a1565b60405180910390a3505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200086b8262000823565b810181811067ffffffffffffffff821117156200088d576200088c62000833565b5b80604052505050565b5f620008a16200080a565b9050620008af828262000860565b919050565b5f67ffffffffffffffff821115620008d157620008d062000833565b5b620008dc8262000823565b9050602081019050919050565b5f5b8381101562000908578082015181840152602081019050620008eb565b5f8484015250505050565b5f620009296200092384620008b4565b62000896565b9050828152602081018484840111156200094857620009476200081f565b5b62000955848285620008e9565b509392505050565b5f82601f8301126200097457620009736200081b565b5b81516200098684826020860162000913565b91505092915050565b5f8060408385031215620009a857620009a762000813565b5b5f83015167ffffffffffffffff811115620009c857620009c762000817565b5b620009d6858286016200095d565b925050602083015167ffffffffffffffff811115620009fa57620009f962000817565b5b62000a08858286016200095d565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168062000a6157607f821691505b60208210810362000a775762000a7662000a1c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830262000adb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000a9e565b62000ae7868362000a9e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000b3162000b2b62000b258462000aff565b62000b08565b62000aff565b9050919050565b5f819050919050565b62000b4c8362000b11565b62000b6462000b5b8262000b38565b84845462000aaa565b825550505050565b5f90565b62000b7a62000b6c565b62000b8781848462000b41565b505050565b5b8181101562000bae5762000ba25f8262000b70565b60018101905062000b8d565b5050565b601f82111562000bfd5762000bc78162000a7d565b62000bd28462000a8f565b8101602085101562000be2578190505b62000bfa62000bf18562000a8f565b83018262000b8c565b50505b505050565b5f82821c905092915050565b5f62000c1f5f198460080262000c02565b1980831691505092915050565b5f62000c39838362000c0e565b9150826002028217905092915050565b62000c548262000a12565b67ffffffffffffffff81111562000c705762000c6f62000833565b5b62000c7c825462000a49565b62000c8982828562000bb2565b5f60209050601f83116001811462000cbf575f841562000caa578287015190505b62000cb6858262000c2c565b86555062000d25565b601f19841662000ccf8662000a7d565b5f5b8281101562000cf85784890151825560018201915060208501945060208101905062000cd1565b8683101562000d18578489015162000d14601f89168262000c0e565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000d588262000d2d565b9050919050565b62000d6a8162000d4c565b82525050565b5f60208201905062000d855f83018462000d5f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111562000e155780860481111562000ded5762000dec62000d8b565b5b600185161562000dfd5780820291505b808102905062000e0d8562000db8565b945062000dcd565b94509492505050565b5f8262000e2f576001905062000f01565b8162000e3e575f905062000f01565b816001811462000e57576002811462000e625762000e98565b600191505062000f01565b60ff84111562000e775762000e7662000d8b565b5b8360020a91508482111562000e915762000e9062000d8b565b5b5062000f01565b5060208310610133831016604e8410600b841016171562000ed25782820a90508381111562000ecc5762000ecb62000d8b565b5b62000f01565b62000ee1848484600162000dc4565b9250905081840481111562000efb5762000efa62000d8b565b5b81810290505b9392505050565b5f62000f148262000aff565b915062000f218362000aff565b925062000f507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000e1e565b905092915050565b5f62000f648262000aff565b915062000f718362000aff565b925082820262000f818162000aff565b9150828204841483151762000f9b5762000f9a62000d8b565b5b5092915050565b5f82825260208201905092915050565b7f546f6b656e207472616e73666572207768696c652070617573656400000000005f82015250565b5f62000fe8601b8362000fa2565b915062000ff58262000fb2565b602082019050919050565b5f6020820190508181035f830152620010198162000fda565b9050919050565b7f45524332304c6f636b61626c653a207472616e7366657220616d6f756e7420655f8201527f78636565647320756e6c6f636b65642062616c616e6365000000000000000000602082015250565b5f6200107c60378362000fa2565b9150620010898262001020565b604082019050919050565b5f6020820190508181035f830152620010ad816200106e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f620010ed8262000aff565b9150620010fa8362000aff565b925082820190508082111562001115576200111462000d8b565b5b92915050565b5f620011278262000aff565b9150620011348362000aff565b92508282039050818111156200114f576200114e62000d8b565b5b92915050565b620011608162000aff565b82525050565b5f6060820190506200117b5f83018662000d5f565b6200118a602083018562001155565b62001199604083018462001155565b949350505050565b5f602082019050620011b65f83018462001155565b92915050565b61233f80620011ca5f395ff3fe608060405234801561000f575f80fd5b506004361061014b575f3560e01c806370a08231116100c1578063929ec5371161007a578063929ec5371461033b57806395d89b411461036b578063a9059cbb14610389578063d1c46916146103b9578063dd62ed3e146103d5578063f2fde38b146104055761014b565b806370a08231146102a1578063715018a6146102d157806379cc6790146102db5780638456cb59146102f75780638d1fdf2f146103015780638da5cb5b1461031d5761014b565b806338b820921161011357806338b82092146102095780633f4ba83a1461022557806342966c681461022f57806345c8b1a61461024b5780635c975abb146102675780635e1372f4146102855761014b565b806306fdde031461014f578063095ea7b31461016d57806318160ddd1461019d57806323b872dd146101bb578063313ce567146101eb575b5f80fd5b610157610421565b6040516101649190611b44565b60405180910390f35b61018760048036038101906101829190611bf5565b6104b1565b6040516101949190611c4d565b60405180910390f35b6101a56104d3565b6040516101b29190611c75565b60405180910390f35b6101d560048036038101906101d09190611c8e565b6104dc565b6040516101e29190611c4d565b60405180910390f35b6101f361050a565b6040516102009190611cf9565b60405180910390f35b610223600480360381019061021e9190611d12565b610512565b005b61022d610540565b005b61024960048036038101906102449190611d62565b610552565b005b61026560048036038101906102609190611d8d565b610566565b005b61026f610691565b60405161027c9190611c4d565b60405180910390f35b61029f600480360381019061029a9190611d12565b6106a6565b005b6102bb60048036038101906102b69190611d8d565b61078a565b6040516102c89190611c75565b60405180910390f35b6102d96107cf565b005b6102f560048036038101906102f09190611bf5565b6107e2565b005b6102ff610802565b005b61031b60048036038101906103169190611d8d565b610814565b005b610325610941565b6040516103329190611dc7565b60405180910390f35b61035560048036038101906103509190611d8d565b61096a565b6040516103629190611c75565b60405180910390f35b610373610aa2565b6040516103809190611b44565b60405180910390f35b6103a3600480360381019061039e9190611bf5565b610b32565b6040516103b09190611c4d565b60405180910390f35b6103d360048036038101906103ce9190611d8d565b610b54565b005b6103ef60048036038101906103ea9190611de0565b610e75565b6040516103fc9190611c75565b60405180910390f35b61041f600480360381019061041a9190611d8d565b610ef7565b005b60606003805461043090611e4b565b80601f016020809104026020016040519081016040528092919081815260200182805461045c90611e4b565b80156104a75780601f1061047e576101008083540402835291602001916104a7565b820191905f5260205f20905b81548152906001019060200180831161048a57829003601f168201915b5050505050905090565b5f806104bb610f7b565b90506104c8818585610f82565b600191505092915050565b5f600254905090565b5f806104e6610f7b565b90506104f3858285610f94565b6104fe858585611026565b60019150509392505050565b5f6012905090565b61051a611116565b610525338484611026565b61053b838383426105369190611ea8565b6106a6565b505050565b610548611116565b61055061119d565b565b61056361055d610f7b565b826111fe565b50565b61056e611116565b60065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee90611f25565b60405180910390fd5b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167ff915cd9fe234de6e8d3afe7bf2388d35b2b6d48e8c629a24602019bde79c213a60405160405180910390a250565b5f60055f9054906101000a900460ff16905090565b6106ae611116565b816106b88461078a565b10156106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090611f8d565b60405180910390fd5b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20604051806040016040528084815260200183815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0155602082015181600101555050505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107d7611116565b6107e05f61127d565b565b6107f4826107ee610f7b565b83610f94565b6107fe82826111fe565b5050565b61080a611116565b610812611342565b565b61081c611116565b60065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d90611ff5565b60405180910390fd5b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f4f2a367e694e71282f29ab5eaa04c4c0be45ac5bf2ca74fb67068b98bdc2887d60405160405180910390a250565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f90505f5b60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015610a98574260075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610a0957610a08612013565b5b905f5260205f209060020201600101541115610a8b5760075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208181548110610a6e57610a6d612013565b5b905f5260205f2090600202015f015482610a889190611ea8565b91505b8080600101915050610971565b5080915050919050565b606060048054610ab190611e4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610add90611e4b565b8015610b285780601f10610aff57610100808354040283529160200191610b28565b820191905f5260205f20905b815481529060010190602001808311610b0b57829003601f168201915b5050505050905090565b5f80610b3c610f7b565b9050610b49818585611026565b600191505092915050565b5f805b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015610e19574260075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610bef57610bee612013565b5b905f5260205f2090600202016001015411610e065760075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208181548110610c5357610c52612013565b5b905f5260205f2090600202015f015482610c6d9190611ea8565b915060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600160075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050610cf99190612040565b81548110610d0a57610d09612013565b5b905f5260205f20906002020160075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610d6557610d64612013565b5b905f5260205f2090600202015f820154815f01556001820154816001015590505060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480610dd357610dd2612073565b5b600190038181905f5260205f2090600202015f8082015f9055600182015f9055505090558080610e02906120a0565b9150505b8080610e11906120c7565b915050610b57565b505f811115610e71578173ffffffffffffffffffffffffffffffffffffffff167f622ca42598ab680a7def4a7346e1963a82207cf42a5ddb8056ad62cfbda19b8882604051610e689190611c75565b60405180910390a25b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610eff611116565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f6f575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f669190611dc7565b60405180910390fd5b610f788161127d565b50565b5f33905090565b610f8f83838360016113a4565b505050565b5f610f9f8484610e75565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110205781811015611011578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110089392919061210e565b60405180910390fd5b61101f84848484035f6113a4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611096575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161108d9190611dc7565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611106575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110fd9190611dc7565b60405180910390fd5b611111838383611573565b505050565b61111e610f7b565b73ffffffffffffffffffffffffffffffffffffffff1661113c610941565b73ffffffffffffffffffffffffffffffffffffffff161461119b5761115f610f7b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111929190611dc7565b60405180910390fd5b565b6111a56116bf565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111e7610f7b565b6040516111f49190611dc7565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361126e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112659190611dc7565b60405180910390fd5b611279825f83611573565b5050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61134a611708565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861138d610f7b565b60405161139a9190611dc7565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611414575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161140b9190611dc7565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611484575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161147b9190611dc7565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561156d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115649190611c75565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115db57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156116af576115e8610691565b158061162657506115f7610941565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165c9061218d565b60405180910390fd5b61166f8382611752565b6116ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a59061221b565b60405180910390fd5b5b6116ba8383836118a1565b505050565b6116c7610691565b611706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fd90612283565b60405180910390fd5b565b611710610691565b15611750576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611747906122eb565b60405180910390fd5b565b5f805f90505f5b60075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015611880574260075f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106117f1576117f0612013565b5b905f5260205f2090600202016001015411156118735760075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20818154811061185657611855612013565b5b905f5260205f2090600202015f0154826118709190611ea8565b91505b8080600101915050611759565b50828161188c8661078a565b6118969190612040565b101591505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118f1578060025f8282546118e59190611ea8565b925050819055506119bf565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561197a578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016119719392919061210e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a06578060025f8282540392505081905550611a50565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611aad9190611c75565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611af1578082015181840152602081019050611ad6565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611b1682611aba565b611b208185611ac4565b9350611b30818560208601611ad4565b611b3981611afc565b840191505092915050565b5f6020820190508181035f830152611b5c8184611b0c565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b9182611b68565b9050919050565b611ba181611b87565b8114611bab575f80fd5b50565b5f81359050611bbc81611b98565b92915050565b5f819050919050565b611bd481611bc2565b8114611bde575f80fd5b50565b5f81359050611bef81611bcb565b92915050565b5f8060408385031215611c0b57611c0a611b64565b5b5f611c1885828601611bae565b9250506020611c2985828601611be1565b9150509250929050565b5f8115159050919050565b611c4781611c33565b82525050565b5f602082019050611c605f830184611c3e565b92915050565b611c6f81611bc2565b82525050565b5f602082019050611c885f830184611c66565b92915050565b5f805f60608486031215611ca557611ca4611b64565b5b5f611cb286828701611bae565b9350506020611cc386828701611bae565b9250506040611cd486828701611be1565b9150509250925092565b5f60ff82169050919050565b611cf381611cde565b82525050565b5f602082019050611d0c5f830184611cea565b92915050565b5f805f60608486031215611d2957611d28611b64565b5b5f611d3686828701611bae565b9350506020611d4786828701611be1565b9250506040611d5886828701611be1565b9150509250925092565b5f60208284031215611d7757611d76611b64565b5b5f611d8484828501611be1565b91505092915050565b5f60208284031215611da257611da1611b64565b5b5f611daf84828501611bae565b91505092915050565b611dc181611b87565b82525050565b5f602082019050611dda5f830184611db8565b92915050565b5f8060408385031215611df657611df5611b64565b5b5f611e0385828601611bae565b9250506020611e1485828601611bae565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e6257607f821691505b602082108103611e7557611e74611e1e565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611eb282611bc2565b9150611ebd83611bc2565b9250828201905080821115611ed557611ed4611e7b565b5b92915050565b7f4163636f756e74206973206e6f742066726f7a656e00000000000000000000005f82015250565b5f611f0f601583611ac4565b9150611f1a82611edb565b602082019050919050565b5f6020820190508181035f830152611f3c81611f03565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611f77601483611ac4565b9150611f8282611f43565b602082019050919050565b5f6020820190508181035f830152611fa481611f6b565b9050919050565b7f4163636f756e7420697320616c72656164792066726f7a656e000000000000005f82015250565b5f611fdf601983611ac4565b9150611fea82611fab565b602082019050919050565b5f6020820190508181035f83015261200c81611fd3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61204a82611bc2565b915061205583611bc2565b925082820390508181111561206d5761206c611e7b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b5f6120aa82611bc2565b91505f82036120bc576120bb611e7b565b5b600182039050919050565b5f6120d182611bc2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361210357612102611e7b565b5b600182019050919050565b5f6060820190506121215f830186611db8565b61212e6020830185611c66565b61213b6040830184611c66565b949350505050565b7f546f6b656e207472616e73666572207768696c652070617573656400000000005f82015250565b5f612177601b83611ac4565b915061218282612143565b602082019050919050565b5f6020820190508181035f8301526121a48161216b565b9050919050565b7f45524332304c6f636b61626c653a207472616e7366657220616d6f756e7420655f8201527f78636565647320756e6c6f636b65642062616c616e6365000000000000000000602082015250565b5f612205603783611ac4565b9150612210826121ab565b604082019050919050565b5f6020820190508181035f830152612232816121f9565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f61226d601483611ac4565b915061227882612239565b602082019050919050565b5f6020820190508181035f83015261229a81612261565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6122d5601083611ac4565b91506122e0826122a1565b602082019050919050565b5f6020820190508181035f830152612302816122c9565b905091905056fea2646970667358221220ed3aabeb9a17af9a9f5702530c563b6cb58638c2894b51b5f741a3570429679a64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3509 CODESIZE SUB DUP1 PUSH3 0x3509 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x98F JUMP JUMPDEST CALLER DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0xC49 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0xC49 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE2 SWAP2 SWAP1 PUSH3 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xFC DUP2 PUSH3 0x13B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x133 CALLER PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA PUSH3 0x115 SWAP2 SWAP1 PUSH3 0xF08 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH3 0x127 SWAP2 SWAP1 PUSH3 0xF58 JUMP JUMPDEST PUSH3 0x200 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x11BC JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x273 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x26A SWAP2 SWAP1 PUSH3 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x286 PUSH0 DUP4 DUP4 PUSH3 0x28A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x2F3 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH3 0x3E7 JUMPI PUSH3 0x309 PUSH3 0x3FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO DUP1 PUSH3 0x350 JUMPI POP PUSH3 0x321 PUSH3 0x414 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH3 0x392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x389 SWAP1 PUSH3 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3A4 DUP4 DUP3 PUSH3 0x43D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3DD SWAP1 PUSH3 0x1094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH3 0x3FA DUP4 DUP4 DUP4 PUSH3 0x5A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH3 0x576 JUMPI TIMESTAMP PUSH1 0x7 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0x4E0 JUMPI PUSH3 0x4DF PUSH3 0x10B4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH3 0x568 JUMPI PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x549 JUMPI PUSH3 0x548 PUSH3 0x10B4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD SLOAD DUP3 PUSH3 0x565 SWAP2 SWAP1 PUSH3 0x10E1 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH3 0x444 JUMP JUMPDEST POP DUP3 DUP2 PUSH3 0x58A DUP7 PUSH3 0x7C5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x596 SWAP2 SWAP1 PUSH3 0x111B JUMP JUMPDEST LT ISZERO SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x5F5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x5E8 SWAP2 SWAP1 PUSH3 0x10E1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x6C6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x681 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x678 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x70F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x759 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x7B8 SWAP2 SWAP1 PUSH3 0x11A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x86B DUP3 PUSH3 0x823 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x88D JUMPI PUSH3 0x88C PUSH3 0x833 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x8A1 PUSH3 0x80A JUMP JUMPDEST SWAP1 POP PUSH3 0x8AF DUP3 DUP3 PUSH3 0x860 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x8D1 JUMPI PUSH3 0x8D0 PUSH3 0x833 JUMP JUMPDEST JUMPDEST PUSH3 0x8DC DUP3 PUSH3 0x823 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x908 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8EB JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x929 PUSH3 0x923 DUP5 PUSH3 0x8B4 JUMP JUMPDEST PUSH3 0x896 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x948 JUMPI PUSH3 0x947 PUSH3 0x81F JUMP JUMPDEST JUMPDEST PUSH3 0x955 DUP5 DUP3 DUP6 PUSH3 0x8E9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x974 JUMPI PUSH3 0x973 PUSH3 0x81B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x986 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x913 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x9A8 JUMPI PUSH3 0x9A7 PUSH3 0x813 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x9C8 JUMPI PUSH3 0x9C7 PUSH3 0x817 JUMP JUMPDEST JUMPDEST PUSH3 0x9D6 DUP6 DUP3 DUP7 ADD PUSH3 0x95D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x9FA JUMPI PUSH3 0x9F9 PUSH3 0x817 JUMP JUMPDEST JUMPDEST PUSH3 0xA08 DUP6 DUP3 DUP7 ADD PUSH3 0x95D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xA61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xA77 JUMPI PUSH3 0xA76 PUSH3 0xA1C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0xADB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xA9E JUMP JUMPDEST PUSH3 0xAE7 DUP7 DUP4 PUSH3 0xA9E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB31 PUSH3 0xB2B PUSH3 0xB25 DUP5 PUSH3 0xAFF JUMP JUMPDEST PUSH3 0xB08 JUMP JUMPDEST PUSH3 0xAFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB4C DUP4 PUSH3 0xB11 JUMP JUMPDEST PUSH3 0xB64 PUSH3 0xB5B DUP3 PUSH3 0xB38 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xAAA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0xB7A PUSH3 0xB6C JUMP JUMPDEST PUSH3 0xB87 DUP2 DUP5 DUP5 PUSH3 0xB41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xBAE JUMPI PUSH3 0xBA2 PUSH0 DUP3 PUSH3 0xB70 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xB8D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xBFD JUMPI PUSH3 0xBC7 DUP2 PUSH3 0xA7D JUMP JUMPDEST PUSH3 0xBD2 DUP5 PUSH3 0xA8F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xBE2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xBFA PUSH3 0xBF1 DUP6 PUSH3 0xA8F JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xB8C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xC1F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xC02 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xC39 DUP4 DUP4 PUSH3 0xC0E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC54 DUP3 PUSH3 0xA12 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xC70 JUMPI PUSH3 0xC6F PUSH3 0x833 JUMP JUMPDEST JUMPDEST PUSH3 0xC7C DUP3 SLOAD PUSH3 0xA49 JUMP JUMPDEST PUSH3 0xC89 DUP3 DUP3 DUP6 PUSH3 0xBB2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xCBF JUMPI PUSH0 DUP5 ISZERO PUSH3 0xCAA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xCB6 DUP6 DUP3 PUSH3 0xC2C JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xD25 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xCCF DUP7 PUSH3 0xA7D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xCF8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xCD1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xD18 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xD14 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xC0E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD58 DUP3 PUSH3 0xD2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD6A DUP2 PUSH3 0xD4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD85 PUSH0 DUP4 ADD DUP5 PUSH3 0xD5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xE15 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xDED JUMPI PUSH3 0xDEC PUSH3 0xD8B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xDFD JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xE0D DUP6 PUSH3 0xDB8 JUMP JUMPDEST SWAP5 POP PUSH3 0xDCD JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0xE2F JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xF01 JUMP JUMPDEST DUP2 PUSH3 0xE3E JUMPI PUSH0 SWAP1 POP PUSH3 0xF01 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xE57 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xE62 JUMPI PUSH3 0xE98 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xF01 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xE77 JUMPI PUSH3 0xE76 PUSH3 0xD8B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xE91 JUMPI PUSH3 0xE90 PUSH3 0xD8B JUMP JUMPDEST JUMPDEST POP PUSH3 0xF01 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xED2 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xECC JUMPI PUSH3 0xECB PUSH3 0xD8B JUMP JUMPDEST JUMPDEST PUSH3 0xF01 JUMP JUMPDEST PUSH3 0xEE1 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xDC4 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xEFB JUMPI PUSH3 0xEFA PUSH3 0xD8B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xF14 DUP3 PUSH3 0xAFF JUMP JUMPDEST SWAP2 POP PUSH3 0xF21 DUP4 PUSH3 0xAFF JUMP JUMPDEST SWAP3 POP PUSH3 0xF50 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xE1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xF64 DUP3 PUSH3 0xAFF JUMP JUMPDEST SWAP2 POP PUSH3 0xF71 DUP4 PUSH3 0xAFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xF81 DUP2 PUSH3 0xAFF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xF9B JUMPI PUSH3 0xF9A PUSH3 0xD8B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572207768696C65207061757365640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0xFE8 PUSH1 0x1B DUP4 PUSH3 0xFA2 JUMP JUMPDEST SWAP2 POP PUSH3 0xFF5 DUP3 PUSH3 0xFB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x1019 DUP2 PUSH3 0xFDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332304C6F636B61626C653A207472616E7366657220616D6F756E742065 PUSH0 DUP3 ADD MSTORE PUSH32 0x78636565647320756E6C6F636B65642062616C616E6365000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x107C PUSH1 0x37 DUP4 PUSH3 0xFA2 JUMP JUMPDEST SWAP2 POP PUSH3 0x1089 DUP3 PUSH3 0x1020 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x10AD DUP2 PUSH3 0x106E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x10ED DUP3 PUSH3 0xAFF JUMP JUMPDEST SWAP2 POP PUSH3 0x10FA DUP4 PUSH3 0xAFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x1115 JUMPI PUSH3 0x1114 PUSH3 0xD8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x1127 DUP3 PUSH3 0xAFF JUMP JUMPDEST SWAP2 POP PUSH3 0x1134 DUP4 PUSH3 0xAFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x114F JUMPI PUSH3 0x114E PUSH3 0xD8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1160 DUP2 PUSH3 0xAFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x117B PUSH0 DUP4 ADD DUP7 PUSH3 0xD5F JUMP JUMPDEST PUSH3 0x118A PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1155 JUMP JUMPDEST PUSH3 0x1199 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1155 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x11B6 PUSH0 DUP4 ADD DUP5 PUSH3 0x1155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x233F DUP1 PUSH3 0x11CA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0x929EC537 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x929EC537 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xD1C46916 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x405 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8D1FDF2F EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31D JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x38B82092 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x38B82092 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x45C8B1A6 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x5E1372F4 EQ PUSH2 0x285 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x157 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x7CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FF PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x325 PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x430 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45C SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4BB PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP PUSH2 0x4C8 DUP2 DUP6 DUP6 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4E6 PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP PUSH2 0x4F3 DUP6 DUP3 DUP6 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x4FE DUP6 DUP6 DUP6 PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51A PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x525 CALLER DUP5 DUP5 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x53B DUP4 DUP4 DUP4 TIMESTAMP PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x548 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x550 PUSH2 0x119D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x563 PUSH2 0x55D PUSH2 0xF7B JUMP JUMPDEST DUP3 PUSH2 0x11FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x56E PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF915CD9FE234DE6E8D3AFE7BF2388D35B2B6D48E8C629A24602019BDE79C213A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6AE PUSH2 0x1116 JUMP JUMPDEST DUP2 PUSH2 0x6B8 DUP5 PUSH2 0x78A JUMP JUMPDEST LT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x7E0 PUSH0 PUSH2 0x127D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F4 DUP3 PUSH2 0x7EE PUSH2 0xF7B JUMP JUMPDEST DUP4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x7FE DUP3 DUP3 PUSH2 0x11FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x80A PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x812 PUSH2 0x1342 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x81C PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89D SWAP1 PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F2A367E694E71282F29AB5EAA04C4C0BE45AC5BF2CA74FB67068B98BDC2887D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA98 JUMPI TIMESTAMP PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA09 JUMPI PUSH2 0xA08 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA6E JUMPI PUSH2 0xA6D PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD SLOAD DUP3 PUSH2 0xA88 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x971 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAB1 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADD SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB3C PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP PUSH2 0xB49 DUP2 DUP6 DUP6 PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xE19 JUMPI TIMESTAMP PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0xE06 JUMPI PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD SLOAD DUP3 PUSH2 0xC6D SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST SWAP2 POP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x2040 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD0A JUMPI PUSH2 0xD09 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD65 JUMPI PUSH2 0xD64 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 DUP3 ADD SLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xDD3 JUMPI PUSH2 0xDD2 PUSH2 0x2073 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP SWAP1 SSTORE DUP1 DUP1 PUSH2 0xE02 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE11 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB57 JUMP JUMPDEST POP PUSH0 DUP2 GT ISZERO PUSH2 0xE71 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x622CA42598AB680A7DEF4A7346E1963A82207CF42A5DDB8056AD62CFBDA19B88 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE68 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEFF PUSH2 0x1116 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF6F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF78 DUP2 PUSH2 0x127D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF8F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF9F DUP5 DUP5 PUSH2 0xE75 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1020 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1011 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1008 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x13A4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1096 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108D SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1106 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1111 DUP4 DUP4 DUP4 PUSH2 0x1573 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x111E PUSH2 0xF7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x113C PUSH2 0x941 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x119B JUMPI PUSH2 0x115F PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1192 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11A5 PUSH2 0x16BF JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x11E7 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F4 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1265 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1279 DUP3 PUSH0 DUP4 PUSH2 0x1573 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x134A PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x138D PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139A SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1414 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140B SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1484 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147B SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x156D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1564 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15DB JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16AF JUMPI PUSH2 0x15E8 PUSH2 0x691 JUMP JUMPDEST ISZERO DUP1 PUSH2 0x1626 JUMPI POP PUSH2 0x15F7 PUSH2 0x941 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1665 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165C SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x166F DUP4 DUP3 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x16AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A5 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x16BA DUP4 DUP4 DUP4 PUSH2 0x18A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16C7 PUSH2 0x691 JUMP JUMPDEST PUSH2 0x1706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FD SWAP1 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1710 PUSH2 0x691 JUMP JUMPDEST ISZERO PUSH2 0x1750 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1747 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1880 JUMPI TIMESTAMP PUSH1 0x7 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x17F1 JUMPI PUSH2 0x17F0 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1873 JUMPI PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1856 JUMPI PUSH2 0x1855 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD SLOAD DUP3 PUSH2 0x1870 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1759 JUMP JUMPDEST POP DUP3 DUP2 PUSH2 0x188C DUP7 PUSH2 0x78A JUMP JUMPDEST PUSH2 0x1896 SWAP2 SWAP1 PUSH2 0x2040 JUMP JUMPDEST LT ISZERO SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18F1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18E5 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x19BF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x197A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1971 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A06 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A50 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AAD SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AF1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AD6 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B16 DUP3 PUSH2 0x1ABA JUMP JUMPDEST PUSH2 0x1B20 DUP2 DUP6 PUSH2 0x1AC4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B30 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x1B39 DUP2 PUSH2 0x1AFC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B5C DUP2 DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B91 DUP3 PUSH2 0x1B68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA1 DUP2 PUSH2 0x1B87 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BBC DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD4 DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BEF DUP2 PUSH2 0x1BCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C0B JUMPI PUSH2 0x1C0A PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C18 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C29 DUP6 DUP3 DUP7 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C47 DUP2 PUSH2 0x1C33 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C60 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C6F DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CA5 JUMPI PUSH2 0x1CA4 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB2 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CC3 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CD4 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF3 DUP2 PUSH2 0x1CDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0C PUSH0 DUP4 ADD DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D29 JUMPI PUSH2 0x1D28 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D36 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D47 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D58 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D77 JUMPI PUSH2 0x1D76 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D84 DUP5 DUP3 DUP6 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA2 JUMPI PUSH2 0x1DA1 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DAF DUP5 DUP3 DUP6 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DC1 DUP2 PUSH2 0x1B87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DDA PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF6 JUMPI PUSH2 0x1DF5 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E03 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E14 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E62 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E75 JUMPI PUSH2 0x1E74 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EB2 DUP3 PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBD DUP4 PUSH2 0x1BC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ED5 JUMPI PUSH2 0x1ED4 PUSH2 0x1E7B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F742066726F7A656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0F PUSH1 0x15 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1A DUP3 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F3C DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F77 PUSH1 0x14 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F82 DUP3 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA4 DUP2 PUSH2 0x1F6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C72656164792066726F7A656E00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDF PUSH1 0x19 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEA DUP3 PUSH2 0x1FAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x200C DUP2 PUSH2 0x1FD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x204A DUP3 PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2055 DUP4 PUSH2 0x1BC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x206D JUMPI PUSH2 0x206C PUSH2 0x1E7B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20AA DUP3 PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x20BC JUMPI PUSH2 0x20BB PUSH2 0x1E7B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20D1 DUP3 PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2103 JUMPI PUSH2 0x2102 PUSH2 0x1E7B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2121 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DB8 JUMP JUMPDEST PUSH2 0x212E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x213B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C66 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572207768696C65207061757365640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2177 PUSH1 0x1B DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2182 DUP3 PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21A4 DUP2 PUSH2 0x216B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332304C6F636B61626C653A207472616E7366657220616D6F756E742065 PUSH0 DUP3 ADD MSTORE PUSH32 0x78636565647320756E6C6F636B65642062616C616E6365000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2205 PUSH1 0x37 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2210 DUP3 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2232 DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x226D PUSH1 0x14 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2278 DUP3 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x229A DUP2 PUSH2 0x2261 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22D5 PUSH1 0x10 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E0 DUP3 PUSH2 0x22A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2302 DUP2 PUSH2 0x22C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED GASPRICE 0xAB 0xEB SWAP11 OR 0xAF SWAP11 SWAP16 JUMPI MUL MSTORE8 0xC JUMP EXTCODESIZE PUSH13 0xB58638C2894B51B5F741A35704 0x29 PUSH8 0x9A64736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "306:3866:8:-:0;;;964:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;373:10;1026:5;1033:7;1970:5:3;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1052:61:8::1;1058:10;508:2;1093:18;;1089:2;:22;;;;:::i;:::-;559:14;1070:42;;;;:::i;:::-;1052:5;;;:61;;:::i;:::-;964:156:::0;;306:3866;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7730:208:3:-;7819:1;7800:21;;:7;:21;;;7796:91;;7873:1;7844:32;;;;;;;;;;;:::i;:::-;;;;;;;;7796:91;7896:35;7912:1;7916:7;7925:5;7896:7;;;:35;;:::i;:::-;7730:208;;:::o;1126:533:8:-;1323:1;1307:18;;:4;:18;;;;:38;;;;;1343:1;1329:16;;:2;:16;;;;1307:38;1304:299;;;1370:8;:6;;;:8;;:::i;:::-;1369:9;:34;;;;1396:7;:5;;;:7;;:::i;:::-;1382:21;;:10;:21;;;1369:34;1361:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1508:24;1519:4;1525:6;1508:10;;;:24;;:::i;:::-;1500:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1304:299;1621:31;1635:4;1641:2;1645:6;1621:13;;;:31;;:::i;:::-;1126:533;;;:::o;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3240:568:8:-;3312:4;3328:20;3351:1;3328:24;;3456:9;3451:196;3475:6;:12;3482:4;3475:12;;;;;;;;;;;;;;;:19;;;;3471:1;:23;3451:196;;;3549:15;3519:6;:12;3526:4;3519:12;;;;;;;;;;;;;;;3532:1;3519:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;:45;3515:122;;;3600:6;:12;3607:4;3600:12;;;;;;;;;;;;;;;3613:1;3600:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;;3584:38;;;;;:::i;:::-;;;3515:122;3496:3;;;;;;;3451:196;;;;3795:6;3779:12;3761:15;3771:4;3761:9;;;:15;;:::i;:::-;:30;;;;:::i;:::-;:40;;3754:47;;;3240:568;;;;:::o;6280:1107:3:-;6385:1;6369:18;;:4;:18;;;6365:540;;6521:5;6505:12;;:21;;;;;;;:::i;:::-;;;;;;;;6365:540;;;6557:19;6579:9;:15;6589:4;6579:15;;;;;;;;;;;;;;;;6557:37;;6626:5;6612:11;:19;6608:115;;;6683:4;6689:11;6702:5;6658:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6608:115;6875:5;6861:11;:19;6843:9;:15;6853:4;6843:15;;;;;;;;;;;;;;;:37;;;;6543:362;6365:540;6933:1;6919:16;;:2;:16;;;6915:425;;7098:5;7082:12;;:21;;;;;;;;;;;6915:425;;;7310:5;7293:9;:13;7303:2;7293:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6915:425;7370:2;7355:25;;7364:4;7355:25;;;7374:5;7355:25;;;;;;:::i;:::-;;;;;;;;6280:1107;;;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;8577:126::-;8614:7;8654:42;8647:5;8643:54;8632:65;;8577:126;;;:::o;8709:96::-;8746:7;8775:24;8793:5;8775:24;:::i;:::-;8764:35;;8709:96;;;:::o;8811:118::-;8898:24;8916:5;8898:24;:::i;:::-;8893:3;8886:37;8811:118;;:::o;8935:222::-;9028:4;9066:2;9055:9;9051:18;9043:26;;9079:71;9147:1;9136:9;9132:17;9123:6;9079:71;:::i;:::-;8935:222;;;;:::o;9163:180::-;9211:77;9208:1;9201:88;9308:4;9305:1;9298:15;9332:4;9329:1;9322:15;9349:102;9391:8;9438:5;9435:1;9431:13;9410:34;;9349:102;;;:::o;9457:848::-;9518:5;9525:4;9549:6;9540:15;;9573:5;9564:14;;9587:712;9608:1;9598:8;9595:15;9587:712;;;9703:4;9698:3;9694:14;9688:4;9685:24;9682:50;;;9712:18;;:::i;:::-;9682:50;9762:1;9752:8;9748:16;9745:451;;;10177:4;10170:5;10166:16;10157:25;;9745:451;10227:4;10221;10217:15;10209:23;;10257:32;10280:8;10257:32;:::i;:::-;10245:44;;9587:712;;;9457:848;;;;;;;:::o;10311:1073::-;10365:5;10556:8;10546:40;;10577:1;10568:10;;10579:5;;10546:40;10605:4;10595:36;;10622:1;10613:10;;10624:5;;10595:36;10691:4;10739:1;10734:27;;;;10775:1;10770:191;;;;10684:277;;10734:27;10752:1;10743:10;;10754:5;;;10770:191;10815:3;10805:8;10802:17;10799:43;;;10822:18;;:::i;:::-;10799:43;10871:8;10868:1;10864:16;10855:25;;10906:3;10899:5;10896:14;10893:40;;;10913:18;;:::i;:::-;10893:40;10946:5;;;10684:277;;11070:2;11060:8;11057:16;11051:3;11045:4;11042:13;11038:36;11020:2;11010:8;11007:16;11002:2;10996:4;10993:12;10989:35;10973:111;10970:246;;;11126:8;11120:4;11116:19;11107:28;;11161:3;11154:5;11151:14;11148:40;;;11168:18;;:::i;:::-;11148:40;11201:5;;10970:246;11241:42;11279:3;11269:8;11263:4;11260:1;11241:42;:::i;:::-;11226:57;;;;11315:4;11310:3;11306:14;11299:5;11296:25;11293:51;;;11324:18;;:::i;:::-;11293:51;11373:4;11366:5;11362:16;11353:25;;10311:1073;;;;;;:::o;11390:285::-;11450:5;11474:23;11492:4;11474:23;:::i;:::-;11466:31;;11518:27;11536:8;11518:27;:::i;:::-;11506:39;;11564:104;11601:66;11591:8;11585:4;11564:104;:::i;:::-;11555:113;;11390:285;;;;:::o;11681:410::-;11721:7;11744:20;11762:1;11744:20;:::i;:::-;11739:25;;11778:20;11796:1;11778:20;:::i;:::-;11773:25;;11833:1;11830;11826:9;11855:30;11873:11;11855:30;:::i;:::-;11844:41;;12034:1;12025:7;12021:15;12018:1;12015:22;11995:1;11988:9;11968:83;11945:139;;12064:18;;:::i;:::-;11945:139;11729:362;11681:410;;;;:::o;12097:169::-;12181:11;12215:6;12210:3;12203:19;12255:4;12250:3;12246:14;12231:29;;12097:169;;;;:::o;12272:177::-;12412:29;12408:1;12400:6;12396:14;12389:53;12272:177;:::o;12455:366::-;12597:3;12618:67;12682:2;12677:3;12618:67;:::i;:::-;12611:74;;12694:93;12783:3;12694:93;:::i;:::-;12812:2;12807:3;12803:12;12796:19;;12455:366;;;:::o;12827:419::-;12993:4;13031:2;13020:9;13016:18;13008:26;;13080:9;13074:4;13070:20;13066:1;13055:9;13051:17;13044:47;13108:131;13234:4;13108:131;:::i;:::-;13100:139;;12827:419;;;:::o;13252:242::-;13392:34;13388:1;13380:6;13376:14;13369:58;13461:25;13456:2;13448:6;13444:15;13437:50;13252:242;:::o;13500:366::-;13642:3;13663:67;13727:2;13722:3;13663:67;:::i;:::-;13656:74;;13739:93;13828:3;13739:93;:::i;:::-;13857:2;13852:3;13848:12;13841:19;;13500:366;;;:::o;13872:419::-;14038:4;14076:2;14065:9;14061:18;14053:26;;14125:9;14119:4;14115:20;14111:1;14100:9;14096:17;14089:47;14153:131;14279:4;14153:131;:::i;:::-;14145:139;;13872:419;;;:::o;14297:180::-;14345:77;14342:1;14335:88;14442:4;14439:1;14432:15;14466:4;14463:1;14456:15;14483:191;14523:3;14542:20;14560:1;14542:20;:::i;:::-;14537:25;;14576:20;14594:1;14576:20;:::i;:::-;14571:25;;14619:1;14616;14612:9;14605:16;;14640:3;14637:1;14634:10;14631:36;;;14647:18;;:::i;:::-;14631:36;14483:191;;;;:::o;14680:194::-;14720:4;14740:20;14758:1;14740:20;:::i;:::-;14735:25;;14774:20;14792:1;14774:20;:::i;:::-;14769:25;;14818:1;14815;14811:9;14803:17;;14842:1;14836:4;14833:11;14830:37;;;14847:18;;:::i;:::-;14830:37;14680:194;;;;:::o;14880:118::-;14967:24;14985:5;14967:24;:::i;:::-;14962:3;14955:37;14880:118;;:::o;15004:442::-;15153:4;15191:2;15180:9;15176:18;15168:26;;15204:71;15272:1;15261:9;15257:17;15248:6;15204:71;:::i;:::-;15285:72;15353:2;15342:9;15338:18;15329:6;15285:72;:::i;:::-;15367;15435:2;15424:9;15420:18;15411:6;15367:72;:::i;:::-;15004:442;;;;;;:::o;15452:222::-;15545:4;15583:2;15572:9;15568:18;15560:26;;15596:71;15664:1;15653:9;15649:17;15640:6;15596:71;:::i;:::-;15452:222;;;;:::o;306:3866:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_798": {
									"entryPoint": 3970,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_858": {
									"entryPoint": 5028,
									"id": 858,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_780": {
									"entryPoint": 4606,
									"id": 780,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkLock_1485": {
									"entryPoint": 5970,
									"id": 1485,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkOwner_84": {
									"entryPoint": 4374,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1069": {
									"entryPoint": 3963,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_375": {
									"entryPoint": 4930,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 5896,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 5823,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_906": {
									"entryPoint": 3988,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4733,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_637": {
									"entryPoint": 4134,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 4509,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1219": {
									"entryPoint": 5491,
									"id": 1219,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 6305,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_534": {
									"entryPoint": 3701,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_558": {
									"entryPoint": 1201,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_493": {
									"entryPoint": 1930,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1030": {
									"entryPoint": 2018,
									"id": 1030,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1009": {
									"entryPoint": 1362,
									"id": 1009,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_471": {
									"entryPoint": 1290,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@freeze_1245": {
									"entryPoint": 2068,
									"id": 1245,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getLockedAmount_1534": {
									"entryPoint": 2410,
									"id": 1534,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockup_1301": {
									"entryPoint": 1702,
									"id": 1301,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_453": {
									"entryPoint": 1057,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2369,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1419": {
									"entryPoint": 2050,
									"id": 1419,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": 1681,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releaseLock_1382": {
									"entryPoint": 2900,
									"id": 1382,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1999,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_462": {
									"entryPoint": 2722,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_480": {
									"entryPoint": 1235,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_590": {
									"entryPoint": 1244,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3831,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferWithLockUp_1410": {
									"entryPoint": 1298,
									"id": 1410,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transfer_517": {
									"entryPoint": 2866,
									"id": 517,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unfreeze_1270": {
									"entryPoint": 1382,
									"id": 1270,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1428": {
									"entryPoint": 1344,
									"id": 1428,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 7442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8462,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 8352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 8307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 8761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 8865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21": {
									"entryPoint": 7899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65": {
									"entryPoint": 8515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d": {
									"entryPoint": 8107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d": {
									"entryPoint": 8619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16200:9",
										"nodeType": "YulBlock",
										"src": "0:16200:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:184:9",
													"nodeType": "YulBlock",
													"src": "349:184:9",
													"statements": [
														{
															"nativeSrc": "359:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:9",
																"nodeType": "YulLiteral",
																"src": "368:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:9",
																	"nodeType": "YulTypedName",
																	"src": "363:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:9",
																"nodeType": "YulBlock",
																"src": "428:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:9"
																					},
																					"nativeSrc": "449:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:9"
																							},
																							"nativeSrc": "468:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:9"
																					},
																					"nativeSrc": "462:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:9"
																			},
																			"nativeSrc": "442:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:9"
																		},
																		"nativeSrc": "442:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:9"
																},
																"nativeSrc": "386:13:9",
																"nodeType": "YulFunctionCall",
																"src": "386:13:9"
															},
															"nativeSrc": "378:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:9",
																"nodeType": "YulBlock",
																"src": "400:19:9",
																"statements": [
																	{
																		"nativeSrc": "402:15:9",
																		"nodeType": "YulAssignment",
																		"src": "402:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:9",
																					"nodeType": "YulLiteral",
																					"src": "414:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:9"
																			},
																			"nativeSrc": "407:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:9",
																"nodeType": "YulBlock",
																"src": "382:3:9",
																"statements": []
															},
															"src": "378:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:9"
																		},
																		"nativeSrc": "507:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:9",
																		"nodeType": "YulLiteral",
																		"src": "525:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:9"
																},
																"nativeSrc": "500:27:9",
																"nodeType": "YulFunctionCall",
																"src": "500:27:9"
															},
															"nativeSrc": "500:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:246:9"
											},
											{
												"body": {
													"nativeSrc": "587:54:9",
													"nodeType": "YulBlock",
													"src": "587:54:9",
													"statements": [
														{
															"nativeSrc": "597:38:9",
															"nodeType": "YulAssignment",
															"src": "597:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:9",
																				"nodeType": "YulLiteral",
																				"src": "622:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:9"
																		},
																		"nativeSrc": "611:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:9",
																				"nodeType": "YulLiteral",
																				"src": "631:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:9"
																		},
																		"nativeSrc": "627:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:9"
																},
																"nativeSrc": "607:28:9",
																"nodeType": "YulFunctionCall",
																"src": "607:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:9",
														"nodeType": "YulTypedName",
														"src": "570:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:9",
														"nodeType": "YulTypedName",
														"src": "580:6:9",
														"type": ""
													}
												],
												"src": "539:102:9"
											},
											{
												"body": {
													"nativeSrc": "739:285:9",
													"nodeType": "YulBlock",
													"src": "739:285:9",
													"statements": [
														{
															"nativeSrc": "749:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:9"
																},
																"nativeSrc": "763:39:9",
																"nodeType": "YulFunctionCall",
																"src": "763:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:9",
																	"nodeType": "YulTypedName",
																	"src": "753:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:9",
															"nodeType": "YulAssignment",
															"src": "811:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:9"
																},
																"nativeSrc": "818:71:9",
																"nodeType": "YulFunctionCall",
																"src": "818:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:9",
																				"nodeType": "YulLiteral",
																				"src": "944:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:9"
																		},
																		"nativeSrc": "933:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:9"
																},
																"nativeSrc": "898:65:9",
																"nodeType": "YulFunctionCall",
																"src": "898:65:9"
															},
															"nativeSrc": "898:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:9"
														},
														{
															"nativeSrc": "972:46:9",
															"nodeType": "YulAssignment",
															"src": "972:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:9"
																		},
																		"nativeSrc": "988:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:9"
																},
																"nativeSrc": "979:39:9",
																"nodeType": "YulFunctionCall",
																"src": "979:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:9",
														"nodeType": "YulTypedName",
														"src": "720:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:9",
														"nodeType": "YulTypedName",
														"src": "727:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:9",
														"nodeType": "YulTypedName",
														"src": "735:3:9",
														"type": ""
													}
												],
												"src": "647:377:9"
											},
											{
												"body": {
													"nativeSrc": "1148:195:9",
													"nodeType": "YulBlock",
													"src": "1148:195:9",
													"statements": [
														{
															"nativeSrc": "1158:26:9",
															"nodeType": "YulAssignment",
															"src": "1158:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:9"
																},
																"nativeSrc": "1166:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:9"
																		},
																		"nativeSrc": "1201:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:9"
																		},
																		"nativeSrc": "1220:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:9"
																},
																"nativeSrc": "1194:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:9"
															},
															"nativeSrc": "1194:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:9"
														},
														{
															"nativeSrc": "1250:86:9",
															"nodeType": "YulAssignment",
															"src": "1250:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:9"
																},
																"nativeSrc": "1258:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:9",
														"nodeType": "YulTypedName",
														"src": "1120:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:9",
														"nodeType": "YulTypedName",
														"src": "1132:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:9",
														"nodeType": "YulTypedName",
														"src": "1143:4:9",
														"type": ""
													}
												],
												"src": "1030:313:9"
											},
											{
												"body": {
													"nativeSrc": "1389:35:9",
													"nodeType": "YulBlock",
													"src": "1389:35:9",
													"statements": [
														{
															"nativeSrc": "1399:19:9",
															"nodeType": "YulAssignment",
															"src": "1399:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:9"
																},
																"nativeSrc": "1409:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:9",
														"nodeType": "YulTypedName",
														"src": "1382:6:9",
														"type": ""
													}
												],
												"src": "1349:75:9"
											},
											{
												"body": {
													"nativeSrc": "1519:28:9",
													"nodeType": "YulBlock",
													"src": "1519:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:9"
																},
																"nativeSrc": "1529:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:9"
															},
															"nativeSrc": "1529:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:9"
											},
											{
												"body": {
													"nativeSrc": "1642:28:9",
													"nodeType": "YulBlock",
													"src": "1642:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:9"
																},
																"nativeSrc": "1652:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:9"
															},
															"nativeSrc": "1652:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:9"
											},
											{
												"body": {
													"nativeSrc": "1721:81:9",
													"nodeType": "YulBlock",
													"src": "1721:81:9",
													"statements": [
														{
															"nativeSrc": "1731:65:9",
															"nodeType": "YulAssignment",
															"src": "1731:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:9"
																},
																"nativeSrc": "1742:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:9",
														"nodeType": "YulTypedName",
														"src": "1703:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:9",
														"nodeType": "YulTypedName",
														"src": "1713:7:9",
														"type": ""
													}
												],
												"src": "1676:126:9"
											},
											{
												"body": {
													"nativeSrc": "1853:51:9",
													"nodeType": "YulBlock",
													"src": "1853:51:9",
													"statements": [
														{
															"nativeSrc": "1863:35:9",
															"nodeType": "YulAssignment",
															"src": "1863:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:9"
																},
																"nativeSrc": "1874:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:9",
														"nodeType": "YulTypedName",
														"src": "1835:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:9",
														"nodeType": "YulTypedName",
														"src": "1845:7:9",
														"type": ""
													}
												],
												"src": "1808:96:9"
											},
											{
												"body": {
													"nativeSrc": "1953:79:9",
													"nodeType": "YulBlock",
													"src": "1953:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:9",
																"nodeType": "YulBlock",
																"src": "2010:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:9"
																			},
																			"nativeSrc": "2012:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:9"
																		},
																		"nativeSrc": "2012:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:9"
																				},
																				"nativeSrc": "1983:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:9"
																		},
																		"nativeSrc": "1973:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:9"
																},
																"nativeSrc": "1966:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:9"
															},
															"nativeSrc": "1963:63:9",
															"nodeType": "YulIf",
															"src": "1963:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:9",
														"nodeType": "YulTypedName",
														"src": "1946:5:9",
														"type": ""
													}
												],
												"src": "1910:122:9"
											},
											{
												"body": {
													"nativeSrc": "2090:87:9",
													"nodeType": "YulBlock",
													"src": "2090:87:9",
													"statements": [
														{
															"nativeSrc": "2100:29:9",
															"nodeType": "YulAssignment",
															"src": "2100:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:9"
																},
																"nativeSrc": "2109:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:9"
																},
																"nativeSrc": "2138:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:9"
															},
															"nativeSrc": "2138:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:9",
														"nodeType": "YulTypedName",
														"src": "2068:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:9",
														"nodeType": "YulTypedName",
														"src": "2076:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:9",
														"nodeType": "YulTypedName",
														"src": "2084:5:9",
														"type": ""
													}
												],
												"src": "2038:139:9"
											},
											{
												"body": {
													"nativeSrc": "2228:32:9",
													"nodeType": "YulBlock",
													"src": "2228:32:9",
													"statements": [
														{
															"nativeSrc": "2238:16:9",
															"nodeType": "YulAssignment",
															"src": "2238:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:9",
																"nodeType": "YulIdentifier",
																"src": "2249:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:9",
														"nodeType": "YulTypedName",
														"src": "2210:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:9",
														"nodeType": "YulTypedName",
														"src": "2220:7:9",
														"type": ""
													}
												],
												"src": "2183:77:9"
											},
											{
												"body": {
													"nativeSrc": "2309:79:9",
													"nodeType": "YulBlock",
													"src": "2309:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:9",
																"nodeType": "YulBlock",
																"src": "2366:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:9"
																			},
																			"nativeSrc": "2368:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:9"
																		},
																		"nativeSrc": "2368:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:9"
																				},
																				"nativeSrc": "2339:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:9"
																		},
																		"nativeSrc": "2329:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:9"
																},
																"nativeSrc": "2322:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:9"
															},
															"nativeSrc": "2319:63:9",
															"nodeType": "YulIf",
															"src": "2319:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:9",
														"nodeType": "YulTypedName",
														"src": "2302:5:9",
														"type": ""
													}
												],
												"src": "2266:122:9"
											},
											{
												"body": {
													"nativeSrc": "2446:87:9",
													"nodeType": "YulBlock",
													"src": "2446:87:9",
													"statements": [
														{
															"nativeSrc": "2456:29:9",
															"nodeType": "YulAssignment",
															"src": "2456:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:9"
																},
																"nativeSrc": "2465:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:9"
																},
																"nativeSrc": "2494:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:9"
															},
															"nativeSrc": "2494:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:9",
														"nodeType": "YulTypedName",
														"src": "2424:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:9",
														"nodeType": "YulTypedName",
														"src": "2432:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:9",
														"nodeType": "YulTypedName",
														"src": "2440:5:9",
														"type": ""
													}
												],
												"src": "2394:139:9"
											},
											{
												"body": {
													"nativeSrc": "2622:391:9",
													"nodeType": "YulBlock",
													"src": "2622:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:9",
																"nodeType": "YulBlock",
																"src": "2668:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:9"
																			},
																			"nativeSrc": "2670:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:9"
																		},
																		"nativeSrc": "2670:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:9"
																		},
																		"nativeSrc": "2639:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:9"
																},
																"nativeSrc": "2635:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:9"
															},
															"nativeSrc": "2632:119:9",
															"nodeType": "YulIf",
															"src": "2632:119:9"
														},
														{
															"nativeSrc": "2761:117:9",
															"nodeType": "YulBlock",
															"src": "2761:117:9",
															"statements": [
																{
																	"nativeSrc": "2776:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:9"
																				},
																				"nativeSrc": "2836:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:9"
																		},
																		"nativeSrc": "2815:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:9",
															"nodeType": "YulBlock",
															"src": "2888:118:9",
															"statements": [
																{
																	"nativeSrc": "2903:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:9"
																				},
																				"nativeSrc": "2964:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:9"
																		},
																		"nativeSrc": "2943:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:9",
														"nodeType": "YulTypedName",
														"src": "2584:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:9",
														"nodeType": "YulTypedName",
														"src": "2595:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:9",
														"nodeType": "YulTypedName",
														"src": "2607:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:9",
														"nodeType": "YulTypedName",
														"src": "2615:6:9",
														"type": ""
													}
												],
												"src": "2539:474:9"
											},
											{
												"body": {
													"nativeSrc": "3061:48:9",
													"nodeType": "YulBlock",
													"src": "3061:48:9",
													"statements": [
														{
															"nativeSrc": "3071:32:9",
															"nodeType": "YulAssignment",
															"src": "3071:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:9"
																		},
																		"nativeSrc": "3089:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:9"
																},
																"nativeSrc": "3082:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:9",
														"nodeType": "YulTypedName",
														"src": "3043:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:9",
														"nodeType": "YulTypedName",
														"src": "3053:7:9",
														"type": ""
													}
												],
												"src": "3019:90:9"
											},
											{
												"body": {
													"nativeSrc": "3174:50:9",
													"nodeType": "YulBlock",
													"src": "3174:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:9"
																		},
																		"nativeSrc": "3196:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:9"
																},
																"nativeSrc": "3184:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:9"
															},
															"nativeSrc": "3184:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:9",
														"nodeType": "YulTypedName",
														"src": "3162:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:9",
														"nodeType": "YulTypedName",
														"src": "3169:3:9",
														"type": ""
													}
												],
												"src": "3115:109:9"
											},
											{
												"body": {
													"nativeSrc": "3322:118:9",
													"nodeType": "YulBlock",
													"src": "3322:118:9",
													"statements": [
														{
															"nativeSrc": "3332:26:9",
															"nodeType": "YulAssignment",
															"src": "3332:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:9"
																},
																"nativeSrc": "3340:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:9"
																		},
																		"nativeSrc": "3415:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:9"
																},
																"nativeSrc": "3368:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:9"
															},
															"nativeSrc": "3368:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:9",
														"nodeType": "YulTypedName",
														"src": "3294:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:9",
														"nodeType": "YulTypedName",
														"src": "3306:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:9",
														"nodeType": "YulTypedName",
														"src": "3317:4:9",
														"type": ""
													}
												],
												"src": "3230:210:9"
											},
											{
												"body": {
													"nativeSrc": "3511:53:9",
													"nodeType": "YulBlock",
													"src": "3511:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:9"
																		},
																		"nativeSrc": "3533:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:9"
																},
																"nativeSrc": "3521:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:9"
															},
															"nativeSrc": "3521:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:9",
														"nodeType": "YulTypedName",
														"src": "3499:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:9",
														"nodeType": "YulTypedName",
														"src": "3506:3:9",
														"type": ""
													}
												],
												"src": "3446:118:9"
											},
											{
												"body": {
													"nativeSrc": "3668:124:9",
													"nodeType": "YulBlock",
													"src": "3668:124:9",
													"statements": [
														{
															"nativeSrc": "3678:26:9",
															"nodeType": "YulAssignment",
															"src": "3678:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:9"
																},
																"nativeSrc": "3686:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:9"
																		},
																		"nativeSrc": "3767:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:9"
																},
																"nativeSrc": "3714:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:9"
															},
															"nativeSrc": "3714:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:9",
														"nodeType": "YulTypedName",
														"src": "3640:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:9",
														"nodeType": "YulTypedName",
														"src": "3652:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:9",
														"nodeType": "YulTypedName",
														"src": "3663:4:9",
														"type": ""
													}
												],
												"src": "3570:222:9"
											},
											{
												"body": {
													"nativeSrc": "3898:519:9",
													"nodeType": "YulBlock",
													"src": "3898:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:9",
																"nodeType": "YulBlock",
																"src": "3944:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:9"
																			},
																			"nativeSrc": "3946:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:9"
																		},
																		"nativeSrc": "3946:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:9"
																		},
																		"nativeSrc": "3915:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:9"
																},
																"nativeSrc": "3911:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:9"
															},
															"nativeSrc": "3908:119:9",
															"nodeType": "YulIf",
															"src": "3908:119:9"
														},
														{
															"nativeSrc": "4037:117:9",
															"nodeType": "YulBlock",
															"src": "4037:117:9",
															"statements": [
																{
																	"nativeSrc": "4052:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:9"
																				},
																				"nativeSrc": "4112:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:9"
																		},
																		"nativeSrc": "4091:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:9",
															"nodeType": "YulBlock",
															"src": "4164:118:9",
															"statements": [
																{
																	"nativeSrc": "4179:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:9"
																				},
																				"nativeSrc": "4240:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:9"
																		},
																		"nativeSrc": "4219:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:9",
															"nodeType": "YulBlock",
															"src": "4292:118:9",
															"statements": [
																{
																	"nativeSrc": "4307:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:9"
																				},
																				"nativeSrc": "4368:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:9"
																		},
																		"nativeSrc": "4347:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:9",
														"nodeType": "YulTypedName",
														"src": "3852:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:9",
														"nodeType": "YulTypedName",
														"src": "3863:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:9",
														"nodeType": "YulTypedName",
														"src": "3875:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:9",
														"nodeType": "YulTypedName",
														"src": "3883:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:9",
														"nodeType": "YulTypedName",
														"src": "3891:6:9",
														"type": ""
													}
												],
												"src": "3798:619:9"
											},
											{
												"body": {
													"nativeSrc": "4466:43:9",
													"nodeType": "YulBlock",
													"src": "4466:43:9",
													"statements": [
														{
															"nativeSrc": "4476:27:9",
															"nodeType": "YulAssignment",
															"src": "4476:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:9"
																},
																"nativeSrc": "4487:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:9",
														"nodeType": "YulTypedName",
														"src": "4448:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:9",
														"nodeType": "YulTypedName",
														"src": "4458:7:9",
														"type": ""
													}
												],
												"src": "4423:86:9"
											},
											{
												"body": {
													"nativeSrc": "4576:51:9",
													"nodeType": "YulBlock",
													"src": "4576:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:9"
																		},
																		"nativeSrc": "4598:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:9"
																},
																"nativeSrc": "4586:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:9"
															},
															"nativeSrc": "4586:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:9",
														"nodeType": "YulTypedName",
														"src": "4564:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:9",
														"nodeType": "YulTypedName",
														"src": "4571:3:9",
														"type": ""
													}
												],
												"src": "4515:112:9"
											},
											{
												"body": {
													"nativeSrc": "4727:120:9",
													"nodeType": "YulBlock",
													"src": "4727:120:9",
													"statements": [
														{
															"nativeSrc": "4737:26:9",
															"nodeType": "YulAssignment",
															"src": "4737:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:9"
																},
																"nativeSrc": "4745:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:9"
																		},
																		"nativeSrc": "4822:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:9"
																},
																"nativeSrc": "4773:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:9"
															},
															"nativeSrc": "4773:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:9",
														"nodeType": "YulTypedName",
														"src": "4699:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:9",
														"nodeType": "YulTypedName",
														"src": "4711:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:9",
														"nodeType": "YulTypedName",
														"src": "4722:4:9",
														"type": ""
													}
												],
												"src": "4633:214:9"
											},
											{
												"body": {
													"nativeSrc": "4953:519:9",
													"nodeType": "YulBlock",
													"src": "4953:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4999:83:9",
																"nodeType": "YulBlock",
																"src": "4999:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5001:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5001:77:9"
																			},
																			"nativeSrc": "5001:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5001:79:9"
																		},
																		"nativeSrc": "5001:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5001:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4974:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4974:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4983:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4983:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4970:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4970:3:9"
																		},
																		"nativeSrc": "4970:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4970:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4995:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4995:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4966:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4966:3:9"
																},
																"nativeSrc": "4966:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4966:32:9"
															},
															"nativeSrc": "4963:119:9",
															"nodeType": "YulIf",
															"src": "4963:119:9"
														},
														{
															"nativeSrc": "5092:117:9",
															"nodeType": "YulBlock",
															"src": "5092:117:9",
															"statements": [
																{
																	"nativeSrc": "5107:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5107:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5121:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5121:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5111:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5111:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5136:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5136:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5171:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5171:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5182:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5182:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5167:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5167:3:9"
																				},
																				"nativeSrc": "5167:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5167:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5191:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5191:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5146:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5146:20:9"
																		},
																		"nativeSrc": "5146:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5146:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5136:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5136:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5219:118:9",
															"nodeType": "YulBlock",
															"src": "5219:118:9",
															"statements": [
																{
																	"nativeSrc": "5234:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5234:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5248:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5238:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5238:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5264:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5264:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5299:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5299:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5310:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5310:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5295:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5295:3:9"
																				},
																				"nativeSrc": "5295:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5295:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5319:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5319:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5274:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5274:20:9"
																		},
																		"nativeSrc": "5274:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5274:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5264:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5264:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5347:118:9",
															"nodeType": "YulBlock",
															"src": "5347:118:9",
															"statements": [
																{
																	"nativeSrc": "5362:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5362:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5376:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5376:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5366:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5366:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5392:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5392:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5427:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5427:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5438:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5438:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5423:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5423:3:9"
																				},
																				"nativeSrc": "5423:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5423:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5447:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5447:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5402:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5402:20:9"
																		},
																		"nativeSrc": "5402:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5392:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5392:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "4853:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4907:9:9",
														"nodeType": "YulTypedName",
														"src": "4907:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4918:7:9",
														"nodeType": "YulTypedName",
														"src": "4918:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4930:6:9",
														"nodeType": "YulTypedName",
														"src": "4930:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4938:6:9",
														"nodeType": "YulTypedName",
														"src": "4938:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4946:6:9",
														"nodeType": "YulTypedName",
														"src": "4946:6:9",
														"type": ""
													}
												],
												"src": "4853:619:9"
											},
											{
												"body": {
													"nativeSrc": "5544:263:9",
													"nodeType": "YulBlock",
													"src": "5544:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5590:83:9",
																"nodeType": "YulBlock",
																"src": "5590:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5592:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5592:77:9"
																			},
																			"nativeSrc": "5592:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5592:79:9"
																		},
																		"nativeSrc": "5592:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5592:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5565:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5565:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5574:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5574:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5561:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5561:3:9"
																		},
																		"nativeSrc": "5561:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5561:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5586:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5586:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5557:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5557:3:9"
																},
																"nativeSrc": "5557:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5557:32:9"
															},
															"nativeSrc": "5554:119:9",
															"nodeType": "YulIf",
															"src": "5554:119:9"
														},
														{
															"nativeSrc": "5683:117:9",
															"nodeType": "YulBlock",
															"src": "5683:117:9",
															"statements": [
																{
																	"nativeSrc": "5698:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5698:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5712:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5712:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5702:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5702:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5727:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5727:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5762:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5762:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5773:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5773:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5758:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5758:3:9"
																				},
																				"nativeSrc": "5758:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5758:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5782:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5782:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5737:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5737:20:9"
																		},
																		"nativeSrc": "5737:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5727:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5727:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5478:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5514:9:9",
														"nodeType": "YulTypedName",
														"src": "5514:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5525:7:9",
														"nodeType": "YulTypedName",
														"src": "5525:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5537:6:9",
														"nodeType": "YulTypedName",
														"src": "5537:6:9",
														"type": ""
													}
												],
												"src": "5478:329:9"
											},
											{
												"body": {
													"nativeSrc": "5879:263:9",
													"nodeType": "YulBlock",
													"src": "5879:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5925:83:9",
																"nodeType": "YulBlock",
																"src": "5925:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5927:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5927:77:9"
																			},
																			"nativeSrc": "5927:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5927:79:9"
																		},
																		"nativeSrc": "5927:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5927:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5900:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5900:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5909:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5909:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5896:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5896:3:9"
																		},
																		"nativeSrc": "5896:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5896:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5921:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5921:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5892:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5892:3:9"
																},
																"nativeSrc": "5892:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5892:32:9"
															},
															"nativeSrc": "5889:119:9",
															"nodeType": "YulIf",
															"src": "5889:119:9"
														},
														{
															"nativeSrc": "6018:117:9",
															"nodeType": "YulBlock",
															"src": "6018:117:9",
															"statements": [
																{
																	"nativeSrc": "6033:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6033:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6047:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6047:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6037:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6037:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6062:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6062:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6097:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6097:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6108:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6108:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6093:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6093:3:9"
																				},
																				"nativeSrc": "6093:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6093:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6117:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6117:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6072:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6072:20:9"
																		},
																		"nativeSrc": "6072:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6072:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6062:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6062:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5813:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5849:9:9",
														"nodeType": "YulTypedName",
														"src": "5849:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5860:7:9",
														"nodeType": "YulTypedName",
														"src": "5860:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5872:6:9",
														"nodeType": "YulTypedName",
														"src": "5872:6:9",
														"type": ""
													}
												],
												"src": "5813:329:9"
											},
											{
												"body": {
													"nativeSrc": "6213:53:9",
													"nodeType": "YulBlock",
													"src": "6213:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6230:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6230:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6253:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6253:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6235:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6235:17:9"
																		},
																		"nativeSrc": "6235:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6235:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6223:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6223:6:9"
																},
																"nativeSrc": "6223:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6223:37:9"
															},
															"nativeSrc": "6223:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6223:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6148:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6201:5:9",
														"nodeType": "YulTypedName",
														"src": "6201:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6208:3:9",
														"nodeType": "YulTypedName",
														"src": "6208:3:9",
														"type": ""
													}
												],
												"src": "6148:118:9"
											},
											{
												"body": {
													"nativeSrc": "6370:124:9",
													"nodeType": "YulBlock",
													"src": "6370:124:9",
													"statements": [
														{
															"nativeSrc": "6380:26:9",
															"nodeType": "YulAssignment",
															"src": "6380:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6392:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6392:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6403:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6388:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6388:3:9"
																},
																"nativeSrc": "6388:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6388:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6380:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6380:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6460:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6460:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6473:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6473:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6484:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6484:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6469:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6469:3:9"
																		},
																		"nativeSrc": "6469:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6469:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6416:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6416:43:9"
																},
																"nativeSrc": "6416:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6416:71:9"
															},
															"nativeSrc": "6416:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6416:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6272:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6342:9:9",
														"nodeType": "YulTypedName",
														"src": "6342:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6354:6:9",
														"nodeType": "YulTypedName",
														"src": "6354:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6365:4:9",
														"nodeType": "YulTypedName",
														"src": "6365:4:9",
														"type": ""
													}
												],
												"src": "6272:222:9"
											},
											{
												"body": {
													"nativeSrc": "6583:391:9",
													"nodeType": "YulBlock",
													"src": "6583:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6629:83:9",
																"nodeType": "YulBlock",
																"src": "6629:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6631:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6631:77:9"
																			},
																			"nativeSrc": "6631:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6631:79:9"
																		},
																		"nativeSrc": "6631:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6631:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6604:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6604:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6613:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6613:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6600:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:9"
																		},
																		"nativeSrc": "6600:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6625:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6625:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6596:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6596:3:9"
																},
																"nativeSrc": "6596:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6596:32:9"
															},
															"nativeSrc": "6593:119:9",
															"nodeType": "YulIf",
															"src": "6593:119:9"
														},
														{
															"nativeSrc": "6722:117:9",
															"nodeType": "YulBlock",
															"src": "6722:117:9",
															"statements": [
																{
																	"nativeSrc": "6737:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6737:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6751:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6751:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6741:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6741:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6766:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6766:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6801:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6801:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6812:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6812:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6797:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6797:3:9"
																				},
																				"nativeSrc": "6797:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6797:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6821:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6821:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6776:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6776:20:9"
																		},
																		"nativeSrc": "6776:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6776:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6766:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6766:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6849:118:9",
															"nodeType": "YulBlock",
															"src": "6849:118:9",
															"statements": [
																{
																	"nativeSrc": "6864:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6864:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6878:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6878:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6868:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6868:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6894:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6894:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6929:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6929:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6940:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6940:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6925:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6925:3:9"
																				},
																				"nativeSrc": "6925:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6925:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6949:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6949:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6904:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6904:20:9"
																		},
																		"nativeSrc": "6904:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6904:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6894:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6894:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6500:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6545:9:9",
														"nodeType": "YulTypedName",
														"src": "6545:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6556:7:9",
														"nodeType": "YulTypedName",
														"src": "6556:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6568:6:9",
														"nodeType": "YulTypedName",
														"src": "6568:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6576:6:9",
														"nodeType": "YulTypedName",
														"src": "6576:6:9",
														"type": ""
													}
												],
												"src": "6500:474:9"
											},
											{
												"body": {
													"nativeSrc": "7008:152:9",
													"nodeType": "YulBlock",
													"src": "7008:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7025:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7028:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7018:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:9"
																},
																"nativeSrc": "7018:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7018:88:9"
															},
															"nativeSrc": "7018:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7018:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7122:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7125:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7115:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:9"
																},
																"nativeSrc": "7115:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7115:15:9"
															},
															"nativeSrc": "7115:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7115:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7146:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7149:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7139:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:9"
																},
																"nativeSrc": "7139:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7139:15:9"
															},
															"nativeSrc": "7139:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7139:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6980:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:180:9"
											},
											{
												"body": {
													"nativeSrc": "7217:269:9",
													"nodeType": "YulBlock",
													"src": "7217:269:9",
													"statements": [
														{
															"nativeSrc": "7227:22:9",
															"nodeType": "YulAssignment",
															"src": "7227:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7241:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7241:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7247:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7247:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7237:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7237:3:9"
																},
																"nativeSrc": "7237:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7237:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7227:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7227:6:9"
																}
															]
														},
														{
															"nativeSrc": "7258:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7258:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7288:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7288:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7294:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7294:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7284:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:9"
																},
																"nativeSrc": "7284:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7284:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7262:18:9",
																	"nodeType": "YulTypedName",
																	"src": "7262:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7335:51:9",
																"nodeType": "YulBlock",
																"src": "7335:51:9",
																"statements": [
																	{
																		"nativeSrc": "7349:27:9",
																		"nodeType": "YulAssignment",
																		"src": "7349:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7363:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "7363:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7371:4:9",
																					"nodeType": "YulLiteral",
																					"src": "7371:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7359:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7359:3:9"
																			},
																			"nativeSrc": "7359:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7359:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7349:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7349:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7315:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "7315:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7308:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7308:6:9"
																},
																"nativeSrc": "7308:26:9",
																"nodeType": "YulFunctionCall",
																"src": "7308:26:9"
															},
															"nativeSrc": "7305:81:9",
															"nodeType": "YulIf",
															"src": "7305:81:9"
														},
														{
															"body": {
																"nativeSrc": "7438:42:9",
																"nodeType": "YulBlock",
																"src": "7438:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7452:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7452:16:9"
																			},
																			"nativeSrc": "7452:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7452:18:9"
																		},
																		"nativeSrc": "7452:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7452:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7402:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "7402:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7425:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7425:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7433:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7433:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7422:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7422:2:9"
																		},
																		"nativeSrc": "7422:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7422:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7399:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7399:2:9"
																},
																"nativeSrc": "7399:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7399:38:9"
															},
															"nativeSrc": "7396:84:9",
															"nodeType": "YulIf",
															"src": "7396:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7166:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7201:4:9",
														"nodeType": "YulTypedName",
														"src": "7201:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7210:6:9",
														"nodeType": "YulTypedName",
														"src": "7210:6:9",
														"type": ""
													}
												],
												"src": "7166:320:9"
											},
											{
												"body": {
													"nativeSrc": "7520:152:9",
													"nodeType": "YulBlock",
													"src": "7520:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7537:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7537:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7540:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7540:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7530:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7530:6:9"
																},
																"nativeSrc": "7530:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7530:88:9"
															},
															"nativeSrc": "7530:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7530:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7634:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7634:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7637:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7637:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7627:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7627:6:9"
																},
																"nativeSrc": "7627:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7627:15:9"
															},
															"nativeSrc": "7627:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7627:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7658:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7658:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7661:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7661:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7651:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7651:6:9"
																},
																"nativeSrc": "7651:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7651:15:9"
															},
															"nativeSrc": "7651:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7651:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7492:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7492:180:9"
											},
											{
												"body": {
													"nativeSrc": "7722:147:9",
													"nodeType": "YulBlock",
													"src": "7722:147:9",
													"statements": [
														{
															"nativeSrc": "7732:25:9",
															"nodeType": "YulAssignment",
															"src": "7732:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7755:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7755:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7737:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7737:17:9"
																},
																"nativeSrc": "7737:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7737:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7732:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7732:1:9"
																}
															]
														},
														{
															"nativeSrc": "7766:25:9",
															"nodeType": "YulAssignment",
															"src": "7766:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7789:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7789:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7771:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7771:17:9"
																},
																"nativeSrc": "7771:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7771:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7766:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7766:1:9"
																}
															]
														},
														{
															"nativeSrc": "7800:16:9",
															"nodeType": "YulAssignment",
															"src": "7800:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7811:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7811:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7814:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7814:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7807:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7807:3:9"
																},
																"nativeSrc": "7807:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7807:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7800:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7800:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7840:22:9",
																"nodeType": "YulBlock",
																"src": "7840:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7842:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7842:16:9"
																			},
																			"nativeSrc": "7842:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7842:18:9"
																		},
																		"nativeSrc": "7842:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7842:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7832:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7832:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7835:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7835:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7829:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7829:2:9"
																},
																"nativeSrc": "7829:10:9",
																"nodeType": "YulFunctionCall",
																"src": "7829:10:9"
															},
															"nativeSrc": "7826:36:9",
															"nodeType": "YulIf",
															"src": "7826:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7678:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7709:1:9",
														"nodeType": "YulTypedName",
														"src": "7709:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7712:1:9",
														"nodeType": "YulTypedName",
														"src": "7712:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7718:3:9",
														"nodeType": "YulTypedName",
														"src": "7718:3:9",
														"type": ""
													}
												],
												"src": "7678:191:9"
											},
											{
												"body": {
													"nativeSrc": "7981:65:9",
													"nodeType": "YulBlock",
													"src": "7981:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8003:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8003:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8011:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8011:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7999:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7999:3:9"
																		},
																		"nativeSrc": "7999:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7999:14:9"
																	},
																	{
																		"hexValue": "4163636f756e74206973206e6f742066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "8015:23:9",
																		"nodeType": "YulLiteral",
																		"src": "8015:23:9",
																		"type": "",
																		"value": "Account is not frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7992:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7992:6:9"
																},
																"nativeSrc": "7992:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7992:47:9"
															},
															"nativeSrc": "7992:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7992:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
												"nativeSrc": "7875:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7973:6:9",
														"nodeType": "YulTypedName",
														"src": "7973:6:9",
														"type": ""
													}
												],
												"src": "7875:171:9"
											},
											{
												"body": {
													"nativeSrc": "8198:220:9",
													"nodeType": "YulBlock",
													"src": "8198:220:9",
													"statements": [
														{
															"nativeSrc": "8208:74:9",
															"nodeType": "YulAssignment",
															"src": "8208:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8274:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8274:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8279:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8215:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8215:58:9"
																},
																"nativeSrc": "8215:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8215:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8208:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8208:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8380:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8380:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
																	"nativeSrc": "8291:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8291:88:9"
																},
																"nativeSrc": "8291:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8291:93:9"
															},
															"nativeSrc": "8291:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8291:93:9"
														},
														{
															"nativeSrc": "8393:19:9",
															"nodeType": "YulAssignment",
															"src": "8393:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8404:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8404:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8409:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8409:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8400:3:9"
																},
																"nativeSrc": "8400:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8400:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8393:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8393:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8052:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8186:3:9",
														"nodeType": "YulTypedName",
														"src": "8186:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8194:3:9",
														"nodeType": "YulTypedName",
														"src": "8194:3:9",
														"type": ""
													}
												],
												"src": "8052:366:9"
											},
											{
												"body": {
													"nativeSrc": "8595:248:9",
													"nodeType": "YulBlock",
													"src": "8595:248:9",
													"statements": [
														{
															"nativeSrc": "8605:26:9",
															"nodeType": "YulAssignment",
															"src": "8605:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8617:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8617:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8628:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8628:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8613:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8613:3:9"
																},
																"nativeSrc": "8613:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8613:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8605:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8605:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8652:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8652:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8663:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8663:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8648:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8648:3:9"
																		},
																		"nativeSrc": "8648:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8648:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8671:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8671:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8677:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8677:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8667:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8667:3:9"
																		},
																		"nativeSrc": "8667:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8667:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8641:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8641:6:9"
																},
																"nativeSrc": "8641:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8641:47:9"
															},
															"nativeSrc": "8641:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8641:47:9"
														},
														{
															"nativeSrc": "8697:139:9",
															"nodeType": "YulAssignment",
															"src": "8697:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8831:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8831:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8705:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8705:124:9"
																},
																"nativeSrc": "8705:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8705:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8697:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8697:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8424:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8575:9:9",
														"nodeType": "YulTypedName",
														"src": "8575:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8590:4:9",
														"nodeType": "YulTypedName",
														"src": "8590:4:9",
														"type": ""
													}
												],
												"src": "8424:419:9"
											},
											{
												"body": {
													"nativeSrc": "8955:64:9",
													"nodeType": "YulBlock",
													"src": "8955:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8977:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8977:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8985:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8985:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8973:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8973:3:9"
																		},
																		"nativeSrc": "8973:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8973:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8989:22:9",
																		"nodeType": "YulLiteral",
																		"src": "8989:22:9",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8966:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8966:6:9"
																},
																"nativeSrc": "8966:46:9",
																"nodeType": "YulFunctionCall",
																"src": "8966:46:9"
															},
															"nativeSrc": "8966:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "8966:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "8849:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8947:6:9",
														"nodeType": "YulTypedName",
														"src": "8947:6:9",
														"type": ""
													}
												],
												"src": "8849:170:9"
											},
											{
												"body": {
													"nativeSrc": "9171:220:9",
													"nodeType": "YulBlock",
													"src": "9171:220:9",
													"statements": [
														{
															"nativeSrc": "9181:74:9",
															"nodeType": "YulAssignment",
															"src": "9181:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9247:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9247:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9252:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9252:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9188:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9188:58:9"
																},
																"nativeSrc": "9188:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9188:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9181:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9353:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9353:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "9264:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9264:88:9"
																},
																"nativeSrc": "9264:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9264:93:9"
															},
															"nativeSrc": "9264:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9264:93:9"
														},
														{
															"nativeSrc": "9366:19:9",
															"nodeType": "YulAssignment",
															"src": "9366:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9377:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9377:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9382:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9382:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9373:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9373:3:9"
																},
																"nativeSrc": "9373:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9373:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9366:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9366:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9025:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9159:3:9",
														"nodeType": "YulTypedName",
														"src": "9159:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9167:3:9",
														"nodeType": "YulTypedName",
														"src": "9167:3:9",
														"type": ""
													}
												],
												"src": "9025:366:9"
											},
											{
												"body": {
													"nativeSrc": "9568:248:9",
													"nodeType": "YulBlock",
													"src": "9568:248:9",
													"statements": [
														{
															"nativeSrc": "9578:26:9",
															"nodeType": "YulAssignment",
															"src": "9578:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9590:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9590:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9601:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9601:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9586:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9586:3:9"
																},
																"nativeSrc": "9586:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9586:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9578:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9578:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9625:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9625:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9636:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9636:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9621:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9621:3:9"
																		},
																		"nativeSrc": "9621:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9621:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9644:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9644:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9650:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9650:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9640:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9640:3:9"
																		},
																		"nativeSrc": "9640:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9640:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9614:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9614:6:9"
																},
																"nativeSrc": "9614:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9614:47:9"
															},
															"nativeSrc": "9614:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9614:47:9"
														},
														{
															"nativeSrc": "9670:139:9",
															"nodeType": "YulAssignment",
															"src": "9670:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9804:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9804:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9678:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9678:124:9"
																},
																"nativeSrc": "9678:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9678:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9670:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9670:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9397:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9548:9:9",
														"nodeType": "YulTypedName",
														"src": "9548:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9563:4:9",
														"nodeType": "YulTypedName",
														"src": "9563:4:9",
														"type": ""
													}
												],
												"src": "9397:419:9"
											},
											{
												"body": {
													"nativeSrc": "9928:69:9",
													"nodeType": "YulBlock",
													"src": "9928:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9950:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9950:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9958:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9958:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9946:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9946:3:9"
																		},
																		"nativeSrc": "9946:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9946:14:9"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c72656164792066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "9962:27:9",
																		"nodeType": "YulLiteral",
																		"src": "9962:27:9",
																		"type": "",
																		"value": "Account is already frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9939:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9939:6:9"
																},
																"nativeSrc": "9939:51:9",
																"nodeType": "YulFunctionCall",
																"src": "9939:51:9"
															},
															"nativeSrc": "9939:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "9939:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
												"nativeSrc": "9822:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9920:6:9",
														"nodeType": "YulTypedName",
														"src": "9920:6:9",
														"type": ""
													}
												],
												"src": "9822:175:9"
											},
											{
												"body": {
													"nativeSrc": "10149:220:9",
													"nodeType": "YulBlock",
													"src": "10149:220:9",
													"statements": [
														{
															"nativeSrc": "10159:74:9",
															"nodeType": "YulAssignment",
															"src": "10159:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10225:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10230:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10230:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10166:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10166:58:9"
																},
																"nativeSrc": "10166:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10166:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10159:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10159:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10331:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10331:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
																	"nativeSrc": "10242:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10242:88:9"
																},
																"nativeSrc": "10242:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10242:93:9"
															},
															"nativeSrc": "10242:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10242:93:9"
														},
														{
															"nativeSrc": "10344:19:9",
															"nodeType": "YulAssignment",
															"src": "10344:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10355:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10355:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10360:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10360:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10351:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10351:3:9"
																},
																"nativeSrc": "10351:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10351:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10344:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10344:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10003:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10137:3:9",
														"nodeType": "YulTypedName",
														"src": "10137:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10145:3:9",
														"nodeType": "YulTypedName",
														"src": "10145:3:9",
														"type": ""
													}
												],
												"src": "10003:366:9"
											},
											{
												"body": {
													"nativeSrc": "10546:248:9",
													"nodeType": "YulBlock",
													"src": "10546:248:9",
													"statements": [
														{
															"nativeSrc": "10556:26:9",
															"nodeType": "YulAssignment",
															"src": "10556:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10568:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10568:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10579:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10579:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10564:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10564:3:9"
																},
																"nativeSrc": "10564:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10564:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10556:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10556:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10603:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10603:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10614:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10614:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10599:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10599:3:9"
																		},
																		"nativeSrc": "10599:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10599:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10622:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10622:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10628:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10628:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10618:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10618:3:9"
																		},
																		"nativeSrc": "10618:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10618:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10592:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10592:6:9"
																},
																"nativeSrc": "10592:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10592:47:9"
															},
															"nativeSrc": "10592:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10592:47:9"
														},
														{
															"nativeSrc": "10648:139:9",
															"nodeType": "YulAssignment",
															"src": "10648:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10782:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10782:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10656:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10656:124:9"
																},
																"nativeSrc": "10656:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10656:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10648:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10648:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10375:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10526:9:9",
														"nodeType": "YulTypedName",
														"src": "10526:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10541:4:9",
														"nodeType": "YulTypedName",
														"src": "10541:4:9",
														"type": ""
													}
												],
												"src": "10375:419:9"
											},
											{
												"body": {
													"nativeSrc": "10828:152:9",
													"nodeType": "YulBlock",
													"src": "10828:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10845:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10845:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10848:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10848:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10838:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10838:6:9"
																},
																"nativeSrc": "10838:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10838:88:9"
															},
															"nativeSrc": "10838:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10838:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10942:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10942:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10945:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10945:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10935:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10935:6:9"
																},
																"nativeSrc": "10935:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10935:15:9"
															},
															"nativeSrc": "10935:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10935:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10966:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10966:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10969:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10969:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10959:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10959:6:9"
																},
																"nativeSrc": "10959:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10959:15:9"
															},
															"nativeSrc": "10959:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10959:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10800:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10800:180:9"
											},
											{
												"body": {
													"nativeSrc": "11031:149:9",
													"nodeType": "YulBlock",
													"src": "11031:149:9",
													"statements": [
														{
															"nativeSrc": "11041:25:9",
															"nodeType": "YulAssignment",
															"src": "11041:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11064:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11064:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11046:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11046:17:9"
																},
																"nativeSrc": "11046:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11046:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11041:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11041:1:9"
																}
															]
														},
														{
															"nativeSrc": "11075:25:9",
															"nodeType": "YulAssignment",
															"src": "11075:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11098:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11098:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11080:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11080:17:9"
																},
																"nativeSrc": "11080:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11080:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11075:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11075:1:9"
																}
															]
														},
														{
															"nativeSrc": "11109:17:9",
															"nodeType": "YulAssignment",
															"src": "11109:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11121:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11121:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11124:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11124:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11117:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11117:3:9"
																},
																"nativeSrc": "11117:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11117:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11109:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11109:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11151:22:9",
																"nodeType": "YulBlock",
																"src": "11151:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11153:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11153:16:9"
																			},
																			"nativeSrc": "11153:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11153:18:9"
																		},
																		"nativeSrc": "11153:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11153:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11142:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11142:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11148:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11148:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11139:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11139:2:9"
																},
																"nativeSrc": "11139:11:9",
																"nodeType": "YulFunctionCall",
																"src": "11139:11:9"
															},
															"nativeSrc": "11136:37:9",
															"nodeType": "YulIf",
															"src": "11136:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10986:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11017:1:9",
														"nodeType": "YulTypedName",
														"src": "11017:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11020:1:9",
														"nodeType": "YulTypedName",
														"src": "11020:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11026:4:9",
														"nodeType": "YulTypedName",
														"src": "11026:4:9",
														"type": ""
													}
												],
												"src": "10986:194:9"
											},
											{
												"body": {
													"nativeSrc": "11214:152:9",
													"nodeType": "YulBlock",
													"src": "11214:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11231:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11231:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11234:77:9",
																		"nodeType": "YulLiteral",
																		"src": "11234:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11224:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11224:6:9"
																},
																"nativeSrc": "11224:88:9",
																"nodeType": "YulFunctionCall",
																"src": "11224:88:9"
															},
															"nativeSrc": "11224:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "11224:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11328:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11328:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11331:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11331:4:9",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11321:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11321:6:9"
																},
																"nativeSrc": "11321:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11321:15:9"
															},
															"nativeSrc": "11321:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "11321:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11352:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11352:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11355:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11355:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11345:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11345:6:9"
																},
																"nativeSrc": "11345:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11345:15:9"
															},
															"nativeSrc": "11345:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "11345:15:9"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "11186:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "11186:180:9"
											},
											{
												"body": {
													"nativeSrc": "11415:128:9",
													"nodeType": "YulBlock",
													"src": "11415:128:9",
													"statements": [
														{
															"nativeSrc": "11425:33:9",
															"nodeType": "YulAssignment",
															"src": "11425:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11452:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11452:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11434:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11434:17:9"
																},
																"nativeSrc": "11434:24:9",
																"nodeType": "YulFunctionCall",
																"src": "11434:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11425:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11425:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11486:22:9",
																"nodeType": "YulBlock",
																"src": "11486:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11488:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11488:16:9"
																			},
																			"nativeSrc": "11488:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11488:18:9"
																		},
																		"nativeSrc": "11488:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11488:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11473:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11473:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11480:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11480:4:9",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11470:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11470:2:9"
																},
																"nativeSrc": "11470:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11470:15:9"
															},
															"nativeSrc": "11467:41:9",
															"nodeType": "YulIf",
															"src": "11467:41:9"
														},
														{
															"nativeSrc": "11517:20:9",
															"nodeType": "YulAssignment",
															"src": "11517:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11528:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11528:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11535:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11535:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11524:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11524:3:9"
																},
																"nativeSrc": "11524:13:9",
																"nodeType": "YulFunctionCall",
																"src": "11524:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11517:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11517:3:9"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "11372:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11401:5:9",
														"nodeType": "YulTypedName",
														"src": "11401:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11411:3:9",
														"nodeType": "YulTypedName",
														"src": "11411:3:9",
														"type": ""
													}
												],
												"src": "11372:171:9"
											},
											{
												"body": {
													"nativeSrc": "11592:190:9",
													"nodeType": "YulBlock",
													"src": "11592:190:9",
													"statements": [
														{
															"nativeSrc": "11602:33:9",
															"nodeType": "YulAssignment",
															"src": "11602:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11629:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11629:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11611:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11611:17:9"
																},
																"nativeSrc": "11611:24:9",
																"nodeType": "YulFunctionCall",
																"src": "11611:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11602:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11602:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11725:22:9",
																"nodeType": "YulBlock",
																"src": "11725:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11727:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11727:16:9"
																			},
																			"nativeSrc": "11727:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11727:18:9"
																		},
																		"nativeSrc": "11727:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11727:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11650:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11650:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11657:66:9",
																		"nodeType": "YulLiteral",
																		"src": "11657:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11647:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11647:2:9"
																},
																"nativeSrc": "11647:77:9",
																"nodeType": "YulFunctionCall",
																"src": "11647:77:9"
															},
															"nativeSrc": "11644:103:9",
															"nodeType": "YulIf",
															"src": "11644:103:9"
														},
														{
															"nativeSrc": "11756:20:9",
															"nodeType": "YulAssignment",
															"src": "11756:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11767:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11767:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11774:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11774:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11763:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11763:3:9"
																},
																"nativeSrc": "11763:13:9",
																"nodeType": "YulFunctionCall",
																"src": "11763:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11756:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11756:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11549:233:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11578:5:9",
														"nodeType": "YulTypedName",
														"src": "11578:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11588:3:9",
														"nodeType": "YulTypedName",
														"src": "11588:3:9",
														"type": ""
													}
												],
												"src": "11549:233:9"
											},
											{
												"body": {
													"nativeSrc": "11942:288:9",
													"nodeType": "YulBlock",
													"src": "11942:288:9",
													"statements": [
														{
															"nativeSrc": "11952:26:9",
															"nodeType": "YulAssignment",
															"src": "11952:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11964:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11964:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11975:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11975:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11960:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11960:3:9"
																},
																"nativeSrc": "11960:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11960:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11952:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11952:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12032:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12032:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12045:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12045:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12056:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12056:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12041:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12041:3:9"
																		},
																		"nativeSrc": "12041:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12041:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11988:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11988:43:9"
																},
																"nativeSrc": "11988:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11988:71:9"
															},
															"nativeSrc": "11988:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11988:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12113:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12113:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12126:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12126:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12137:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12137:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12122:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12122:3:9"
																		},
																		"nativeSrc": "12122:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12122:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12069:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12069:43:9"
																},
																"nativeSrc": "12069:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12069:72:9"
															},
															"nativeSrc": "12069:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12069:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12195:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12195:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12208:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12208:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12219:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12219:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12204:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12204:3:9"
																		},
																		"nativeSrc": "12204:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12204:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12151:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12151:43:9"
																},
																"nativeSrc": "12151:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12151:72:9"
															},
															"nativeSrc": "12151:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12151:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11788:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11898:9:9",
														"nodeType": "YulTypedName",
														"src": "11898:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11910:6:9",
														"nodeType": "YulTypedName",
														"src": "11910:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11918:6:9",
														"nodeType": "YulTypedName",
														"src": "11918:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11926:6:9",
														"nodeType": "YulTypedName",
														"src": "11926:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11937:4:9",
														"nodeType": "YulTypedName",
														"src": "11937:4:9",
														"type": ""
													}
												],
												"src": "11788:442:9"
											},
											{
												"body": {
													"nativeSrc": "12342:71:9",
													"nodeType": "YulBlock",
													"src": "12342:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12364:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12364:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12372:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12372:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12360:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12360:3:9"
																		},
																		"nativeSrc": "12360:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12360:14:9"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572207768696c6520706175736564",
																		"kind": "string",
																		"nativeSrc": "12376:29:9",
																		"nodeType": "YulLiteral",
																		"src": "12376:29:9",
																		"type": "",
																		"value": "Token transfer while paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12353:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12353:6:9"
																},
																"nativeSrc": "12353:53:9",
																"nodeType": "YulFunctionCall",
																"src": "12353:53:9"
															},
															"nativeSrc": "12353:53:9",
															"nodeType": "YulExpressionStatement",
															"src": "12353:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65",
												"nativeSrc": "12236:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12334:6:9",
														"nodeType": "YulTypedName",
														"src": "12334:6:9",
														"type": ""
													}
												],
												"src": "12236:177:9"
											},
											{
												"body": {
													"nativeSrc": "12565:220:9",
													"nodeType": "YulBlock",
													"src": "12565:220:9",
													"statements": [
														{
															"nativeSrc": "12575:74:9",
															"nodeType": "YulAssignment",
															"src": "12575:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12641:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12641:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12646:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12646:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12582:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12582:58:9"
																},
																"nativeSrc": "12582:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12582:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12575:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12575:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12747:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12747:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65",
																	"nativeSrc": "12658:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12658:88:9"
																},
																"nativeSrc": "12658:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12658:93:9"
															},
															"nativeSrc": "12658:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12658:93:9"
														},
														{
															"nativeSrc": "12760:19:9",
															"nodeType": "YulAssignment",
															"src": "12760:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12771:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12771:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12776:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12776:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12767:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12767:3:9"
																},
																"nativeSrc": "12767:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12767:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12760:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12760:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12419:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12553:3:9",
														"nodeType": "YulTypedName",
														"src": "12553:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12561:3:9",
														"nodeType": "YulTypedName",
														"src": "12561:3:9",
														"type": ""
													}
												],
												"src": "12419:366:9"
											},
											{
												"body": {
													"nativeSrc": "12962:248:9",
													"nodeType": "YulBlock",
													"src": "12962:248:9",
													"statements": [
														{
															"nativeSrc": "12972:26:9",
															"nodeType": "YulAssignment",
															"src": "12972:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12984:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12984:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12995:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12995:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12980:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12980:3:9"
																},
																"nativeSrc": "12980:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12980:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12972:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12972:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13019:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13019:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13030:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13030:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13015:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13015:3:9"
																		},
																		"nativeSrc": "13015:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13015:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13038:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13038:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13044:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13044:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13034:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13034:3:9"
																		},
																		"nativeSrc": "13034:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13034:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13008:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13008:6:9"
																},
																"nativeSrc": "13008:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13008:47:9"
															},
															"nativeSrc": "13008:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13008:47:9"
														},
														{
															"nativeSrc": "13064:139:9",
															"nodeType": "YulAssignment",
															"src": "13064:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13198:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13198:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13072:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13072:124:9"
																},
																"nativeSrc": "13072:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13072:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13064:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13064:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12791:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12942:9:9",
														"nodeType": "YulTypedName",
														"src": "12942:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12957:4:9",
														"nodeType": "YulTypedName",
														"src": "12957:4:9",
														"type": ""
													}
												],
												"src": "12791:419:9"
											},
											{
												"body": {
													"nativeSrc": "13322:136:9",
													"nodeType": "YulBlock",
													"src": "13322:136:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13344:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13344:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13352:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13352:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13340:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13340:3:9"
																		},
																		"nativeSrc": "13340:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13340:14:9"
																	},
																	{
																		"hexValue": "45524332304c6f636b61626c653a207472616e7366657220616d6f756e742065",
																		"kind": "string",
																		"nativeSrc": "13356:34:9",
																		"nodeType": "YulLiteral",
																		"src": "13356:34:9",
																		"type": "",
																		"value": "ERC20Lockable: transfer amount e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13333:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13333:6:9"
																},
																"nativeSrc": "13333:58:9",
																"nodeType": "YulFunctionCall",
																"src": "13333:58:9"
															},
															"nativeSrc": "13333:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "13333:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13412:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13412:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13420:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13420:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13408:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13408:3:9"
																		},
																		"nativeSrc": "13408:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13408:15:9"
																	},
																	{
																		"hexValue": "78636565647320756e6c6f636b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "13425:25:9",
																		"nodeType": "YulLiteral",
																		"src": "13425:25:9",
																		"type": "",
																		"value": "xceeds unlocked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13401:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13401:6:9"
																},
																"nativeSrc": "13401:50:9",
																"nodeType": "YulFunctionCall",
																"src": "13401:50:9"
															},
															"nativeSrc": "13401:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "13401:50:9"
														}
													]
												},
												"name": "store_literal_in_memory_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d",
												"nativeSrc": "13216:242:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13314:6:9",
														"nodeType": "YulTypedName",
														"src": "13314:6:9",
														"type": ""
													}
												],
												"src": "13216:242:9"
											},
											{
												"body": {
													"nativeSrc": "13610:220:9",
													"nodeType": "YulBlock",
													"src": "13610:220:9",
													"statements": [
														{
															"nativeSrc": "13620:74:9",
															"nodeType": "YulAssignment",
															"src": "13620:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13686:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13686:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13691:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13691:2:9",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13627:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13627:58:9"
																},
																"nativeSrc": "13627:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13627:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13620:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13620:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13792:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13792:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d",
																	"nativeSrc": "13703:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13703:88:9"
																},
																"nativeSrc": "13703:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13703:93:9"
															},
															"nativeSrc": "13703:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13703:93:9"
														},
														{
															"nativeSrc": "13805:19:9",
															"nodeType": "YulAssignment",
															"src": "13805:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13816:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13816:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13821:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13821:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13812:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13812:3:9"
																},
																"nativeSrc": "13812:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13812:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13805:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13805:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13464:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13598:3:9",
														"nodeType": "YulTypedName",
														"src": "13598:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13606:3:9",
														"nodeType": "YulTypedName",
														"src": "13606:3:9",
														"type": ""
													}
												],
												"src": "13464:366:9"
											},
											{
												"body": {
													"nativeSrc": "14007:248:9",
													"nodeType": "YulBlock",
													"src": "14007:248:9",
													"statements": [
														{
															"nativeSrc": "14017:26:9",
															"nodeType": "YulAssignment",
															"src": "14017:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14029:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14029:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14040:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14040:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14025:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14025:3:9"
																},
																"nativeSrc": "14025:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14025:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14017:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14017:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14064:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14064:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14075:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14075:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14060:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14060:3:9"
																		},
																		"nativeSrc": "14060:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14060:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14083:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14083:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14089:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14089:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14079:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14079:3:9"
																		},
																		"nativeSrc": "14079:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14079:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14053:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14053:6:9"
																},
																"nativeSrc": "14053:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14053:47:9"
															},
															"nativeSrc": "14053:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14053:47:9"
														},
														{
															"nativeSrc": "14109:139:9",
															"nodeType": "YulAssignment",
															"src": "14109:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14243:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14243:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14117:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14117:124:9"
																},
																"nativeSrc": "14117:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14117:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14109:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14109:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13836:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13987:9:9",
														"nodeType": "YulTypedName",
														"src": "13987:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14002:4:9",
														"nodeType": "YulTypedName",
														"src": "14002:4:9",
														"type": ""
													}
												],
												"src": "13836:419:9"
											},
											{
												"body": {
													"nativeSrc": "14367:64:9",
													"nodeType": "YulBlock",
													"src": "14367:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14389:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14389:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14397:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14397:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14385:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14385:3:9"
																		},
																		"nativeSrc": "14385:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14385:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "14401:22:9",
																		"nodeType": "YulLiteral",
																		"src": "14401:22:9",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14378:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14378:6:9"
																},
																"nativeSrc": "14378:46:9",
																"nodeType": "YulFunctionCall",
																"src": "14378:46:9"
															},
															"nativeSrc": "14378:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "14378:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "14261:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14359:6:9",
														"nodeType": "YulTypedName",
														"src": "14359:6:9",
														"type": ""
													}
												],
												"src": "14261:170:9"
											},
											{
												"body": {
													"nativeSrc": "14583:220:9",
													"nodeType": "YulBlock",
													"src": "14583:220:9",
													"statements": [
														{
															"nativeSrc": "14593:74:9",
															"nodeType": "YulAssignment",
															"src": "14593:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14659:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14659:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14664:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14664:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14600:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14600:58:9"
																},
																"nativeSrc": "14600:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14600:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14593:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14593:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14765:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14765:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "14676:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14676:88:9"
																},
																"nativeSrc": "14676:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14676:93:9"
															},
															"nativeSrc": "14676:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14676:93:9"
														},
														{
															"nativeSrc": "14778:19:9",
															"nodeType": "YulAssignment",
															"src": "14778:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14789:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14789:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14794:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14794:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14785:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14785:3:9"
																},
																"nativeSrc": "14785:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14785:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14778:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14778:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14437:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14571:3:9",
														"nodeType": "YulTypedName",
														"src": "14571:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14579:3:9",
														"nodeType": "YulTypedName",
														"src": "14579:3:9",
														"type": ""
													}
												],
												"src": "14437:366:9"
											},
											{
												"body": {
													"nativeSrc": "14980:248:9",
													"nodeType": "YulBlock",
													"src": "14980:248:9",
													"statements": [
														{
															"nativeSrc": "14990:26:9",
															"nodeType": "YulAssignment",
															"src": "14990:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15002:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15002:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15013:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15013:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14998:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14998:3:9"
																},
																"nativeSrc": "14998:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14998:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14990:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14990:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15037:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15037:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15048:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15048:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15033:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15033:3:9"
																		},
																		"nativeSrc": "15033:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15033:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15056:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15056:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15062:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15062:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15052:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15052:3:9"
																		},
																		"nativeSrc": "15052:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15052:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15026:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15026:6:9"
																},
																"nativeSrc": "15026:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15026:47:9"
															},
															"nativeSrc": "15026:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15026:47:9"
														},
														{
															"nativeSrc": "15082:139:9",
															"nodeType": "YulAssignment",
															"src": "15082:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15216:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15216:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15090:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15090:124:9"
																},
																"nativeSrc": "15090:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15090:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15082:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15082:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14809:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14960:9:9",
														"nodeType": "YulTypedName",
														"src": "14960:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14975:4:9",
														"nodeType": "YulTypedName",
														"src": "14975:4:9",
														"type": ""
													}
												],
												"src": "14809:419:9"
											},
											{
												"body": {
													"nativeSrc": "15340:60:9",
													"nodeType": "YulBlock",
													"src": "15340:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15362:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15362:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15370:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15370:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15358:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15358:3:9"
																		},
																		"nativeSrc": "15358:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15358:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "15374:18:9",
																		"nodeType": "YulLiteral",
																		"src": "15374:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15351:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15351:6:9"
																},
																"nativeSrc": "15351:42:9",
																"nodeType": "YulFunctionCall",
																"src": "15351:42:9"
															},
															"nativeSrc": "15351:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "15351:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "15234:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15332:6:9",
														"nodeType": "YulTypedName",
														"src": "15332:6:9",
														"type": ""
													}
												],
												"src": "15234:166:9"
											},
											{
												"body": {
													"nativeSrc": "15552:220:9",
													"nodeType": "YulBlock",
													"src": "15552:220:9",
													"statements": [
														{
															"nativeSrc": "15562:74:9",
															"nodeType": "YulAssignment",
															"src": "15562:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15628:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15628:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15633:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15633:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15569:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15569:58:9"
																},
																"nativeSrc": "15569:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15569:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15562:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15562:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15734:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15734:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "15645:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15645:88:9"
																},
																"nativeSrc": "15645:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15645:93:9"
															},
															"nativeSrc": "15645:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15645:93:9"
														},
														{
															"nativeSrc": "15747:19:9",
															"nodeType": "YulAssignment",
															"src": "15747:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15758:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15758:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15763:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15763:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15754:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15754:3:9"
																},
																"nativeSrc": "15754:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15754:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15747:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15747:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15406:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15540:3:9",
														"nodeType": "YulTypedName",
														"src": "15540:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15548:3:9",
														"nodeType": "YulTypedName",
														"src": "15548:3:9",
														"type": ""
													}
												],
												"src": "15406:366:9"
											},
											{
												"body": {
													"nativeSrc": "15949:248:9",
													"nodeType": "YulBlock",
													"src": "15949:248:9",
													"statements": [
														{
															"nativeSrc": "15959:26:9",
															"nodeType": "YulAssignment",
															"src": "15959:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15971:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15971:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15982:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15982:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15967:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15967:3:9"
																},
																"nativeSrc": "15967:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15967:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15959:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15959:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16006:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16006:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16017:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16017:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16002:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16002:3:9"
																		},
																		"nativeSrc": "16002:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16002:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16025:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16025:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16031:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16031:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16021:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16021:3:9"
																		},
																		"nativeSrc": "16021:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16021:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15995:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15995:6:9"
																},
																"nativeSrc": "15995:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15995:47:9"
															},
															"nativeSrc": "15995:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15995:47:9"
														},
														{
															"nativeSrc": "16051:139:9",
															"nodeType": "YulAssignment",
															"src": "16051:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16185:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16185:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16059:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16059:124:9"
																},
																"nativeSrc": "16059:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16059:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16051:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15778:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15929:9:9",
														"nodeType": "YulTypedName",
														"src": "15929:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15944:4:9",
														"nodeType": "YulTypedName",
														"src": "15944:4:9",
														"type": ""
													}
												],
												"src": "15778:419:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is not frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is already frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer while paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Lockable: transfer amount e\")\n\n        mstore(add(memPtr, 32), \"xceeds unlocked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0x929EC537 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x929EC537 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xD1C46916 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x405 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8D1FDF2F EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31D JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x38B82092 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x38B82092 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x45C8B1A6 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x5E1372F4 EQ PUSH2 0x285 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x157 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x7CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FF PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x325 PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x430 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45C SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4BB PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP PUSH2 0x4C8 DUP2 DUP6 DUP6 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4E6 PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP PUSH2 0x4F3 DUP6 DUP3 DUP6 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x4FE DUP6 DUP6 DUP6 PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51A PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x525 CALLER DUP5 DUP5 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x53B DUP4 DUP4 DUP4 TIMESTAMP PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x548 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x550 PUSH2 0x119D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x563 PUSH2 0x55D PUSH2 0xF7B JUMP JUMPDEST DUP3 PUSH2 0x11FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x56E PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF915CD9FE234DE6E8D3AFE7BF2388D35B2B6D48E8C629A24602019BDE79C213A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6AE PUSH2 0x1116 JUMP JUMPDEST DUP2 PUSH2 0x6B8 DUP5 PUSH2 0x78A JUMP JUMPDEST LT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x7E0 PUSH0 PUSH2 0x127D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F4 DUP3 PUSH2 0x7EE PUSH2 0xF7B JUMP JUMPDEST DUP4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x7FE DUP3 DUP3 PUSH2 0x11FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x80A PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x812 PUSH2 0x1342 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x81C PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89D SWAP1 PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F2A367E694E71282F29AB5EAA04C4C0BE45AC5BF2CA74FB67068B98BDC2887D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA98 JUMPI TIMESTAMP PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA09 JUMPI PUSH2 0xA08 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA6E JUMPI PUSH2 0xA6D PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD SLOAD DUP3 PUSH2 0xA88 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x971 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAB1 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADD SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB3C PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP PUSH2 0xB49 DUP2 DUP6 DUP6 PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xE19 JUMPI TIMESTAMP PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0xE06 JUMPI PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD SLOAD DUP3 PUSH2 0xC6D SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST SWAP2 POP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x2040 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD0A JUMPI PUSH2 0xD09 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD65 JUMPI PUSH2 0xD64 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 DUP3 ADD SLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xDD3 JUMPI PUSH2 0xDD2 PUSH2 0x2073 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP SWAP1 SSTORE DUP1 DUP1 PUSH2 0xE02 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE11 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB57 JUMP JUMPDEST POP PUSH0 DUP2 GT ISZERO PUSH2 0xE71 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x622CA42598AB680A7DEF4A7346E1963A82207CF42A5DDB8056AD62CFBDA19B88 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE68 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEFF PUSH2 0x1116 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF6F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF78 DUP2 PUSH2 0x127D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF8F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF9F DUP5 DUP5 PUSH2 0xE75 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1020 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1011 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1008 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x13A4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1096 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108D SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1106 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1111 DUP4 DUP4 DUP4 PUSH2 0x1573 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x111E PUSH2 0xF7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x113C PUSH2 0x941 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x119B JUMPI PUSH2 0x115F PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1192 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11A5 PUSH2 0x16BF JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x11E7 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F4 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1265 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1279 DUP3 PUSH0 DUP4 PUSH2 0x1573 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x134A PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x138D PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139A SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1414 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140B SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1484 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147B SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x156D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1564 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15DB JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16AF JUMPI PUSH2 0x15E8 PUSH2 0x691 JUMP JUMPDEST ISZERO DUP1 PUSH2 0x1626 JUMPI POP PUSH2 0x15F7 PUSH2 0x941 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1665 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165C SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x166F DUP4 DUP3 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x16AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A5 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x16BA DUP4 DUP4 DUP4 PUSH2 0x18A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16C7 PUSH2 0x691 JUMP JUMPDEST PUSH2 0x1706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FD SWAP1 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1710 PUSH2 0x691 JUMP JUMPDEST ISZERO PUSH2 0x1750 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1747 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1880 JUMPI TIMESTAMP PUSH1 0x7 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x17F1 JUMPI PUSH2 0x17F0 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1873 JUMPI PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1856 JUMPI PUSH2 0x1855 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD SLOAD DUP3 PUSH2 0x1870 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1759 JUMP JUMPDEST POP DUP3 DUP2 PUSH2 0x188C DUP7 PUSH2 0x78A JUMP JUMPDEST PUSH2 0x1896 SWAP2 SWAP1 PUSH2 0x2040 JUMP JUMPDEST LT ISZERO SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18F1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18E5 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x19BF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x197A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1971 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A06 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A50 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AAD SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AF1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AD6 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B16 DUP3 PUSH2 0x1ABA JUMP JUMPDEST PUSH2 0x1B20 DUP2 DUP6 PUSH2 0x1AC4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B30 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x1B39 DUP2 PUSH2 0x1AFC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B5C DUP2 DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B91 DUP3 PUSH2 0x1B68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA1 DUP2 PUSH2 0x1B87 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BBC DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD4 DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BEF DUP2 PUSH2 0x1BCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C0B JUMPI PUSH2 0x1C0A PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C18 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C29 DUP6 DUP3 DUP7 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C47 DUP2 PUSH2 0x1C33 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C60 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C6F DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CA5 JUMPI PUSH2 0x1CA4 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB2 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CC3 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CD4 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF3 DUP2 PUSH2 0x1CDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0C PUSH0 DUP4 ADD DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D29 JUMPI PUSH2 0x1D28 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D36 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D47 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D58 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D77 JUMPI PUSH2 0x1D76 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D84 DUP5 DUP3 DUP6 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA2 JUMPI PUSH2 0x1DA1 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DAF DUP5 DUP3 DUP6 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DC1 DUP2 PUSH2 0x1B87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DDA PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF6 JUMPI PUSH2 0x1DF5 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E03 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E14 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E62 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E75 JUMPI PUSH2 0x1E74 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EB2 DUP3 PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBD DUP4 PUSH2 0x1BC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ED5 JUMPI PUSH2 0x1ED4 PUSH2 0x1E7B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F742066726F7A656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0F PUSH1 0x15 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1A DUP3 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F3C DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F77 PUSH1 0x14 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F82 DUP3 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA4 DUP2 PUSH2 0x1F6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C72656164792066726F7A656E00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDF PUSH1 0x19 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEA DUP3 PUSH2 0x1FAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x200C DUP2 PUSH2 0x1FD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x204A DUP3 PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2055 DUP4 PUSH2 0x1BC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x206D JUMPI PUSH2 0x206C PUSH2 0x1E7B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20AA DUP3 PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x20BC JUMPI PUSH2 0x20BB PUSH2 0x1E7B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20D1 DUP3 PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2103 JUMPI PUSH2 0x2102 PUSH2 0x1E7B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2121 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DB8 JUMP JUMPDEST PUSH2 0x212E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x213B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C66 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572207768696C65207061757365640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2177 PUSH1 0x1B DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2182 DUP3 PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21A4 DUP2 PUSH2 0x216B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332304C6F636B61626C653A207472616E7366657220616D6F756E742065 PUSH0 DUP3 ADD MSTORE PUSH32 0x78636565647320756E6C6F636B65642062616C616E6365000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2205 PUSH1 0x37 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2210 DUP3 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2232 DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x226D PUSH1 0x14 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2278 DUP3 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x229A DUP2 PUSH2 0x2261 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22D5 PUSH1 0x10 DUP4 PUSH2 0x1AC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E0 DUP3 PUSH2 0x22A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2302 DUP2 PUSH2 0x22C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED GASPRICE 0xAB 0xEB SWAP11 OR 0xAF SWAP11 SWAP16 JUMPI MUL MSTORE8 0xC JUMP EXTCODESIZE PUSH13 0xB58638C2894B51B5F741A35704 0x29 PUSH8 0x9A64736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "306:3866:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2882:218:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3171:63;;;:::i;:::-;;618:87:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1877:206:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2089:226:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3106:59:8;;;:::i;:::-;;1665:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3814:356:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2321:555:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:3;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2882:218:8:-;1531:13:0;:11;:13::i;:::-;2990:40:8::1;3000:10;3012:9;3023:6;2990:9;:40::i;:::-;3040:53;3047:9;3058:6;3084:8;3066:15;:26;;;;:::i;:::-;3040:6;:53::i;:::-;2882:218:::0;;;:::o;3171:63::-;1531:13:0;:11;:13::i;:::-;3217:10:8::1;:8;:10::i;:::-;3171:63::o:0;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1877:206:8:-;1531:13:0;:11;:13::i;:::-;1947:14:8::1;:23;1962:7;1947:23;;;;;;;;;;;;;;;;;;;;;;;;;1939:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2032:5;2006:14;:23;2021:7;2006:23;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2068:7;2052:24;;;;;;;;;;;;1877:206:::0;:::o;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2089:226:8:-;1531:13:0;:11;:13::i;:::-;2216:6:8::1;2194:18;2204:7;2194:9;:18::i;:::-;:28;;2186:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2257:6;:15;2264:7;2257:15;;;;;;;;;;;;;;;2278:29;;;;;;;;2287:6;2278:29;;;;2295:11;2278:29;;::::0;2257:51:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2089:226:::0;;;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;3106:59:8:-;1531:13:0;:11;:13::i;:::-;3150:8:8::1;:6;:8::i;:::-;3106:59::o:0;1665:206::-;1531:13:0;:11;:13::i;:::-;1734:14:8::1;:23;1749:7;1734:23;;;;;;;;;;;;;;;;;;;;;;;;;1733:24;1725:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1823:4;1797:14;:23;1812:7;1797:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1856:7;1842:22;;;;;;;;;;;;1665:206:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3814:356:8:-;3877:7;3896:20;3919:1;3896:24;;3935:9;3930:205;3954:6;:15;3961:7;3954:15;;;;;;;;;;;;;;;:22;;;;3950:1;:26;3930:205;;;4034:15;4001:6;:15;4008:7;4001:15;;;;;;;;;;;;;;;4017:1;4001:18;;;;;;;;:::i;:::-;;;;;;;;;;;;:30;;;:48;3997:128;;;4085:6;:15;4092:7;4085:15;;;;;;;;;;;;;;;4101:1;4085:18;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;4069:41;;;;;:::i;:::-;;;3997:128;3978:3;;;;;;;3930:205;;;;4151:12;4144:19;;;3814:356;;;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;2321:555:8:-;2376:24;2419:9;2414:352;2438:6;:15;2445:7;2438:15;;;;;;;;;;;;;;;:22;;;;2434:1;:26;2414:352;;;2519:15;2485:6;:15;2492:7;2485:15;;;;;;;;;;;;;;;2501:1;2485:18;;;;;;;;:::i;:::-;;;;;;;;;;;;:30;;;:49;2481:275;;2574:6;:15;2581:7;2574:15;;;;;;;;;;;;;;;2590:1;2574:18;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;2554:45;;;;;:::i;:::-;;;2638:6;:15;2645:7;2638:15;;;;;;;;;;;;;;;2679:1;2654:6;:15;2661:7;2654:15;;;;;;;;;;;;;;;:22;;;;:26;;;;:::i;:::-;2638:43;;;;;;;;:::i;:::-;;;;;;;;;;;;2617:6;:15;2624:7;2617:15;;;;;;;;;;;;;;;2633:1;2617:18;;;;;;;;:::i;:::-;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;;2699:6;:15;2706:7;2699:15;;;;;;;;;;;;;;;:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2738:3;;;;;:::i;:::-;;;;2481:275;2462:3;;;;;:::i;:::-;;;;2414:352;;;;2798:1;2779:16;:20;2775:95;;;2833:7;2820:39;;;2842:16;2820:39;;;;;;:::i;:::-;;;;;;;;2775:95;2366:510;2321:555;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8998:128:3:-;9082:37;9091:5;9098:7;9107:5;9114:4;9082:8;:37::i;:::-;8998:128;;;:::o;10672:477::-;10771:24;10798:25;10808:5;10815:7;10798:9;:25::i;:::-;10771:52;;10857:17;10837:16;:37;10833:310;;10913:5;10894:16;:24;10890:130;;;10972:7;10981:16;10999:5;10945:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10890:130;11061:57;11070:5;11077:7;11105:5;11086:16;:24;11112:5;11061:8;:57::i;:::-;10833:310;10761:388;10672:477;;;:::o;5656:309::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5934:24;5942:4;5948:2;5952:5;5934:7;:24::i;:::-;5656:309;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;8256:206:3:-;8345:1;8326:21;;:7;:21;;;8322:89;;8397:1;8370:30;;;;;;;;;;;:::i;:::-;;;;;;;;8322:89;8420:35;8428:7;8445:1;8449:5;8420:7;:35::i;:::-;8256:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;9958:432:3:-;10087:1;10070:19;;:5;:19;;;10066:89;;10141:1;10112:32;;;;;;;;;;;:::i;:::-;;;;;;;;10066:89;10187:1;10168:21;;:7;:21;;;10164:90;;10240:1;10212:31;;;;;;;;;;;:::i;:::-;;;;;;;;10164:90;10293:5;10263:11;:18;10275:5;10263:18;;;;;;;;;;;;;;;:27;10282:7;10263:27;;;;;;;;;;;;;;;:35;;;;10312:9;10308:76;;;10358:7;10342:31;;10351:5;10342:31;;;10367:5;10342:31;;;;;;:::i;:::-;;;;;;;;10308:76;9958:432;;;;:::o;1126:533:8:-;1323:1;1307:18;;:4;:18;;;;:38;;;;;1343:1;1329:16;;:2;:16;;;;1307:38;1304:299;;;1370:8;:6;:8::i;:::-;1369:9;:34;;;;1396:7;:5;:7::i;:::-;1382:21;;:10;:21;;;1369:34;1361:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1508:24;1519:4;1525:6;1508:10;:24::i;:::-;1500:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1304:299;1621:31;1635:4;1641:2;1645:6;1621:13;:31::i;:::-;1126:533;;;:::o;1945:106:2:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;1767:::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;3240:568:8:-;3312:4;3328:20;3351:1;3328:24;;3456:9;3451:196;3475:6;:12;3482:4;3475:12;;;;;;;;;;;;;;;:19;;;;3471:1;:23;3451:196;;;3549:15;3519:6;:12;3526:4;3519:12;;;;;;;;;;;;;;;3532:1;3519:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;:45;3515:122;;;3600:6;:12;3607:4;3600:12;;;;;;;;;;;;;;;3613:1;3600:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;;3584:38;;;;;:::i;:::-;;;3515:122;3496:3;;;;;;;3451:196;;;;3795:6;3779:12;3761:15;3771:4;3761:9;:15::i;:::-;:30;;;;:::i;:::-;:40;;3754:47;;;3240:568;;;;:::o;6280:1107:3:-;6385:1;6369:18;;:4;:18;;;6365:540;;6521:5;6505:12;;:21;;;;;;;:::i;:::-;;;;;;;;6365:540;;;6557:19;6579:9;:15;6589:4;6579:15;;;;;;;;;;;;;;;;6557:37;;6626:5;6612:11;:19;6608:115;;;6683:4;6689:11;6702:5;6658:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6608:115;6875:5;6861:11;:19;6843:9;:15;6853:4;6843:15;;;;;;;;;;;;;;;:37;;;;6543:362;6365:540;6933:1;6919:16;;:2;:16;;;6915:425;;7098:5;7082:12;;:21;;;;;;;;;;;6915:425;;;7310:5;7293:9;:13;7303:2;7293:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6915:425;7370:2;7355:25;;7364:4;7355:25;;;7374:5;7355:25;;;;;;:::i;:::-;;;;;;;;6280:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:619::-;4930:6;4938;4946;4995:2;4983:9;4974:7;4970:23;4966:32;4963:119;;;5001:79;;:::i;:::-;4963:119;5121:1;5146:53;5191:7;5182:6;5171:9;5167:22;5146:53;:::i;:::-;5136:63;;5092:117;5248:2;5274:53;5319:7;5310:6;5299:9;5295:22;5274:53;:::i;:::-;5264:63;;5219:118;5376:2;5402:53;5447:7;5438:6;5427:9;5423:22;5402:53;:::i;:::-;5392:63;;5347:118;4853:619;;;;;:::o;5478:329::-;5537:6;5586:2;5574:9;5565:7;5561:23;5557:32;5554:119;;;5592:79;;:::i;:::-;5554:119;5712:1;5737:53;5782:7;5773:6;5762:9;5758:22;5737:53;:::i;:::-;5727:63;;5683:117;5478:329;;;;:::o;5813:::-;5872:6;5921:2;5909:9;5900:7;5896:23;5892:32;5889:119;;;5927:79;;:::i;:::-;5889:119;6047:1;6072:53;6117:7;6108:6;6097:9;6093:22;6072:53;:::i;:::-;6062:63;;6018:117;5813:329;;;;:::o;6148:118::-;6235:24;6253:5;6235:24;:::i;:::-;6230:3;6223:37;6148:118;;:::o;6272:222::-;6365:4;6403:2;6392:9;6388:18;6380:26;;6416:71;6484:1;6473:9;6469:17;6460:6;6416:71;:::i;:::-;6272:222;;;;:::o;6500:474::-;6568:6;6576;6625:2;6613:9;6604:7;6600:23;6596:32;6593:119;;;6631:79;;:::i;:::-;6593:119;6751:1;6776:53;6821:7;6812:6;6801:9;6797:22;6776:53;:::i;:::-;6766:63;;6722:117;6878:2;6904:53;6949:7;6940:6;6929:9;6925:22;6904:53;:::i;:::-;6894:63;;6849:118;6500:474;;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:320;7210:6;7247:1;7241:4;7237:12;7227:22;;7294:1;7288:4;7284:12;7315:18;7305:81;;7371:4;7363:6;7359:17;7349:27;;7305:81;7433:2;7425:6;7422:14;7402:18;7399:38;7396:84;;7452:18;;:::i;:::-;7396:84;7217:269;7166:320;;;:::o;7492:180::-;7540:77;7537:1;7530:88;7637:4;7634:1;7627:15;7661:4;7658:1;7651:15;7678:191;7718:3;7737:20;7755:1;7737:20;:::i;:::-;7732:25;;7771:20;7789:1;7771:20;:::i;:::-;7766:25;;7814:1;7811;7807:9;7800:16;;7835:3;7832:1;7829:10;7826:36;;;7842:18;;:::i;:::-;7826:36;7678:191;;;;:::o;7875:171::-;8015:23;8011:1;8003:6;7999:14;7992:47;7875:171;:::o;8052:366::-;8194:3;8215:67;8279:2;8274:3;8215:67;:::i;:::-;8208:74;;8291:93;8380:3;8291:93;:::i;:::-;8409:2;8404:3;8400:12;8393:19;;8052:366;;;:::o;8424:419::-;8590:4;8628:2;8617:9;8613:18;8605:26;;8677:9;8671:4;8667:20;8663:1;8652:9;8648:17;8641:47;8705:131;8831:4;8705:131;:::i;:::-;8697:139;;8424:419;;;:::o;8849:170::-;8989:22;8985:1;8977:6;8973:14;8966:46;8849:170;:::o;9025:366::-;9167:3;9188:67;9252:2;9247:3;9188:67;:::i;:::-;9181:74;;9264:93;9353:3;9264:93;:::i;:::-;9382:2;9377:3;9373:12;9366:19;;9025:366;;;:::o;9397:419::-;9563:4;9601:2;9590:9;9586:18;9578:26;;9650:9;9644:4;9640:20;9636:1;9625:9;9621:17;9614:47;9678:131;9804:4;9678:131;:::i;:::-;9670:139;;9397:419;;;:::o;9822:175::-;9962:27;9958:1;9950:6;9946:14;9939:51;9822:175;:::o;10003:366::-;10145:3;10166:67;10230:2;10225:3;10166:67;:::i;:::-;10159:74;;10242:93;10331:3;10242:93;:::i;:::-;10360:2;10355:3;10351:12;10344:19;;10003:366;;;:::o;10375:419::-;10541:4;10579:2;10568:9;10564:18;10556:26;;10628:9;10622:4;10618:20;10614:1;10603:9;10599:17;10592:47;10656:131;10782:4;10656:131;:::i;:::-;10648:139;;10375:419;;;:::o;10800:180::-;10848:77;10845:1;10838:88;10945:4;10942:1;10935:15;10969:4;10966:1;10959:15;10986:194;11026:4;11046:20;11064:1;11046:20;:::i;:::-;11041:25;;11080:20;11098:1;11080:20;:::i;:::-;11075:25;;11124:1;11121;11117:9;11109:17;;11148:1;11142:4;11139:11;11136:37;;;11153:18;;:::i;:::-;11136:37;10986:194;;;;:::o;11186:180::-;11234:77;11231:1;11224:88;11331:4;11328:1;11321:15;11355:4;11352:1;11345:15;11372:171;11411:3;11434:24;11452:5;11434:24;:::i;:::-;11425:33;;11480:4;11473:5;11470:15;11467:41;;11488:18;;:::i;:::-;11467:41;11535:1;11528:5;11524:13;11517:20;;11372:171;;;:::o;11549:233::-;11588:3;11611:24;11629:5;11611:24;:::i;:::-;11602:33;;11657:66;11650:5;11647:77;11644:103;;11727:18;;:::i;:::-;11644:103;11774:1;11767:5;11763:13;11756:20;;11549:233;;;:::o;11788:442::-;11937:4;11975:2;11964:9;11960:18;11952:26;;11988:71;12056:1;12045:9;12041:17;12032:6;11988:71;:::i;:::-;12069:72;12137:2;12126:9;12122:18;12113:6;12069:72;:::i;:::-;12151;12219:2;12208:9;12204:18;12195:6;12151:72;:::i;:::-;11788:442;;;;;;:::o;12236:177::-;12376:29;12372:1;12364:6;12360:14;12353:53;12236:177;:::o;12419:366::-;12561:3;12582:67;12646:2;12641:3;12582:67;:::i;:::-;12575:74;;12658:93;12747:3;12658:93;:::i;:::-;12776:2;12771:3;12767:12;12760:19;;12419:366;;;:::o;12791:419::-;12957:4;12995:2;12984:9;12980:18;12972:26;;13044:9;13038:4;13034:20;13030:1;13019:9;13015:17;13008:47;13072:131;13198:4;13072:131;:::i;:::-;13064:139;;12791:419;;;:::o;13216:242::-;13356:34;13352:1;13344:6;13340:14;13333:58;13425:25;13420:2;13412:6;13408:15;13401:50;13216:242;:::o;13464:366::-;13606:3;13627:67;13691:2;13686:3;13627:67;:::i;:::-;13620:74;;13703:93;13792:3;13703:93;:::i;:::-;13821:2;13816:3;13812:12;13805:19;;13464:366;;;:::o;13836:419::-;14002:4;14040:2;14029:9;14025:18;14017:26;;14089:9;14083:4;14079:20;14075:1;14064:9;14060:17;14053:47;14117:131;14243:4;14117:131;:::i;:::-;14109:139;;13836:419;;;:::o;14261:170::-;14401:22;14397:1;14389:6;14385:14;14378:46;14261:170;:::o;14437:366::-;14579:3;14600:67;14664:2;14659:3;14600:67;:::i;:::-;14593:74;;14676:93;14765:3;14676:93;:::i;:::-;14794:2;14789:3;14785:12;14778:19;;14437:366;;;:::o;14809:419::-;14975:4;15013:2;15002:9;14998:18;14990:26;;15062:9;15056:4;15052:20;15048:1;15037:9;15033:17;15026:47;15090:131;15216:4;15090:131;:::i;:::-;15082:139;;14809:419;;;:::o;15234:166::-;15374:18;15370:1;15362:6;15358:14;15351:42;15234:166;:::o;15406:366::-;15548:3;15569:67;15633:2;15628:3;15569:67;:::i;:::-;15562:74;;15645:93;15734:3;15645:93;:::i;:::-;15763:2;15758:3;15754:12;15747:19;;15406:366;;;:::o;15778:419::-;15944:4;15982:2;15971:9;15967:18;15959:26;;16031:9;16025:4;16021:20;16017:1;16006:9;16002:17;15995:47;16059:131;16185:4;16059:131;:::i;:::-;16051:139;;15778:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1804600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "450",
								"freeze(address)": "infinite",
								"getLockedAmount(address)": "infinite",
								"lockup(address,uint256,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2699",
								"pause()": "infinite",
								"paused()": "2584",
								"releaseLock(address)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferWithLockUp(address,uint256,uint256)": "infinite",
								"unfreeze(address)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_checkLock(address,uint256)": "infinite",
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 4172,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 964,
									"end": 1120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 373,
									"end": 383,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1033,
									"end": 1040,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1052,
									"end": 1113,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1058,
									"end": 1068,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 508,
									"end": 510,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1093,
									"end": 1111,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1093,
									"end": 1111,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1091,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1089,
									"end": 1111,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1089,
									"end": 1111,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1111,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1111,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1089,
									"end": 1111,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1111,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1089,
									"end": 1111,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 559,
									"end": 573,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "2540BE400"
								},
								{
									"begin": 1070,
									"end": 1112,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1070,
									"end": 1112,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1070,
									"end": 1112,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1070,
									"end": 1112,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1070,
									"end": 1112,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1070,
									"end": 1112,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1070,
									"end": 1112,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1052,
									"end": 1057,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1052,
									"end": 1057,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1052,
									"end": 1057,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1052,
									"end": 1113,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1052,
									"end": 1113,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1052,
									"end": 1113,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1052,
									"end": 1113,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1052,
									"end": 1113,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1120,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7730,
									"end": 7938,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7730,
									"end": 7938,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7819,
									"end": 7820,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7800,
									"end": 7821,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7800,
									"end": 7821,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7800,
									"end": 7807,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7800,
									"end": 7821,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7800,
									"end": 7821,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7800,
									"end": 7821,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7796,
									"end": 7887,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7796,
									"end": 7887,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7873,
									"end": 7874,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 7844,
									"end": 7876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7844,
									"end": 7876,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7796,
									"end": 7887,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7796,
									"end": 7887,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7896,
									"end": 7931,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7912,
									"end": 7913,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7916,
									"end": 7923,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7925,
									"end": 7930,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7896,
									"end": 7903,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 7896,
									"end": 7903,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7896,
									"end": 7903,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7896,
									"end": 7931,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7896,
									"end": 7931,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7896,
									"end": 7931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7896,
									"end": 7931,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7896,
									"end": 7931,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7730,
									"end": 7938,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7730,
									"end": 7938,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7730,
									"end": 7938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1126,
									"end": 1659,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1126,
									"end": 1659,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1323,
									"end": 1324,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1307,
									"end": 1325,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1307,
									"end": 1325,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1311,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1325,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1307,
									"end": 1325,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1325,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1325,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1345,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1345,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1345,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 1307,
									"end": 1345,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1343,
									"end": 1344,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1345,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 1307,
									"end": 1345,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1603,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1304,
									"end": 1603,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1370,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1370,
									"end": 1378,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1378,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1370,
									"end": 1378,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1370,
									"end": 1378,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1370,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1378,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1403,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1369,
									"end": 1403,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1403,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1396,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1396,
									"end": 1401,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1396,
									"end": 1401,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1396,
									"end": 1401,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1396,
									"end": 1403,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1396,
									"end": 1403,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1396,
									"end": 1403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1396,
									"end": 1403,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1396,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1382,
									"end": 1403,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1382,
									"end": 1403,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1382,
									"end": 1392,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1382,
									"end": 1403,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1382,
									"end": 1403,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1382,
									"end": 1403,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1403,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1369,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1361,
									"end": 1435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1361,
									"end": 1435,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1532,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1519,
									"end": 1523,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1531,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1508,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1508,
									"end": 1518,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1532,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1508,
									"end": 1532,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1532,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1508,
									"end": 1532,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1500,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1500,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1603,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1304,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1635,
									"end": 1639,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1641,
									"end": 1643,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1634,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1621,
									"end": 1634,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1621,
									"end": 1634,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1652,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1621,
									"end": 1652,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1652,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1621,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1126,
									"end": 1659,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1126,
									"end": 1659,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1126,
									"end": 1659,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1126,
									"end": 1659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1615,
									"end": 1699,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1615,
									"end": 1699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1678,
									"end": 1692,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1678,
									"end": 1692,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1615,
									"end": 1699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1615,
									"end": 1699,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3240,
									"end": 3808,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 3240,
									"end": 3808,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3316,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3348,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3351,
									"end": 3352,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3352,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3328,
									"end": 3352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3456,
									"end": 3465,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3451,
									"end": 3647,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3451,
									"end": 3647,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3481,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3482,
									"end": 3486,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3475,
									"end": 3487,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3494,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3494,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3494,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3494,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3471,
									"end": 3472,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3471,
									"end": 3494,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3647,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3451,
									"end": 3647,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3549,
									"end": 3564,
									"name": "TIMESTAMP",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3525,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3526,
									"end": 3530,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3531,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3532,
									"end": 3533,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3519,
									"end": 3534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3546,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3519,
									"end": 3546,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3546,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3564,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3515,
									"end": 3637,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3515,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 3515,
									"end": 3637,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3606,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3607,
									"end": 3611,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3600,
									"end": 3612,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3614,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3600,
									"end": 3615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3615,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3622,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3600,
									"end": 3622,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3622,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3622,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3584,
									"end": 3622,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3622,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3584,
									"end": 3622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3622,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3584,
									"end": 3622,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3622,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3622,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3515,
									"end": 3637,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 3515,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3496,
									"end": 3499,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3496,
									"end": 3499,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3496,
									"end": 3499,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3496,
									"end": 3499,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3496,
									"end": 3499,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3496,
									"end": 3499,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3496,
									"end": 3499,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3451,
									"end": 3647,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3647,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3451,
									"end": 3647,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3647,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3795,
									"end": 3801,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3779,
									"end": 3791,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3776,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3771,
									"end": 3775,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3770,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3761,
									"end": 3770,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3761,
									"end": 3770,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3776,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3761,
									"end": 3776,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3776,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3761,
									"end": 3776,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3791,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3761,
									"end": 3791,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3791,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 3761,
									"end": 3791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3791,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3761,
									"end": 3791,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3801,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3801,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3754,
									"end": 3801,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3754,
									"end": 3801,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3754,
									"end": 3801,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3808,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3808,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3808,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3808,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3808,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6280,
									"end": 7387,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 6280,
									"end": 7387,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6385,
									"end": 6386,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6369,
									"end": 6373,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6365,
									"end": 6905,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 6365,
									"end": 6905,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6521,
									"end": 6526,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6517,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6505,
									"end": 6517,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 6505,
									"end": 6526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6505,
									"end": 6526,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6365,
									"end": 6905,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 6365,
									"end": 6905,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6365,
									"end": 6905,
									"name": "tag",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 6365,
									"end": 6905,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6557,
									"end": 6576,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6579,
									"end": 6588,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6589,
									"end": 6593,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6557,
									"end": 6594,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6557,
									"end": 6594,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6626,
									"end": 6631,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6612,
									"end": 6623,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6612,
									"end": 6631,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6608,
									"end": 6723,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6608,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 6608,
									"end": 6723,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6683,
									"end": 6687,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6689,
									"end": 6700,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6702,
									"end": 6707,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 6658,
									"end": 6708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "tag",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6658,
									"end": 6708,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6608,
									"end": 6723,
									"name": "tag",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 6608,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6875,
									"end": 6880,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6861,
									"end": 6872,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6861,
									"end": 6880,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6852,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6853,
									"end": 6857,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6843,
									"end": 6858,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6880,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6880,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6880,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6843,
									"end": 6880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6543,
									"end": 6905,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6365,
									"end": 6905,
									"name": "tag",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 6365,
									"end": 6905,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6933,
									"end": 6934,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6919,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6919,
									"end": 6935,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6919,
									"end": 6921,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6919,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6919,
									"end": 6935,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6919,
									"end": 6935,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6915,
									"end": 7340,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 6915,
									"end": 7340,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7094,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7082,
									"end": 7094,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6915,
									"end": 7340,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "79"
								},
								{
									"begin": 6915,
									"end": 7340,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6915,
									"end": 7340,
									"name": "tag",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 6915,
									"end": 7340,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7310,
									"end": 7315,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7302,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7303,
									"end": 7305,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7306,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7293,
									"end": 7315,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6915,
									"end": 7340,
									"name": "tag",
									"source": 3,
									"value": "79"
								},
								{
									"begin": 6915,
									"end": 7340,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7370,
									"end": 7372,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7364,
									"end": 7368,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7374,
									"end": 7379,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 7355,
									"end": 7380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "tag",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7380,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6280,
									"end": 7387,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6280,
									"end": 7387,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6280,
									"end": 7387,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6280,
									"end": 7387,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3299,
									"end": 3415,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 3299,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3364,
									"end": 3371,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3390,
									"end": 3399,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3400,
									"end": 3407,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3383,
									"end": 3408,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3383,
									"end": 3408,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3299,
									"end": 3415,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3299,
									"end": 3415,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3299,
									"end": 3415,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3299,
									"end": 3415,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "162"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 9,
									"value": "162"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "206"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 9,
									"value": "206"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "213"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 9,
									"value": "213"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "215"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 9,
									"value": "215"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "217"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 9,
									"value": "217"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "219"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 9,
									"value": "219"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "221"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "222"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 9,
									"value": "222"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "223"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 9,
									"value": "223"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "220"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 9,
									"value": "221"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "224"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 9,
									"value": "224"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 9,
									"value": "225"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "227"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "225"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 9,
									"value": "227"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "228"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "229"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 9,
									"value": "229"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 9,
									"value": "228"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 9,
									"value": "220"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8577,
									"end": 8703,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 8577,
									"end": 8703,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8614,
									"end": 8621,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8654,
									"end": 8696,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8647,
									"end": 8652,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8643,
									"end": 8697,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8632,
									"end": 8697,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8632,
									"end": 8697,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8577,
									"end": 8703,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8577,
									"end": 8703,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8577,
									"end": 8703,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8577,
									"end": 8703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 8805,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 8709,
									"end": 8805,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8746,
									"end": 8753,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8775,
									"end": 8799,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "232"
								},
								{
									"begin": 8793,
									"end": 8798,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8775,
									"end": 8799,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 8775,
									"end": 8799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8775,
									"end": 8799,
									"name": "tag",
									"source": 9,
									"value": "232"
								},
								{
									"begin": 8775,
									"end": 8799,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8764,
									"end": 8799,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8764,
									"end": 8799,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 8805,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 8805,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 8805,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 8805,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8811,
									"end": 8929,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 8811,
									"end": 8929,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8898,
									"end": 8922,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "234"
								},
								{
									"begin": 8916,
									"end": 8921,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8898,
									"end": 8922,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 8898,
									"end": 8922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8898,
									"end": 8922,
									"name": "tag",
									"source": 9,
									"value": "234"
								},
								{
									"begin": 8898,
									"end": 8922,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8893,
									"end": 8896,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8886,
									"end": 8923,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8811,
									"end": 8929,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8811,
									"end": 8929,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8811,
									"end": 8929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9028,
									"end": 9032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9066,
									"end": 9068,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9055,
									"end": 9064,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9051,
									"end": 9069,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9043,
									"end": 9069,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9043,
									"end": 9069,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9079,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "236"
								},
								{
									"begin": 9147,
									"end": 9148,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9136,
									"end": 9145,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9132,
									"end": 9149,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9123,
									"end": 9129,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9079,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 9079,
									"end": 9150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9079,
									"end": 9150,
									"name": "tag",
									"source": 9,
									"value": "236"
								},
								{
									"begin": 9079,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8935,
									"end": 9157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9163,
									"end": 9343,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 9163,
									"end": 9343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9211,
									"end": 9288,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9208,
									"end": 9209,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9201,
									"end": 9289,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9308,
									"end": 9312,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 9305,
									"end": 9306,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 9298,
									"end": 9313,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9332,
									"end": 9336,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 9329,
									"end": 9330,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9322,
									"end": 9337,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 9349,
									"end": 9451,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 9349,
									"end": 9451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9391,
									"end": 9399,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9438,
									"end": 9443,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9435,
									"end": 9436,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9431,
									"end": 9444,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 9410,
									"end": 9444,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9410,
									"end": 9444,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9349,
									"end": 9451,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9349,
									"end": 9451,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9349,
									"end": 9451,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9349,
									"end": 9451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9457,
									"end": 10305,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 9457,
									"end": 10305,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9518,
									"end": 9523,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9525,
									"end": 9529,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 9549,
									"end": 9555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9555,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9555,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9573,
									"end": 9578,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9564,
									"end": 9578,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9564,
									"end": 9578,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9587,
									"end": 10299,
									"name": "tag",
									"source": 9,
									"value": "240"
								},
								{
									"begin": 9587,
									"end": 10299,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9608,
									"end": 9609,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9598,
									"end": 9606,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9595,
									"end": 9610,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 9587,
									"end": 10299,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9587,
									"end": 10299,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "242"
								},
								{
									"begin": 9587,
									"end": 10299,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9703,
									"end": 9707,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 9698,
									"end": 9701,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 9694,
									"end": 9708,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 9688,
									"end": 9692,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9685,
									"end": 9709,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 9682,
									"end": 9732,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9682,
									"end": 9732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "243"
								},
								{
									"begin": 9682,
									"end": 9732,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9712,
									"end": 9730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "244"
								},
								{
									"begin": 9712,
									"end": 9730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 9712,
									"end": 9730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9712,
									"end": 9730,
									"name": "tag",
									"source": 9,
									"value": "244"
								},
								{
									"begin": 9712,
									"end": 9730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9682,
									"end": 9732,
									"name": "tag",
									"source": 9,
									"value": "243"
								},
								{
									"begin": 9682,
									"end": 9732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9762,
									"end": 9763,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9752,
									"end": 9760,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9748,
									"end": 9764,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 9745,
									"end": 10196,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9745,
									"end": 10196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "245"
								},
								{
									"begin": 9745,
									"end": 10196,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10177,
									"end": 10181,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10170,
									"end": 10175,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10166,
									"end": 10182,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 10157,
									"end": 10182,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10157,
									"end": 10182,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9745,
									"end": 10196,
									"name": "tag",
									"source": 9,
									"value": "245"
								},
								{
									"begin": 9745,
									"end": 10196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10227,
									"end": 10231,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10221,
									"end": 10225,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10217,
									"end": 10232,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 10209,
									"end": 10232,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10209,
									"end": 10232,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10257,
									"end": 10289,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "246"
								},
								{
									"begin": 10280,
									"end": 10288,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10257,
									"end": 10289,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 10257,
									"end": 10289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10257,
									"end": 10289,
									"name": "tag",
									"source": 9,
									"value": "246"
								},
								{
									"begin": 10257,
									"end": 10289,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10245,
									"end": 10289,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 10245,
									"end": 10289,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9587,
									"end": 10299,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "240"
								},
								{
									"begin": 9587,
									"end": 10299,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9587,
									"end": 10299,
									"name": "tag",
									"source": 9,
									"value": "242"
								},
								{
									"begin": 9587,
									"end": 10299,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9457,
									"end": 10305,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 9457,
									"end": 10305,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9457,
									"end": 10305,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 9457,
									"end": 10305,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9457,
									"end": 10305,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9457,
									"end": 10305,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9457,
									"end": 10305,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9457,
									"end": 10305,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10311,
									"end": 11384,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 10311,
									"end": 11384,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10365,
									"end": 10370,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10556,
									"end": 10564,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10546,
									"end": 10586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "248"
								},
								{
									"begin": 10546,
									"end": 10586,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10577,
									"end": 10578,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 10568,
									"end": 10578,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10568,
									"end": 10578,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10579,
									"end": 10584,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "247"
								},
								{
									"begin": 10579,
									"end": 10584,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10546,
									"end": 10586,
									"name": "tag",
									"source": 9,
									"value": "248"
								},
								{
									"begin": 10546,
									"end": 10586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10605,
									"end": 10609,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10595,
									"end": 10631,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "249"
								},
								{
									"begin": 10595,
									"end": 10631,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10622,
									"end": 10623,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10613,
									"end": 10623,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10613,
									"end": 10623,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10624,
									"end": 10629,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "247"
								},
								{
									"begin": 10624,
									"end": 10629,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10595,
									"end": 10631,
									"name": "tag",
									"source": 9,
									"value": "249"
								},
								{
									"begin": 10595,
									"end": 10631,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10691,
									"end": 10695,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10739,
									"end": 10740,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 10734,
									"end": 10761,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10734,
									"end": 10761,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 10734,
									"end": 10761,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "251"
								},
								{
									"begin": 10734,
									"end": 10761,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10775,
									"end": 10776,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 10770,
									"end": 10961,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10770,
									"end": 10961,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 10770,
									"end": 10961,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "252"
								},
								{
									"begin": 10770,
									"end": 10961,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10684,
									"end": 10961,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "250"
								},
								{
									"begin": 10684,
									"end": 10961,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10734,
									"end": 10761,
									"name": "tag",
									"source": 9,
									"value": "251"
								},
								{
									"begin": 10734,
									"end": 10761,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10752,
									"end": 10753,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 10743,
									"end": 10753,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10743,
									"end": 10753,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10754,
									"end": 10759,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10754,
									"end": 10759,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "247"
								},
								{
									"begin": 10754,
									"end": 10759,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10770,
									"end": 10961,
									"name": "tag",
									"source": 9,
									"value": "252"
								},
								{
									"begin": 10770,
									"end": 10961,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10815,
									"end": 10818,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 10805,
									"end": 10813,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10802,
									"end": 10819,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 10799,
									"end": 10842,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10799,
									"end": 10842,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "253"
								},
								{
									"begin": 10799,
									"end": 10842,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10822,
									"end": 10840,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "254"
								},
								{
									"begin": 10822,
									"end": 10840,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 10822,
									"end": 10840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10822,
									"end": 10840,
									"name": "tag",
									"source": 9,
									"value": "254"
								},
								{
									"begin": 10822,
									"end": 10840,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10799,
									"end": 10842,
									"name": "tag",
									"source": 9,
									"value": "253"
								},
								{
									"begin": 10799,
									"end": 10842,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10871,
									"end": 10879,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10868,
									"end": 10869,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 10864,
									"end": 10880,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 10855,
									"end": 10880,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10855,
									"end": 10880,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10906,
									"end": 10909,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10899,
									"end": 10904,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10896,
									"end": 10910,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 10893,
									"end": 10933,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10893,
									"end": 10933,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "255"
								},
								{
									"begin": 10893,
									"end": 10933,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10913,
									"end": 10931,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "256"
								},
								{
									"begin": 10913,
									"end": 10931,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 10913,
									"end": 10931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10913,
									"end": 10931,
									"name": "tag",
									"source": 9,
									"value": "256"
								},
								{
									"begin": 10913,
									"end": 10931,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10893,
									"end": 10933,
									"name": "tag",
									"source": 9,
									"value": "255"
								},
								{
									"begin": 10893,
									"end": 10933,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10946,
									"end": 10951,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10946,
									"end": 10951,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "247"
								},
								{
									"begin": 10946,
									"end": 10951,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10684,
									"end": 10961,
									"name": "tag",
									"source": 9,
									"value": "250"
								},
								{
									"begin": 10684,
									"end": 10961,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10684,
									"end": 10961,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11070,
									"end": 11072,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 11060,
									"end": 11068,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11057,
									"end": 11073,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11051,
									"end": 11054,
									"name": "PUSH",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 11045,
									"end": 11049,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11042,
									"end": 11055,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11038,
									"end": 11074,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 11020,
									"end": 11022,
									"name": "PUSH",
									"source": 9,
									"value": "4E"
								},
								{
									"begin": 11010,
									"end": 11018,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11007,
									"end": 11023,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11002,
									"end": 11004,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 10996,
									"end": 11000,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10993,
									"end": 11005,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 10989,
									"end": 11024,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 10973,
									"end": 11084,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 10970,
									"end": 11216,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10970,
									"end": 11216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 10970,
									"end": 11216,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11126,
									"end": 11134,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11120,
									"end": 11124,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11116,
									"end": 11135,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 11107,
									"end": 11135,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11107,
									"end": 11135,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11161,
									"end": 11164,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11154,
									"end": 11159,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11151,
									"end": 11165,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 11148,
									"end": 11188,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11148,
									"end": 11188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "258"
								},
								{
									"begin": 11148,
									"end": 11188,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11168,
									"end": 11186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "259"
								},
								{
									"begin": 11168,
									"end": 11186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 11168,
									"end": 11186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11168,
									"end": 11186,
									"name": "tag",
									"source": 9,
									"value": "259"
								},
								{
									"begin": 11168,
									"end": 11186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11148,
									"end": 11188,
									"name": "tag",
									"source": 9,
									"value": "258"
								},
								{
									"begin": 11148,
									"end": 11188,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11201,
									"end": 11206,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "247"
								},
								{
									"begin": 11201,
									"end": 11206,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10970,
									"end": 11216,
									"name": "tag",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 10970,
									"end": 11216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11241,
									"end": 11283,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "260"
								},
								{
									"begin": 11279,
									"end": 11282,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11269,
									"end": 11277,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11263,
									"end": 11267,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11260,
									"end": 11261,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 11241,
									"end": 11283,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 11241,
									"end": 11283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11241,
									"end": 11283,
									"name": "tag",
									"source": 9,
									"value": "260"
								},
								{
									"begin": 11241,
									"end": 11283,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11226,
									"end": 11283,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11226,
									"end": 11283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11226,
									"end": 11283,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11226,
									"end": 11283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11315,
									"end": 11319,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11310,
									"end": 11313,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11306,
									"end": 11320,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 11299,
									"end": 11304,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11296,
									"end": 11321,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 11293,
									"end": 11344,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11293,
									"end": 11344,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "261"
								},
								{
									"begin": 11293,
									"end": 11344,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11324,
									"end": 11342,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "262"
								},
								{
									"begin": 11324,
									"end": 11342,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 11324,
									"end": 11342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11324,
									"end": 11342,
									"name": "tag",
									"source": 9,
									"value": "262"
								},
								{
									"begin": 11324,
									"end": 11342,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11293,
									"end": 11344,
									"name": "tag",
									"source": 9,
									"value": "261"
								},
								{
									"begin": 11293,
									"end": 11344,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11373,
									"end": 11377,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11366,
									"end": 11371,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11362,
									"end": 11378,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 11353,
									"end": 11378,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11353,
									"end": 11378,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10311,
									"end": 11384,
									"name": "tag",
									"source": 9,
									"value": "247"
								},
								{
									"begin": 10311,
									"end": 11384,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10311,
									"end": 11384,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 10311,
									"end": 11384,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10311,
									"end": 11384,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10311,
									"end": 11384,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10311,
									"end": 11384,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10311,
									"end": 11384,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11390,
									"end": 11675,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 11390,
									"end": 11675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11450,
									"end": 11455,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11474,
									"end": 11497,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "264"
								},
								{
									"begin": 11492,
									"end": 11496,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11474,
									"end": 11497,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 11474,
									"end": 11497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11474,
									"end": 11497,
									"name": "tag",
									"source": 9,
									"value": "264"
								},
								{
									"begin": 11474,
									"end": 11497,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11466,
									"end": 11497,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11466,
									"end": 11497,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11518,
									"end": 11545,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "265"
								},
								{
									"begin": 11536,
									"end": 11544,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11518,
									"end": 11545,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 11518,
									"end": 11545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11518,
									"end": 11545,
									"name": "tag",
									"source": 9,
									"value": "265"
								},
								{
									"begin": 11518,
									"end": 11545,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11506,
									"end": 11545,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11506,
									"end": 11545,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11564,
									"end": 11668,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "266"
								},
								{
									"begin": 11601,
									"end": 11667,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11591,
									"end": 11599,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11585,
									"end": 11589,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11564,
									"end": 11668,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 11564,
									"end": 11668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11564,
									"end": 11668,
									"name": "tag",
									"source": 9,
									"value": "266"
								},
								{
									"begin": 11564,
									"end": 11668,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11555,
									"end": 11668,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11555,
									"end": 11668,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11390,
									"end": 11675,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11390,
									"end": 11675,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11390,
									"end": 11675,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11390,
									"end": 11675,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11390,
									"end": 11675,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11681,
									"end": 12091,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 11681,
									"end": 12091,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11721,
									"end": 11728,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11744,
									"end": 11764,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "268"
								},
								{
									"begin": 11762,
									"end": 11763,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11744,
									"end": 11764,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 11744,
									"end": 11764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11744,
									"end": 11764,
									"name": "tag",
									"source": 9,
									"value": "268"
								},
								{
									"begin": 11744,
									"end": 11764,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11739,
									"end": 11764,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11739,
									"end": 11764,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11778,
									"end": 11798,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "269"
								},
								{
									"begin": 11796,
									"end": 11797,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11778,
									"end": 11798,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 11778,
									"end": 11798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11778,
									"end": 11798,
									"name": "tag",
									"source": 9,
									"value": "269"
								},
								{
									"begin": 11778,
									"end": 11798,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11773,
									"end": 11798,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11773,
									"end": 11798,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11833,
									"end": 11834,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11830,
									"end": 11831,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11826,
									"end": 11835,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 11855,
									"end": 11885,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "270"
								},
								{
									"begin": 11873,
									"end": 11884,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11855,
									"end": 11885,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 11855,
									"end": 11885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11855,
									"end": 11885,
									"name": "tag",
									"source": 9,
									"value": "270"
								},
								{
									"begin": 11855,
									"end": 11885,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11844,
									"end": 11885,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11844,
									"end": 11885,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12034,
									"end": 12035,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12025,
									"end": 12032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12021,
									"end": 12036,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 12018,
									"end": 12019,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12015,
									"end": 12037,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 11995,
									"end": 11996,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11988,
									"end": 11997,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11968,
									"end": 12051,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 11945,
									"end": 12084,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "271"
								},
								{
									"begin": 11945,
									"end": 12084,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 12064,
									"end": 12082,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "272"
								},
								{
									"begin": 12064,
									"end": 12082,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 12064,
									"end": 12082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12064,
									"end": 12082,
									"name": "tag",
									"source": 9,
									"value": "272"
								},
								{
									"begin": 12064,
									"end": 12082,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11945,
									"end": 12084,
									"name": "tag",
									"source": 9,
									"value": "271"
								},
								{
									"begin": 11945,
									"end": 12084,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11729,
									"end": 12091,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11681,
									"end": 12091,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11681,
									"end": 12091,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11681,
									"end": 12091,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11681,
									"end": 12091,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11681,
									"end": 12091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12097,
									"end": 12266,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 12097,
									"end": 12266,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12181,
									"end": 12192,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12215,
									"end": 12221,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12210,
									"end": 12213,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12203,
									"end": 12222,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 12255,
									"end": 12259,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 12250,
									"end": 12253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12246,
									"end": 12260,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12231,
									"end": 12260,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12231,
									"end": 12260,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12097,
									"end": 12266,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12097,
									"end": 12266,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12097,
									"end": 12266,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12097,
									"end": 12266,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12097,
									"end": 12266,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12272,
									"end": 12449,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 12272,
									"end": 12449,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12412,
									"end": 12441,
									"name": "PUSH",
									"source": 9,
									"value": "546F6B656E207472616E73666572207768696C65207061757365640000000000"
								},
								{
									"begin": 12408,
									"end": 12409,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12400,
									"end": 12406,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12396,
									"end": 12410,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12389,
									"end": 12442,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 12272,
									"end": 12449,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12272,
									"end": 12449,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12455,
									"end": 12821,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 12455,
									"end": 12821,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12597,
									"end": 12600,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12618,
									"end": 12685,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "276"
								},
								{
									"begin": 12682,
									"end": 12684,
									"name": "PUSH",
									"source": 9,
									"value": "1B"
								},
								{
									"begin": 12677,
									"end": 12680,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12618,
									"end": 12685,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 12618,
									"end": 12685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12618,
									"end": 12685,
									"name": "tag",
									"source": 9,
									"value": "276"
								},
								{
									"begin": 12618,
									"end": 12685,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12611,
									"end": 12685,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12611,
									"end": 12685,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12694,
									"end": 12787,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "277"
								},
								{
									"begin": 12783,
									"end": 12786,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12694,
									"end": 12787,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 12694,
									"end": 12787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12694,
									"end": 12787,
									"name": "tag",
									"source": 9,
									"value": "277"
								},
								{
									"begin": 12694,
									"end": 12787,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12812,
									"end": 12814,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 12807,
									"end": 12810,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12803,
									"end": 12815,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12796,
									"end": 12815,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12796,
									"end": 12815,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12455,
									"end": 12821,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12455,
									"end": 12821,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12455,
									"end": 12821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12455,
									"end": 12821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12827,
									"end": 13246,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 12827,
									"end": 13246,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12993,
									"end": 12997,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13031,
									"end": 13033,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 13020,
									"end": 13029,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13016,
									"end": 13034,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13008,
									"end": 13034,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13008,
									"end": 13034,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13080,
									"end": 13089,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 13074,
									"end": 13078,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 13070,
									"end": 13090,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 13066,
									"end": 13067,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13055,
									"end": 13064,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 13051,
									"end": 13068,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13044,
									"end": 13091,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 13108,
									"end": 13239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "279"
								},
								{
									"begin": 13234,
									"end": 13238,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 13108,
									"end": 13239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 13108,
									"end": 13239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13108,
									"end": 13239,
									"name": "tag",
									"source": 9,
									"value": "279"
								},
								{
									"begin": 13108,
									"end": 13239,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13100,
									"end": 13239,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13100,
									"end": 13239,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12827,
									"end": 13246,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12827,
									"end": 13246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12827,
									"end": 13246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12827,
									"end": 13246,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13252,
									"end": 13494,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 13252,
									"end": 13494,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13392,
									"end": 13426,
									"name": "PUSH",
									"source": 9,
									"value": "45524332304C6F636B61626C653A207472616E7366657220616D6F756E742065"
								},
								{
									"begin": 13388,
									"end": 13389,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13380,
									"end": 13386,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13376,
									"end": 13390,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13369,
									"end": 13427,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 13461,
									"end": 13486,
									"name": "PUSH",
									"source": 9,
									"value": "78636565647320756E6C6F636B65642062616C616E6365000000000000000000"
								},
								{
									"begin": 13456,
									"end": 13458,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 13448,
									"end": 13454,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13444,
									"end": 13459,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13437,
									"end": 13487,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 13252,
									"end": 13494,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13252,
									"end": 13494,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13500,
									"end": 13866,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 13500,
									"end": 13866,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13642,
									"end": 13645,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13663,
									"end": 13730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "282"
								},
								{
									"begin": 13727,
									"end": 13729,
									"name": "PUSH",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 13722,
									"end": 13725,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 13663,
									"end": 13730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 13663,
									"end": 13730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13663,
									"end": 13730,
									"name": "tag",
									"source": 9,
									"value": "282"
								},
								{
									"begin": 13663,
									"end": 13730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13656,
									"end": 13730,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 13656,
									"end": 13730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13739,
									"end": 13832,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "283"
								},
								{
									"begin": 13828,
									"end": 13831,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13739,
									"end": 13832,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 13739,
									"end": 13832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13739,
									"end": 13832,
									"name": "tag",
									"source": 9,
									"value": "283"
								},
								{
									"begin": 13739,
									"end": 13832,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13857,
									"end": 13859,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 13852,
									"end": 13855,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13848,
									"end": 13860,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13841,
									"end": 13860,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13841,
									"end": 13860,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13500,
									"end": 13866,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 13500,
									"end": 13866,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13500,
									"end": 13866,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13500,
									"end": 13866,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13872,
									"end": 14291,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 13872,
									"end": 14291,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14038,
									"end": 14042,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14076,
									"end": 14078,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 14065,
									"end": 14074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14061,
									"end": 14079,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 14053,
									"end": 14079,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14053,
									"end": 14079,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14125,
									"end": 14134,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 14119,
									"end": 14123,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 14115,
									"end": 14135,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 14111,
									"end": 14112,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14100,
									"end": 14109,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 14096,
									"end": 14113,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 14089,
									"end": 14136,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 14153,
									"end": 14284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "285"
								},
								{
									"begin": 14279,
									"end": 14283,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 14153,
									"end": 14284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 14153,
									"end": 14284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14153,
									"end": 14284,
									"name": "tag",
									"source": 9,
									"value": "285"
								},
								{
									"begin": 14153,
									"end": 14284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14145,
									"end": 14284,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14145,
									"end": 14284,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13872,
									"end": 14291,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 13872,
									"end": 14291,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13872,
									"end": 14291,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13872,
									"end": 14291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14297,
									"end": 14477,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 14297,
									"end": 14477,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14345,
									"end": 14422,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14342,
									"end": 14343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14335,
									"end": 14423,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 14442,
									"end": 14446,
									"name": "PUSH",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 14439,
									"end": 14440,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 14432,
									"end": 14447,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 14466,
									"end": 14470,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 14463,
									"end": 14464,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14456,
									"end": 14471,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 14483,
									"end": 14674,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 14483,
									"end": 14674,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14523,
									"end": 14526,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14542,
									"end": 14562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "288"
								},
								{
									"begin": 14560,
									"end": 14561,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14542,
									"end": 14562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 14542,
									"end": 14562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14542,
									"end": 14562,
									"name": "tag",
									"source": 9,
									"value": "288"
								},
								{
									"begin": 14542,
									"end": 14562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14537,
									"end": 14562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14537,
									"end": 14562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14576,
									"end": 14596,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "289"
								},
								{
									"begin": 14594,
									"end": 14595,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 14576,
									"end": 14596,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 14576,
									"end": 14596,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14576,
									"end": 14596,
									"name": "tag",
									"source": 9,
									"value": "289"
								},
								{
									"begin": 14576,
									"end": 14596,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14571,
									"end": 14596,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14571,
									"end": 14596,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14619,
									"end": 14620,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14616,
									"end": 14617,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14612,
									"end": 14621,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 14605,
									"end": 14621,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14605,
									"end": 14621,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14640,
									"end": 14643,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 14637,
									"end": 14638,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14634,
									"end": 14644,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 14631,
									"end": 14667,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 14631,
									"end": 14667,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "290"
								},
								{
									"begin": 14631,
									"end": 14667,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 14647,
									"end": 14665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "291"
								},
								{
									"begin": 14647,
									"end": 14665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 14647,
									"end": 14665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14647,
									"end": 14665,
									"name": "tag",
									"source": 9,
									"value": "291"
								},
								{
									"begin": 14647,
									"end": 14665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14631,
									"end": 14667,
									"name": "tag",
									"source": 9,
									"value": "290"
								},
								{
									"begin": 14631,
									"end": 14667,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14483,
									"end": 14674,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14483,
									"end": 14674,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14483,
									"end": 14674,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14483,
									"end": 14674,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14483,
									"end": 14674,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14680,
									"end": 14874,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 14680,
									"end": 14874,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14720,
									"end": 14724,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14740,
									"end": 14760,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "293"
								},
								{
									"begin": 14758,
									"end": 14759,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14740,
									"end": 14760,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 14740,
									"end": 14760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14740,
									"end": 14760,
									"name": "tag",
									"source": 9,
									"value": "293"
								},
								{
									"begin": 14740,
									"end": 14760,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14735,
									"end": 14760,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14735,
									"end": 14760,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14774,
									"end": 14794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "294"
								},
								{
									"begin": 14792,
									"end": 14793,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 14774,
									"end": 14794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 14774,
									"end": 14794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14774,
									"end": 14794,
									"name": "tag",
									"source": 9,
									"value": "294"
								},
								{
									"begin": 14774,
									"end": 14794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14769,
									"end": 14794,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14769,
									"end": 14794,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14818,
									"end": 14819,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14815,
									"end": 14816,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14811,
									"end": 14820,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 14803,
									"end": 14820,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14803,
									"end": 14820,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14842,
									"end": 14843,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 14836,
									"end": 14840,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 14833,
									"end": 14844,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 14830,
									"end": 14867,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 14830,
									"end": 14867,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "295"
								},
								{
									"begin": 14830,
									"end": 14867,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 14847,
									"end": 14865,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "296"
								},
								{
									"begin": 14847,
									"end": 14865,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 14847,
									"end": 14865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14847,
									"end": 14865,
									"name": "tag",
									"source": 9,
									"value": "296"
								},
								{
									"begin": 14847,
									"end": 14865,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14830,
									"end": 14867,
									"name": "tag",
									"source": 9,
									"value": "295"
								},
								{
									"begin": 14830,
									"end": 14867,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14680,
									"end": 14874,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14680,
									"end": 14874,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14680,
									"end": 14874,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14680,
									"end": 14874,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14680,
									"end": 14874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14880,
									"end": 14998,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 14880,
									"end": 14998,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14967,
									"end": 14991,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "298"
								},
								{
									"begin": 14985,
									"end": 14990,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 14967,
									"end": 14991,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 14967,
									"end": 14991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14967,
									"end": 14991,
									"name": "tag",
									"source": 9,
									"value": "298"
								},
								{
									"begin": 14967,
									"end": 14991,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14962,
									"end": 14965,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14955,
									"end": 14992,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 14880,
									"end": 14998,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14880,
									"end": 14998,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14880,
									"end": 14998,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15004,
									"end": 15446,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 15004,
									"end": 15446,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15153,
									"end": 15157,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 15191,
									"end": 15193,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 15180,
									"end": 15189,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 15176,
									"end": 15194,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15168,
									"end": 15194,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 15168,
									"end": 15194,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15204,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "300"
								},
								{
									"begin": 15272,
									"end": 15273,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 15261,
									"end": 15270,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 15257,
									"end": 15274,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15248,
									"end": 15254,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 15204,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 15204,
									"end": 15275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15204,
									"end": 15275,
									"name": "tag",
									"source": 9,
									"value": "300"
								},
								{
									"begin": 15204,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15285,
									"end": 15357,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "301"
								},
								{
									"begin": 15353,
									"end": 15355,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 15342,
									"end": 15351,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 15338,
									"end": 15356,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15329,
									"end": 15335,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 15285,
									"end": 15357,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 15285,
									"end": 15357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15285,
									"end": 15357,
									"name": "tag",
									"source": 9,
									"value": "301"
								},
								{
									"begin": 15285,
									"end": 15357,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15367,
									"end": 15439,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "302"
								},
								{
									"begin": 15435,
									"end": 15437,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 15424,
									"end": 15433,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 15420,
									"end": 15438,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15411,
									"end": 15417,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 15367,
									"end": 15439,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 15367,
									"end": 15439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15367,
									"end": 15439,
									"name": "tag",
									"source": 9,
									"value": "302"
								},
								{
									"begin": 15367,
									"end": 15439,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15004,
									"end": 15446,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 15004,
									"end": 15446,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 15004,
									"end": 15446,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15004,
									"end": 15446,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15004,
									"end": 15446,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15004,
									"end": 15446,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15004,
									"end": 15446,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15452,
									"end": 15674,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 15452,
									"end": 15674,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15545,
									"end": 15549,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 15583,
									"end": 15585,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 15572,
									"end": 15581,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 15568,
									"end": 15586,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15560,
									"end": 15586,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 15560,
									"end": 15586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15596,
									"end": 15667,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "304"
								},
								{
									"begin": 15664,
									"end": 15665,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 15653,
									"end": 15662,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 15649,
									"end": 15666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15640,
									"end": 15646,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 15596,
									"end": 15667,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 15596,
									"end": 15667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15596,
									"end": 15667,
									"name": "tag",
									"source": 9,
									"value": "304"
								},
								{
									"begin": 15596,
									"end": 15667,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15452,
									"end": 15674,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 15452,
									"end": 15674,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 15452,
									"end": 15674,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15452,
									"end": 15674,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15452,
									"end": 15674,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 4172,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ed3aabeb9a17af9a9f5702530c563b6cb58638c2894b51b5f741a3570429679a64736f6c63430008180033",
									".code": [
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "929EC537"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "929EC537"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "D1C46916"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "8D1FDF2F"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "38B82092"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "38B82092"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "45C8B1A6"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "5E1372F4"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 4172,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2882,
											"end": 3100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2882,
											"end": 3100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3171,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1877,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1877,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2089,
											"end": 2315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2089,
											"end": 2315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3165,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3106,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3106,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3106,
											"end": 3165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3165,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3106,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3165,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1665,
											"end": 1871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1665,
											"end": 1871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3814,
											"end": 4170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3814,
											"end": 4170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3814,
											"end": 4170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2321,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2321,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2990,
											"end": 3030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 3000,
											"end": 3010,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3021,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3023,
											"end": 3029,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 2999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2990,
											"end": 3030,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3030,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2990,
											"end": 3030,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3047,
											"end": 3056,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3092,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3081,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3066,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3066,
											"end": 3092,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3066,
											"end": 3092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3040,
											"end": 3093,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3093,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3040,
											"end": 3093,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3217,
											"end": 3225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3217,
											"end": 3227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3217,
											"end": 3227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3217,
											"end": 3227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1969,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1947,
											"end": 1970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1939,
											"end": 1996,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1939,
											"end": 1996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2028,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2068,
											"end": 2075,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F915CD9FE234DE6E8D3AFE7BF2388D35B2B6D48E8C629A24602019BDE79C213A"
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2076,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2204,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2194,
											"end": 2212,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2194,
											"end": 2212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2222,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2222,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2186,
											"end": 2247,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2186,
											"end": 2247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2293,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2306,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3165,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3106,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3150,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3150,
											"end": 3158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3150,
											"end": 3158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1756,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1734,
											"end": 1757,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1757,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 1725,
											"end": 1787,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 1725,
											"end": 1787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1827,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4F2A367E694E71282F29AB5EAA04C4C0BE45AC5BF2CA74FB67068B98BDC2887D"
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1864,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3896,
											"end": 3920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 4135,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 3930,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3968,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 3969,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4135,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3930,
											"end": 4135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4049,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4007,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4018,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 4001,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4031,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4001,
											"end": 4031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4049,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3997,
											"end": 4125,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3997,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3997,
											"end": 4125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4091,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4099,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4102,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 4085,
											"end": 4103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4110,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4110,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4069,
											"end": 4110,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 4069,
											"end": 4110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4110,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4069,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4110,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4110,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3997,
											"end": 4125,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3997,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3981,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3981,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3981,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3978,
											"end": 3981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3981,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 3930,
											"end": 4135,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4135,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3930,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2376,
											"end": 2400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2414,
											"end": 2766,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 2414,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2452,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2460,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2414,
											"end": 2766,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2414,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 2414,
											"end": 2766,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2534,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2499,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2502,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2485,
											"end": 2503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2515,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2485,
											"end": 2515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2515,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2534,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2481,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2481,
											"end": 2756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2589,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2574,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2599,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2599,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2554,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2680,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2654,
											"end": 2660,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2676,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2676,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2654,
											"end": 2680,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2654,
											"end": 2680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2680,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2654,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2638,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2631,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2617,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2705,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2713,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2699,
											"end": 2720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2720,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2738,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2481,
											"end": 2756,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2481,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2462,
											"end": 2465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2414,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 2414,
											"end": 2766,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2414,
											"end": 2766,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 2414,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2414,
											"end": 2766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2775,
											"end": 2870,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2775,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 2775,
											"end": 2870,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "PUSH",
											"source": 8,
											"value": "622CA42598AB680A7DEF4A7346E1963A82207CF42A5DDB8056AD62CFBDA19B88"
										},
										{
											"begin": 2842,
											"end": 2858,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2820,
											"end": 2859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2859,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2775,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 2775,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8998,
											"end": 9126,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 8998,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 9091,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9107,
											"end": 9112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9114,
											"end": 9118,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9082,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 9082,
											"end": 9119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9119,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 9082,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8998,
											"end": 9126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8998,
											"end": 9126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8998,
											"end": 9126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8998,
											"end": 9126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10672,
											"end": 11149,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 10672,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10771,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 10808,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 10822,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10798,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 10798,
											"end": 10823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10798,
											"end": 10823,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 10798,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10771,
											"end": 10823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10771,
											"end": 10823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10857,
											"end": 10874,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10837,
											"end": 10853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10837,
											"end": 10874,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10833,
											"end": 11143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 10833,
											"end": 11143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10913,
											"end": 10918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10894,
											"end": 10910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10894,
											"end": 10918,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 11020,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 10890,
											"end": 11020,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10979,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10981,
											"end": 10997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10999,
											"end": 11004,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 10945,
											"end": 11005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 11020,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 10890,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11061,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 11070,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11084,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11105,
											"end": 11110,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11086,
											"end": 11102,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11086,
											"end": 11110,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11112,
											"end": 11117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11061,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 11061,
											"end": 11118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11061,
											"end": 11118,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 11061,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10833,
											"end": 11143,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 10833,
											"end": 11143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10761,
											"end": 11149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10672,
											"end": 11149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10672,
											"end": 11149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10672,
											"end": 11149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10672,
											"end": 11149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5965,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5656,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5934,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 5950,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5952,
											"end": 5957,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5934,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5934,
											"end": 5958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5934,
											"end": 5958,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5934,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8462,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 8256,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8345,
											"end": 8346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8347,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8326,
											"end": 8347,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8326,
											"end": 8333,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8326,
											"end": 8347,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8326,
											"end": 8347,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8326,
											"end": 8347,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8322,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8322,
											"end": 8411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8397,
											"end": 8398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 8370,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8322,
											"end": 8411,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8322,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8420,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 8428,
											"end": 8435,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8449,
											"end": 8454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8420,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 8420,
											"end": 8455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8420,
											"end": 8455,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 8420,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8256,
											"end": 8462,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8256,
											"end": 8462,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8256,
											"end": 8462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 10390,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 9958,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10087,
											"end": 10088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10070,
											"end": 10089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10070,
											"end": 10089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10070,
											"end": 10075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10070,
											"end": 10089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10070,
											"end": 10089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10070,
											"end": 10089,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10066,
											"end": 10155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10141,
											"end": 10142,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 10112,
											"end": 10144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10155,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10066,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10187,
											"end": 10188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10189,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10168,
											"end": 10189,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10168,
											"end": 10175,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10168,
											"end": 10189,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10168,
											"end": 10189,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10168,
											"end": 10189,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10164,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10164,
											"end": 10254,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10240,
											"end": 10241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 10212,
											"end": 10243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10164,
											"end": 10254,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10164,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10293,
											"end": 10298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10274,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10280,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10282,
											"end": 10289,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10263,
											"end": 10290,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10298,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10263,
											"end": 10298,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10312,
											"end": 10321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10308,
											"end": 10384,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10308,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 10308,
											"end": 10384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10358,
											"end": 10365,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10351,
											"end": 10356,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10367,
											"end": 10372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 10342,
											"end": 10373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10373,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10308,
											"end": 10384,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 10308,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9958,
											"end": 10390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9958,
											"end": 10390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9958,
											"end": 10390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9958,
											"end": 10390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9958,
											"end": 10390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1659,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1126,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1345,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1345,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1307,
											"end": 1345,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1345,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1345,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1331,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1345,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1345,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1345,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1345,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1345,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1307,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1304,
											"end": 1603,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1304,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1304,
											"end": 1603,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1370,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1370,
											"end": 1378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1370,
											"end": 1378,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1370,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1378,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1403,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1369,
											"end": 1403,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1396,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1396,
											"end": 1403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1403,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1396,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1403,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1382,
											"end": 1403,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1392,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1403,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1382,
											"end": 1403,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1403,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1403,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1369,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1361,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1361,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1519,
											"end": 1523,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1508,
											"end": 1532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1532,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1508,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 1500,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1304,
											"end": 1603,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1304,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1621,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1635,
											"end": 1639,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1641,
											"end": 1643,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1621,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1621,
											"end": 1652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1621,
											"end": 1652,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1621,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1126,
											"end": 1659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1126,
											"end": 1659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1126,
											"end": 1659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1126,
											"end": 1659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3808,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3240,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3312,
											"end": 3316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3348,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3328,
											"end": 3352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3647,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3451,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3481,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3494,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3451,
											"end": 3647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3564,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3525,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3530,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3533,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3519,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3546,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3519,
											"end": 3546,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3546,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3564,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3637,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 3515,
											"end": 3637,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3614,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3600,
											"end": 3615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3622,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3622,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3622,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 3584,
											"end": 3622,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3584,
											"end": 3622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3622,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 3584,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3622,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3637,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 3515,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3451,
											"end": 3647,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3647,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3451,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3795,
											"end": 3801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 3771,
											"end": 3775,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 3761,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 3761,
											"end": 3791,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3761,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3791,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 3761,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3801,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3801,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3754,
											"end": 3801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3754,
											"end": 3801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3754,
											"end": 3801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3240,
											"end": 3808,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3240,
											"end": 3808,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3240,
											"end": 3808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3240,
											"end": 3808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3240,
											"end": 3808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6280,
											"end": 7387,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 6280,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6385,
											"end": 6386,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6369,
											"end": 6373,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6365,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 6365,
											"end": 6905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6521,
											"end": 6526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 6505,
											"end": 6526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6365,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 6365,
											"end": 6905,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6365,
											"end": 6905,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 6365,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6576,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6593,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6626,
											"end": 6631,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6631,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6723,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 6608,
											"end": 6723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6683,
											"end": 6687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6689,
											"end": 6700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6702,
											"end": 6707,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6658,
											"end": 6708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6723,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 6608,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 6880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6861,
											"end": 6872,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6861,
											"end": 6880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6857,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6880,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6543,
											"end": 6905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6365,
											"end": 6905,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 6365,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 6934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6935,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6919,
											"end": 6935,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6919,
											"end": 6921,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6919,
											"end": 6935,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6919,
											"end": 6935,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6919,
											"end": 6935,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 6915,
											"end": 7340,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7082,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 6915,
											"end": 7340,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 7340,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 6915,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7310,
											"end": 7315,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7302,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7303,
											"end": 7305,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 7340,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 6915,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7370,
											"end": 7372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7364,
											"end": 7368,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7374,
											"end": 7379,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 7355,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7380,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6280,
											"end": 7387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6280,
											"end": 7387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6280,
											"end": 7387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6280,
											"end": 7387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5472,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4853,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4930,
											"end": 4936,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 4997,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4983,
											"end": 4992,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 4981,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 4993,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 4998,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5082,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 4963,
											"end": 5082,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 5001,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 5001,
											"end": 5080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5080,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 5001,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5082,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 4963,
											"end": 5082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 5191,
											"end": 5198,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5188,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5180,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5167,
											"end": 5189,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 5146,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5199,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 5146,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5136,
											"end": 5199,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5136,
											"end": 5199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5092,
											"end": 5209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5274,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 5319,
											"end": 5326,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5299,
											"end": 5308,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5274,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5274,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5274,
											"end": 5327,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 5274,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5327,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5219,
											"end": 5337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5378,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5402,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 5447,
											"end": 5454,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5427,
											"end": 5436,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5423,
											"end": 5445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5402,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 5402,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5392,
											"end": 5455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5392,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5347,
											"end": 5465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5472,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5472,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5472,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5543,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5588,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5574,
											"end": 5583,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5565,
											"end": 5572,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5584,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5589,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5554,
											"end": 5673,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5554,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 5554,
											"end": 5673,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 5592,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 5592,
											"end": 5671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5671,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 5592,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5554,
											"end": 5673,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 5554,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5712,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 5782,
											"end": 5789,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5773,
											"end": 5779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5737,
											"end": 5790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5790,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 5737,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5790,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5800,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 6142,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5813,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5872,
											"end": 5878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5923,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5909,
											"end": 5918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5907,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5896,
											"end": 5919,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5892,
											"end": 5924,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5889,
											"end": 6008,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5889,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 5889,
											"end": 6008,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 5927,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 5927,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 6006,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 5927,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5889,
											"end": 6008,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 5889,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 6117,
											"end": 6124,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6108,
											"end": 6114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6106,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6093,
											"end": 6115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 6072,
											"end": 6125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6125,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6018,
											"end": 6135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 6142,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 6142,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 6142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 6142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 6142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6148,
											"end": 6266,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6148,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6235,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 6253,
											"end": 6258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6235,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 6235,
											"end": 6259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6235,
											"end": 6259,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 6235,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6230,
											"end": 6233,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6223,
											"end": 6260,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6148,
											"end": 6266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6148,
											"end": 6266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6148,
											"end": 6266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6494,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6272,
											"end": 6494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6365,
											"end": 6369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6405,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 6484,
											"end": 6485,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6473,
											"end": 6482,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6469,
											"end": 6486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6466,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6416,
											"end": 6487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6487,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 6416,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6494,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6494,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6494,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6494,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6974,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 6500,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6604,
											"end": 6611,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6600,
											"end": 6623,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6596,
											"end": 6628,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 6631,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6752,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 6821,
											"end": 6828,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6812,
											"end": 6818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6801,
											"end": 6810,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6776,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 6776,
											"end": 6829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6776,
											"end": 6829,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 6776,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6829,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6829,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6722,
											"end": 6839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6880,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6904,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 6949,
											"end": 6956,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6938,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 6904,
											"end": 6957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6957,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 6904,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6894,
											"end": 6957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6894,
											"end": 6957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6974,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6974,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7106,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7154,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7486,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 7166,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7210,
											"end": 7216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7248,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7241,
											"end": 7245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7249,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7227,
											"end": 7249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7227,
											"end": 7249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7294,
											"end": 7295,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7288,
											"end": 7292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7284,
											"end": 7296,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 7305,
											"end": 7386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 7363,
											"end": 7369,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7376,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7386,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 7305,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7433,
											"end": 7435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7425,
											"end": 7431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7422,
											"end": 7436,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7402,
											"end": 7420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7399,
											"end": 7437,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7396,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 7396,
											"end": 7480,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7452,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 7452,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7452,
											"end": 7470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7452,
											"end": 7470,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 7452,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7396,
											"end": 7480,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 7396,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7217,
											"end": 7486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7486,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7486,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7492,
											"end": 7672,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 7492,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7540,
											"end": 7617,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7537,
											"end": 7538,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7618,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7637,
											"end": 7641,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7634,
											"end": 7635,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7627,
											"end": 7642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7661,
											"end": 7665,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7658,
											"end": 7659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7666,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7678,
											"end": 7869,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 7678,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 7755,
											"end": 7756,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 7737,
											"end": 7757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 7757,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 7737,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7771,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 7789,
											"end": 7790,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7771,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 7771,
											"end": 7791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7771,
											"end": 7791,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 7771,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7791,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7814,
											"end": 7815,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7811,
											"end": 7812,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7807,
											"end": 7816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7800,
											"end": 7816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7800,
											"end": 7816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7835,
											"end": 7838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7832,
											"end": 7833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7829,
											"end": 7839,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7862,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7826,
											"end": 7862,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 7842,
											"end": 7860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7862,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7826,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7678,
											"end": 7869,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7678,
											"end": 7869,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7678,
											"end": 7869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7678,
											"end": 7869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7678,
											"end": 7869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 8046,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 7875,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "PUSH",
											"source": 9,
											"value": "4163636F756E74206973206E6F742066726F7A656E0000000000000000000000"
										},
										{
											"begin": 8011,
											"end": 8012,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8003,
											"end": 8009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8013,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7992,
											"end": 8039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 8046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 8046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8418,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 8052,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 8274,
											"end": 8277,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8215,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8208,
											"end": 8282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8208,
											"end": 8282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8291,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 8380,
											"end": 8383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8291,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 8291,
											"end": 8384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8291,
											"end": 8384,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 8291,
											"end": 8384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8409,
											"end": 8411,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8404,
											"end": 8407,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8418,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8843,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 8424,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8590,
											"end": 8594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8628,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8617,
											"end": 8626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8613,
											"end": 8631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8605,
											"end": 8631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8605,
											"end": 8631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8677,
											"end": 8686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8671,
											"end": 8675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8667,
											"end": 8687,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8663,
											"end": 8664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8652,
											"end": 8661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8648,
											"end": 8665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8641,
											"end": 8688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8705,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 8831,
											"end": 8835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8705,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 8705,
											"end": 8836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8705,
											"end": 8836,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 8705,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8849,
											"end": 9019,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 8849,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8989,
											"end": 9011,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 8985,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8983,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8973,
											"end": 8987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9012,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8849,
											"end": 9019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8849,
											"end": 9019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9391,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 9025,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9167,
											"end": 9170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 9252,
											"end": 9254,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 9247,
											"end": 9250,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9188,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 9188,
											"end": 9255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9188,
											"end": 9255,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 9188,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9181,
											"end": 9255,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9181,
											"end": 9255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9264,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 9353,
											"end": 9356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9264,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 9264,
											"end": 9357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9264,
											"end": 9357,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 9264,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9382,
											"end": 9384,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9377,
											"end": 9380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9373,
											"end": 9385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9391,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9391,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9816,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 9397,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9563,
											"end": 9567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9601,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9590,
											"end": 9599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9650,
											"end": 9659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9644,
											"end": 9648,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9640,
											"end": 9660,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9636,
											"end": 9637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9625,
											"end": 9634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9614,
											"end": 9661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9678,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 9804,
											"end": 9808,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9678,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 9678,
											"end": 9809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9678,
											"end": 9809,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 9678,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9670,
											"end": 9809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9670,
											"end": 9809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9816,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9997,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 9822,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9962,
											"end": 9989,
											"name": "PUSH",
											"source": 9,
											"value": "4163636F756E7420697320616C72656164792066726F7A656E00000000000000"
										},
										{
											"begin": 9958,
											"end": 9959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9946,
											"end": 9960,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9939,
											"end": 9990,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10003,
											"end": 10369,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10003,
											"end": 10369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10145,
											"end": 10148,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10166,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 10230,
											"end": 10232,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 10225,
											"end": 10228,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10166,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 10166,
											"end": 10233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10166,
											"end": 10233,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 10166,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10159,
											"end": 10233,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10159,
											"end": 10233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10242,
											"end": 10335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 10331,
											"end": 10334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10242,
											"end": 10335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 10242,
											"end": 10335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10242,
											"end": 10335,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 10242,
											"end": 10335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10360,
											"end": 10362,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10355,
											"end": 10358,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10351,
											"end": 10363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10003,
											"end": 10369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10003,
											"end": 10369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10003,
											"end": 10369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10003,
											"end": 10369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10375,
											"end": 10794,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 10375,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10541,
											"end": 10545,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10579,
											"end": 10581,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10568,
											"end": 10577,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10564,
											"end": 10582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10556,
											"end": 10582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10556,
											"end": 10582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10637,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10622,
											"end": 10626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10618,
											"end": 10638,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10614,
											"end": 10615,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10603,
											"end": 10612,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10592,
											"end": 10639,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 10782,
											"end": 10786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10656,
											"end": 10787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10787,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 10656,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10375,
											"end": 10794,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10375,
											"end": 10794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10375,
											"end": 10794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10375,
											"end": 10794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10980,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 10800,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10925,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10845,
											"end": 10846,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10945,
											"end": 10949,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 10942,
											"end": 10943,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10935,
											"end": 10950,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10969,
											"end": 10973,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10966,
											"end": 10967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10959,
											"end": 10974,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11180,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 10986,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11026,
											"end": 11030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11046,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 11064,
											"end": 11065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11046,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 11046,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11046,
											"end": 11066,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 11046,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11041,
											"end": 11066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11041,
											"end": 11066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 11098,
											"end": 11099,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 11080,
											"end": 11100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11100,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 11080,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11100,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11124,
											"end": 11125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11121,
											"end": 11122,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11117,
											"end": 11126,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11109,
											"end": 11126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11109,
											"end": 11126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11148,
											"end": 11149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11142,
											"end": 11146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11139,
											"end": 11150,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11136,
											"end": 11173,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11136,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 11136,
											"end": 11173,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11153,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 11153,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 11153,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11153,
											"end": 11171,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 11153,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11136,
											"end": 11173,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 11136,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11180,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11180,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11366,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 11186,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11234,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11231,
											"end": 11232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11224,
											"end": 11312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11331,
											"end": 11335,
											"name": "PUSH",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 11328,
											"end": 11329,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11321,
											"end": 11336,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11359,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11352,
											"end": 11353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11345,
											"end": 11360,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11543,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 11372,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11411,
											"end": 11414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11434,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 11452,
											"end": 11457,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11434,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 11434,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11434,
											"end": 11458,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 11434,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11425,
											"end": 11458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11425,
											"end": 11458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11473,
											"end": 11478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11485,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 11467,
											"end": 11508,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11488,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 11488,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 11488,
											"end": 11506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11488,
											"end": 11506,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 11488,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11508,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 11467,
											"end": 11508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11535,
											"end": 11536,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11528,
											"end": 11533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11524,
											"end": 11537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11517,
											"end": 11537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11517,
											"end": 11537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11543,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11549,
											"end": 11782,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 11549,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11611,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 11629,
											"end": 11634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11611,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 11611,
											"end": 11635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11611,
											"end": 11635,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 11611,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11602,
											"end": 11635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11602,
											"end": 11635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11657,
											"end": 11723,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11650,
											"end": 11655,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11647,
											"end": 11724,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11644,
											"end": 11747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 11644,
											"end": 11747,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11727,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 11727,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 11727,
											"end": 11745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11727,
											"end": 11745,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 11727,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11644,
											"end": 11747,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 11644,
											"end": 11747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11774,
											"end": 11775,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11767,
											"end": 11772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11763,
											"end": 11776,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11549,
											"end": 11782,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11549,
											"end": 11782,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11549,
											"end": 11782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11549,
											"end": 11782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11788,
											"end": 12230,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 11788,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11941,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11975,
											"end": 11977,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11964,
											"end": 11973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11952,
											"end": 11978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11952,
											"end": 11978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11988,
											"end": 12059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 12056,
											"end": 12057,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12045,
											"end": 12054,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12041,
											"end": 12058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12032,
											"end": 12038,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11988,
											"end": 12059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 11988,
											"end": 12059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11988,
											"end": 12059,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 11988,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12069,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 12137,
											"end": 12139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12126,
											"end": 12135,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12122,
											"end": 12140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12113,
											"end": 12119,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12069,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 12069,
											"end": 12141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12069,
											"end": 12141,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 12069,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12151,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 12219,
											"end": 12221,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12208,
											"end": 12217,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12195,
											"end": 12201,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12151,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 12151,
											"end": 12223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12151,
											"end": 12223,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 12151,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11788,
											"end": 12230,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11788,
											"end": 12230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11788,
											"end": 12230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11788,
											"end": 12230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11788,
											"end": 12230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11788,
											"end": 12230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11788,
											"end": 12230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12413,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 12236,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12405,
											"name": "PUSH",
											"source": 9,
											"value": "546F6B656E207472616E73666572207768696C65207061757365640000000000"
										},
										{
											"begin": 12372,
											"end": 12373,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12364,
											"end": 12370,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12360,
											"end": 12374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12353,
											"end": 12406,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12419,
											"end": 12785,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 12419,
											"end": 12785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12561,
											"end": 12564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12582,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 12646,
											"end": 12648,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 12641,
											"end": 12644,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 12582,
											"end": 12649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12649,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 12582,
											"end": 12649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12658,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 12747,
											"end": 12750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12658,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 12658,
											"end": 12751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12658,
											"end": 12751,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 12658,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12776,
											"end": 12778,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12771,
											"end": 12774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12767,
											"end": 12779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12419,
											"end": 12785,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12419,
											"end": 12785,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12419,
											"end": 12785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12419,
											"end": 12785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 13210,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 12791,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12957,
											"end": 12961,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12995,
											"end": 12997,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12984,
											"end": 12993,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12972,
											"end": 12998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12972,
											"end": 12998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13044,
											"end": 13053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13038,
											"end": 13042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13054,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13030,
											"end": 13031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13019,
											"end": 13028,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13015,
											"end": 13032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13008,
											"end": 13055,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13072,
											"end": 13203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 13198,
											"end": 13202,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13072,
											"end": 13203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 13072,
											"end": 13203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13072,
											"end": 13203,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 13072,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13064,
											"end": 13203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13064,
											"end": 13203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 13210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 13210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 13210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 13210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13216,
											"end": 13458,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 13216,
											"end": 13458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13356,
											"end": 13390,
											"name": "PUSH",
											"source": 9,
											"value": "45524332304C6F636B61626C653A207472616E7366657220616D6F756E742065"
										},
										{
											"begin": 13352,
											"end": 13353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13344,
											"end": 13350,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13340,
											"end": 13354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13333,
											"end": 13391,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13425,
											"end": 13450,
											"name": "PUSH",
											"source": 9,
											"value": "78636565647320756E6C6F636B65642062616C616E6365000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13412,
											"end": 13418,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13408,
											"end": 13423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13401,
											"end": 13451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13216,
											"end": 13458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13216,
											"end": 13458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13830,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 13464,
											"end": 13830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13606,
											"end": 13609,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13627,
											"end": 13694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 13691,
											"end": 13693,
											"name": "PUSH",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 13686,
											"end": 13689,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13627,
											"end": 13694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 13627,
											"end": 13694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13627,
											"end": 13694,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 13627,
											"end": 13694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13620,
											"end": 13694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13620,
											"end": 13694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13703,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 13792,
											"end": 13795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13703,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 13703,
											"end": 13796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13703,
											"end": 13796,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 13703,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13821,
											"end": 13823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13816,
											"end": 13819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13812,
											"end": 13824,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13805,
											"end": 13824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13805,
											"end": 13824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13836,
											"end": 14255,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 13836,
											"end": 14255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14002,
											"end": 14006,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14040,
											"end": 14042,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14029,
											"end": 14038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14025,
											"end": 14043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14017,
											"end": 14043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14017,
											"end": 14043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14089,
											"end": 14098,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14083,
											"end": 14087,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14099,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14075,
											"end": 14076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14064,
											"end": 14073,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14060,
											"end": 14077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14053,
											"end": 14100,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 14243,
											"end": 14247,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 14117,
											"end": 14248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14248,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 14117,
											"end": 14248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14109,
											"end": 14248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14109,
											"end": 14248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13836,
											"end": 14255,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13836,
											"end": 14255,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13836,
											"end": 14255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13836,
											"end": 14255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14261,
											"end": 14431,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 14261,
											"end": 14431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14401,
											"end": 14423,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 14397,
											"end": 14398,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14389,
											"end": 14395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14385,
											"end": 14399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14378,
											"end": 14424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14261,
											"end": 14431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14261,
											"end": 14431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14437,
											"end": 14803,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 14437,
											"end": 14803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14579,
											"end": 14582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14600,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 14664,
											"end": 14666,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 14659,
											"end": 14662,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14600,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 14600,
											"end": 14667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14600,
											"end": 14667,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 14600,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14667,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14676,
											"end": 14769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 14765,
											"end": 14768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14676,
											"end": 14769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 14676,
											"end": 14769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14676,
											"end": 14769,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 14676,
											"end": 14769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14794,
											"end": 14796,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14789,
											"end": 14792,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 14797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14778,
											"end": 14797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14778,
											"end": 14797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14437,
											"end": 14803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14437,
											"end": 14803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14437,
											"end": 14803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14437,
											"end": 14803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14809,
											"end": 15228,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 14809,
											"end": 15228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14975,
											"end": 14979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15015,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15002,
											"end": 15011,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14998,
											"end": 15016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14990,
											"end": 15016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14990,
											"end": 15016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15062,
											"end": 15071,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15056,
											"end": 15060,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15052,
											"end": 15072,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15048,
											"end": 15049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15037,
											"end": 15046,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15033,
											"end": 15050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15026,
											"end": 15073,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15090,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 15216,
											"end": 15220,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15090,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 15090,
											"end": 15221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15090,
											"end": 15221,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 15090,
											"end": 15221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14809,
											"end": 15228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14809,
											"end": 15228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14809,
											"end": 15228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14809,
											"end": 15228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15234,
											"end": 15400,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 15234,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15374,
											"end": 15392,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 15370,
											"end": 15371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15368,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15358,
											"end": 15372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15351,
											"end": 15393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15234,
											"end": 15400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15234,
											"end": 15400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15406,
											"end": 15772,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 15406,
											"end": 15772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15548,
											"end": 15551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15569,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 15633,
											"end": 15635,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 15628,
											"end": 15631,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15569,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 15569,
											"end": 15636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15569,
											"end": 15636,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 15569,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15562,
											"end": 15636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15562,
											"end": 15636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15645,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 15734,
											"end": 15737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15645,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 15645,
											"end": 15738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15645,
											"end": 15738,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 15645,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15763,
											"end": 15765,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15758,
											"end": 15761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15754,
											"end": 15766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15747,
											"end": 15766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15747,
											"end": 15766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15406,
											"end": 15772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15406,
											"end": 15772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15406,
											"end": 15772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15406,
											"end": 15772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15778,
											"end": 16197,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 15778,
											"end": 16197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15944,
											"end": 15948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15982,
											"end": 15984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15971,
											"end": 15980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15967,
											"end": 15985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15959,
											"end": 15985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15959,
											"end": 15985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16031,
											"end": 16040,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16025,
											"end": 16029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16021,
											"end": 16041,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16006,
											"end": 16015,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15995,
											"end": 16042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16059,
											"end": 16190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 16185,
											"end": 16189,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16059,
											"end": 16190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 16059,
											"end": 16190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16059,
											"end": 16190,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 16059,
											"end": 16190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16051,
											"end": 16190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16051,
											"end": 16190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15778,
											"end": 16197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15778,
											"end": 16197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15778,
											"end": 16197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15778,
											"end": 16197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"constracts/HealthMediToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"freeze(address)": "8d1fdf2f",
							"getLockedAmount(address)": "929ec537",
							"lockup(address,uint256,uint256)": "5e1372f4",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"releaseLock(address)": "d1c46916",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferWithLockUp(address,uint256,uint256)": "38b82092",
							"unfreeze(address)": "45c8b1a6",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AccountFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AccountUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LockReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLockedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"lockup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"releaseLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"name\":\"transferWithLockUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"constracts/HealthMediToken.sol\":\"HMEDERC20Token\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcfdd5500e1ac15adc86c5dcf0e37829068c814d183aa1c87932d6494133eb385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://438f275b6f4a9d3f49bc45161e2e745c583abf321dc70678af6c8e5396bc8fb7\",\"dweb:/ipfs/Qmd1DKp8ndmpcTmzcFD4BhSAj6VbsGisB5Z6ksT7Q3Jpsn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"constracts/HealthMediToken.sol\":{\"keccak256\":\"0x01bae79b207393eef5dc35b83d7ebe8dc97752ceca9d16f12c000665d8540e26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14ce88d2c9a4c2e923babb638b7e1abd0d8f33301b9af50eea93dc397b81e976\",\"dweb:/ipfs/QmcTvjKaDT7UPiPNbD38X4RouktqN45m43NYeU1p1vadQ7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 302,
								"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1118,
								"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
								"label": "frozenAccounts",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1124,
								"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
								"label": "_locks",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_struct(LockInfo)1108_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(LockInfo)1108_storage)dyn_storage": {
								"base": "t_struct(LockInfo)1108_storage",
								"encoding": "dynamic_array",
								"label": "struct HMEDERC20Token.LockInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_struct(LockInfo)1108_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct HMEDERC20Token.LockInfo[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(LockInfo)1108_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(LockInfo)1108_storage": {
								"encoding": "inplace",
								"label": "struct HMEDERC20Token.LockInfo",
								"members": [
									{
										"astId": 1105,
										"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1107,
										"contract": "constracts/HealthMediToken.sol:HMEDERC20Token",
										"label": "releaseTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1087
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1088,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1087,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1087,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1087
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1069,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1087
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1088,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1087,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1087
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1087
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1057
						]
					},
					"id": 908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 986,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 395,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1058,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 397,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1057,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1088,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 399,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1087,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 404,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1087,
										"src": "1428:7:3"
									},
									"id": 405,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 406,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "1437:6:3"
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 408,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1057,
										"src": "1445:14:3"
									},
									"id": 409,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 410,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:3"
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 907,
							"linearizedBaseContracts": [
								907,
								189,
								1057,
								985,
								1087
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 414,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 412,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 413,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 420,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 416,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 419,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 417,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 424,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 435,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 436,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 444,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 907,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1044
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 450,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 449,
												"id": 451,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 907,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1050
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 459,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 458,
												"id": 460,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 907,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1056
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 467,
												"id": 469,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 465,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 907,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 477,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 478,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 907,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 488,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 490,
													"indexExpression": {
														"id": 489,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 487,
												"id": 491,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 907,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										952
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 503,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 502,
												"id": 515,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 907,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 527,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 529,
														"indexExpression": {
															"id": 528,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 531,
													"indexExpression": {
														"id": 530,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 532,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 907,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										972
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 544,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 546,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 798,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 543,
												"id": 556,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 907,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										984
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 570,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 572,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 582,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 569,
												"id": 588,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 907,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5725:240:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 612,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "5942:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "5948:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "5952:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "5934:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "5934:24:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 907,
									"src": "5656:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "6355:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "6369:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6385:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6377:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6377:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6377:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6369:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "6543:362:3",
													"statements": [
														{
															"assignments": [
																659
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 659,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6565:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 684,
																	"src": "6557:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6557:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 663,
															"initialValue": {
																"baseExpression": {
																	"id": 660,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "6579:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 662,
																"indexExpression": {
																	"id": 661,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "6589:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6579:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6557:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 664,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "6612:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6626:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6612:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "6608:115:3",
															"trueBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "6633:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 668,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "6683:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 669,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "6689:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 670,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "6702:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 667,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6658:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6658:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 672,
																		"nodeType": "RevertStatement",
																		"src": "6651:57:3"
																	}
																]
															}
														},
														{
															"id": 683,
															"nodeType": "UncheckedBlock",
															"src": "6736:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 675,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "6843:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 677,
																			"indexExpression": {
																				"id": 676,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 640,
																				"src": "6853:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6843:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 678,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "6861:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 679,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "6875:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6861:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6843:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 682,
																	"nodeType": "ExpressionStatement",
																	"src": "6843:37:3"
																}
															]
														}
													]
												},
												"id": 685,
												"nodeType": "IfStatement",
												"src": "6365:540:3",
												"trueBody": {
													"id": 657,
													"nodeType": "Block",
													"src": "6389:148:3",
													"statements": [
														{
															"expression": {
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 653,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6505:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 654,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6521:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6505:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 656,
															"nodeType": "ExpressionStatement",
															"src": "6505:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 686,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "6919:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6933:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6925:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 687,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6925:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6925:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6919:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "7134:206:3",
													"statements": [
														{
															"id": 704,
															"nodeType": "UncheckedBlock",
															"src": "7148:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 698,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "7293:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 700,
																			"indexExpression": {
																				"id": 699,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "7303:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7293:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "7310:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7293:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 703,
																	"nodeType": "ExpressionStatement",
																	"src": "7293:22:3"
																}
															]
														}
													]
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "6915:425:3",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "6937:191:3",
													"statements": [
														{
															"id": 696,
															"nodeType": "UncheckedBlock",
															"src": "6951:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 692,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "7082:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 693,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "7098:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7082:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 695,
																	"nodeType": "ExpressionStatement",
																	"src": "7082:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 708,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "7364:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7370:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7374:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "7355:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7355:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "EmitStatement",
												"src": "7350:30:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5971:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6289:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6305:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6297:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6297:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6319:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6311:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6311:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6331:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6323:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6323:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6296:41:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6355:0:3"
									},
									"scope": 907,
									"src": "6280:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7786:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 722,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7800:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7819:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7811:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 723,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7811:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7811:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7800:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "7796:91:3",
												"trueBody": {
													"id": 735,
													"nodeType": "Block",
													"src": "7823:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7873:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7865:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 729,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7865:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7865:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 728,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7844:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7844:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 734,
															"nodeType": "RevertStatement",
															"src": "7837:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7912:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7904:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7904:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7904:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "7916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "7925:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "7896:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7896:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7896:35:3"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "7393:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7739:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7753:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7745:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7770:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7762:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7762:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7744:32:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7786:0:3"
									},
									"scope": 907,
									"src": "7730:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8312:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "8326:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8345:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8337:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 756,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8337:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8337:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8326:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "8322:89:3",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "8349:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8397:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8389:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 762,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8389:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8389:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 761,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8370:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8370:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 767,
															"nodeType": "RevertStatement",
															"src": "8363:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "8428:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8445:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8437:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8437:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8437:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "8449:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 770,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "8420:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8420:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8420:35:3"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "7944:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8265:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8279:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8271:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8271:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8296:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8288:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8288:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8270:32:3"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8312:0:3"
									},
									"scope": 907,
									"src": "8256:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "9072:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "9091:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "9098:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "9107:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9114:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 790,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 858,
														"src": "9082:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9082:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "9082:37:3"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8468:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9007:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "9016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9016:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9039:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "9031:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9031:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9056:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "9048:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9015:47:3"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9072:0:3"
									},
									"scope": 907,
									"src": "8998:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "10056:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "10070:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10087:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10079:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10079:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10079:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10070:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "10066:89:3",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "10091:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10141:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10133:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 817,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10133:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10133:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 816,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10112:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10112:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "10105:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "10168:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10187:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10179:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 826,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10179:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10179:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10168:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "10164:90:3",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "10191:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10240:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10232:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 832,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10232:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10232:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 831,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10212:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10212:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 837,
															"nodeType": "RevertStatement",
															"src": "10205:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 840,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "10263:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 843,
															"indexExpression": {
																"id": 841,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "10275:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10263:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 844,
														"indexExpression": {
															"id": 842,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "10282:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10263:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 845,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10293:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10263:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "10263:35:3"
											},
											{
												"condition": {
													"id": 848,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 807,
													"src": "10312:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "10308:76:3",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "10323:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 850,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "10351:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 851,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "10358:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 852,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "10367:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 849,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "10342:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10342:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "EmitStatement",
															"src": "10337:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "9132:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9967:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9984:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9976:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9976:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9999:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9991:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10016:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "10008:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10028:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "10023:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10023:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9975:63:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10056:0:3"
									},
									"scope": 907,
									"src": "9958:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "10761:388:3",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10779:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "10771:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 868,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10771:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"arguments": [
														{
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "10808:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "10815:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 870,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "10798:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10798:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10771:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "10837:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10862:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 877,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10862:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 876,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10857:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10857:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10871:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10857:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10837:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10833:310:3",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10876:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "10894:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "10913:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10894:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 892,
															"nodeType": "IfStatement",
															"src": "10890:130:3",
															"trueBody": {
																"id": 891,
																"nodeType": "Block",
																"src": "10920:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 886,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "10972:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 887,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "10981:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 888,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "10999:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 885,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10945:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10945:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 890,
																		"nodeType": "RevertStatement",
																		"src": "10938:67:3"
																	}
																]
															}
														},
														{
															"id": 902,
															"nodeType": "UncheckedBlock",
															"src": "11033:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 894,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "11070:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 895,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "11077:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 896,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "11086:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 897,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "11105:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11086:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11112:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 893,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				798,
																				858
																			],
																			"referencedDeclaration": 858,
																			"src": "11061:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11061:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "11061:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "10396:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10681:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10705:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10697:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10697:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10720:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10712:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10737:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10729:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10729:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10696:47:3"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10761:0:3"
									},
									"scope": 907,
									"src": "10672:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "1401:9750:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "105:11047:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 910,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 919,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 928,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 985,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 985,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 985,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 985,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 985,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 985,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 986,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1087
						],
						"ERC20": [
							907
						],
						"ERC20Burnable": [
							1031
						]
					},
					"id": 1032,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 908,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 988,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 907,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 991,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1088,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 990,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1087,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 993,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1087,
										"src": "483:7:5"
									},
									"id": 994,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 995,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 907,
										"src": "492:5:5"
									},
									"id": 996,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 992,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1031,
							"linearizedBaseContracts": [
								1031,
								907,
								189,
								1057,
								985,
								1087
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1003,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1002,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 1031,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1018,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1019,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1021,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1025,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1026,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1024,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 1031,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1032,
							"src": "448:733:5",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						],
						"IERC20Metadata": [
							1057
						]
					},
					"id": 1058,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1033,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1035,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 986,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1034,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1037,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "305:6:6"
									},
									"id": 1038,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1036,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1057,
							"linearizedBaseContracts": [
								1057,
								985
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1041,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1057,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1047,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1057,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1053,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1057,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1058,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1087
						]
					},
					"id": 1088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1059,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1060,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1087,
							"linearizedBaseContracts": [
								1087
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1065,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1067,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1087,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1074,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1073,
												"id": 1076,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1087,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1082,
												"id": 1084,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1087,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1088,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"constracts/HealthMediToken.sol": {
				"ast": {
					"absolutePath": "constracts/HealthMediToken.sol",
					"exportedSymbols": {
						"Context": [
							1087
						],
						"ERC20": [
							907
						],
						"ERC20Burnable": [
							1031
						],
						"HMEDERC20Token": [
							1535
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1057
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						]
					},
					"id": 1536,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1089,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 908,
							"src": "65:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1091,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 1032,
							"src": "121:74:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 393,
							"src": "196:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1093,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 148,
							"src": "252:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1094,
										"name": "ERC20",
										"nameLocations": [
											"333:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 907,
										"src": "333:5:8"
									},
									"id": 1095,
									"nodeType": "InheritanceSpecifier",
									"src": "333:5:8"
								},
								{
									"baseName": {
										"id": 1096,
										"name": "ERC20Burnable",
										"nameLocations": [
											"340:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1031,
										"src": "340:13:8"
									},
									"id": 1097,
									"nodeType": "InheritanceSpecifier",
									"src": "340:13:8"
								},
								{
									"baseName": {
										"id": 1098,
										"name": "Pausable",
										"nameLocations": [
											"355:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "355:8:8"
									},
									"id": 1099,
									"nodeType": "InheritanceSpecifier",
									"src": "355:8:8"
								},
								{
									"arguments": [
										{
											"expression": {
												"id": 1101,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "373:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 1102,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "377:6:8",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "373:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1100,
										"name": "Ownable",
										"nameLocations": [
											"365:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "365:7:8"
									},
									"id": 1103,
									"nodeType": "InheritanceSpecifier",
									"src": "365:19:8"
								}
							],
							"canonicalName": "HMEDERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1535,
							"linearizedBaseContracts": [
								1535,
								147,
								392,
								1031,
								907,
								189,
								1057,
								985,
								1087
							],
							"name": "HMEDERC20Token",
							"nameLocation": "315:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "HMEDERC20Token.LockInfo",
									"id": 1108,
									"members": [
										{
											"constant": false,
											"id": 1105,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "425:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1108,
											"src": "417:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1104,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "417:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1107,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "449:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1108,
											"src": "441:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1106,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "441:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LockInfo",
									"nameLocation": "398:8:8",
									"nodeType": "StructDefinition",
									"scope": 1535,
									"src": "391:76:8",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1111,
									"mutability": "constant",
									"name": "_decimals",
									"nameLocation": "496:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "473:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1109,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "473:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 1110,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "508:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1114,
									"mutability": "constant",
									"name": "_initial_supply",
									"nameLocation": "541:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "516:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "516:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f3030305f3030305f303030",
										"id": 1113,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "559:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										},
										"value": "10_000_000_000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1118,
									"mutability": "mutable",
									"name": "frozenAccounts",
									"nameLocation": "613:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "580:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1117,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1115,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "588:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "580:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1116,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "599:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1124,
									"mutability": "mutable",
									"name": "_locks",
									"nameLocation": "672:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "633:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct HMEDERC20Token.LockInfo[])"
									},
									"typeName": {
										"id": 1123,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1119,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "641:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "633:30:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct HMEDERC20Token.LockInfo[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1121,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1120,
													"name": "LockInfo",
													"nameLocations": [
														"652:8:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1108,
													"src": "652:8:8"
												},
												"referencedDeclaration": 1108,
												"src": "652:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LockInfo_$1108_storage_ptr",
													"typeString": "struct HMEDERC20Token.LockInfo"
												}
											},
											"id": 1122,
											"nodeType": "ArrayTypeName",
											"src": "652:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_ptr",
												"typeString": "struct HMEDERC20Token.LockInfo[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "4f2a367e694e71282f29ab5eaa04c4c0be45ac5bf2ca74fb67068b98bdc2887d",
									"id": 1128,
									"name": "AccountFrozen",
									"nameLocation": "691:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "721:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "705:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:25:8"
									},
									"src": "685:45:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f915cd9fe234de6e8d3afe7bf2388d35b2b6d48e8c629a24602019bde79c213a",
									"id": 1132,
									"name": "AccountUnfrozen",
									"nameLocation": "741:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "773:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "757:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:25:8"
									},
									"src": "735:47:8"
								},
								{
									"anonymous": false,
									"eventSelector": "622ca42598ab680a7def4a7346e1963a82207cf42a5ddb8056ad62cfbda19b88",
									"id": 1138,
									"name": "LockReleased",
									"nameLocation": "876:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "905:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "889:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "922:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "914:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:41:8"
									},
									"src": "870:60:8"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "1042:78:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1150,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1058:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1062:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1058:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1152,
																"name": "_initial_supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "1070:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1089:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1156,
																					"name": "_decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1111,
																					"src": "1101:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 1155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1093:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1154,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1093:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1093:18:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1089:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1159,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1088:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1070:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1149,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1052:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1052:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "1052:61:8"
											}
										]
									},
									"id": 1164,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1145,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1140,
													"src": "1026:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1146,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1142,
													"src": "1033:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1147,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1144,
												"name": "ERC20",
												"nameLocations": [
													"1020:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "1020:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1020:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "990:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "976:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1139,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1011:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "997:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "997:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:44:8"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:0:8"
									},
									"scope": 1535,
									"src": "964:156:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										714
									],
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "1203:456:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1174,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "1307:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1323:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1315:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1315:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1315:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1307:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1180,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "1329:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1343:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1335:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1181,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1335:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1335:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1329:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1307:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1209,
												"nodeType": "IfStatement",
												"src": "1304:299:8",
												"trueBody": {
													"id": 1208,
													"nodeType": "Block",
													"src": "1347:256:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "1369:9:8",
																			"subExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1188,
																					"name": "paused",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 336,
																					"src": "1370:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																						"typeString": "function () view returns (bool)"
																					}
																				},
																				"id": 1189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1370:8:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1191,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1382:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1386:6:8",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1382:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1193,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 67,
																					"src": "1396:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1396:7:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "1382:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1369:34:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572207768696c6520706175736564",
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1405:29:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65",
																			"typeString": "literal_string \"Token transfer while paused\""
																		},
																		"value": "Token transfer while paused"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65",
																			"typeString": "literal_string \"Token transfer while paused\""
																		}
																	],
																	"id": 1187,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1361:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1361:74:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1199,
															"nodeType": "ExpressionStatement",
															"src": "1361:74:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1202,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1166,
																				"src": "1519:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1203,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "1525:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1201,
																			"name": "_checkLock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "1508:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) view returns (bool)"
																			}
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1508:24:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332304c6f636b61626c653a207472616e7366657220616d6f756e74206578636565647320756e6c6f636b65642062616c616e6365",
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1534:57:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d",
																			"typeString": "literal_string \"ERC20Lockable: transfer amount exceeds unlocked balance\""
																		},
																		"value": "ERC20Lockable: transfer amount exceeds unlocked balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_efa2ddf607dbeb791d3611a326effdb0fc4bd46f8b3d37e8b9c9c2b754a8fc8d",
																			"typeString": "literal_string \"ERC20Lockable: transfer amount exceeds unlocked balance\""
																		}
																	],
																	"id": 1200,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1500:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1500:92:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1207,
															"nodeType": "ExpressionStatement",
															"src": "1500:92:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "1635:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "1641:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "1645:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1210,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1621:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_HMEDERC20Token_$1535_$",
																"typeString": "type(contract super HMEDERC20Token)"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1627:7:8",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 714,
														"src": "1621:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1621:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1621:31:8"
											}
										]
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1135:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1194:8:8"
									},
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1151:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1143:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1165:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1157:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1177:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1169:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1142:42:8"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1203:0:8"
									},
									"scope": 1535,
									"src": "1126:533:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "1715:156:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1733:24:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1227,
																	"name": "frozenAccounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "1734:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1229,
																"indexExpression": {
																	"id": 1228,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "1749:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1734:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c72656164792066726f7a656e",
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1759:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
																"typeString": "literal_string \"Account is already frozen\""
															},
															"value": "Account is already frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e19332d916fd3b577f5b756367f58c9f056964253f818fe4d0aebdb0c9ef570d",
																"typeString": "literal_string \"Account is already frozen\""
															}
														],
														"id": 1226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1725:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "1725:62:8"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1234,
															"name": "frozenAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "1797:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1236,
														"indexExpression": {
															"id": 1235,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "1812:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1797:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1823:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1797:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "1797:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1241,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "1856:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1240,
														"name": "AccountFrozen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "1842:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1842:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "EmitStatement",
												"src": "1837:27:8"
											}
										]
									},
									"functionSelector": "8d1fdf2f",
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1224,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1223,
												"name": "onlyOwner",
												"nameLocations": [
													"1705:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1705:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:9:8"
										}
									],
									"name": "freeze",
									"nameLocation": "1674:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1689:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "1681:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:17:8"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1715:0:8"
									},
									"scope": 1535,
									"src": "1665:206:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "1929:154:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1253,
																"name": "frozenAccounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "1947:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1255,
															"indexExpression": {
																"id": 1254,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "1962:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1947:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74206973206e6f742066726f7a656e",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1972:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
																"typeString": "literal_string \"Account is not frozen\""
															},
															"value": "Account is not frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9438171d16c8c4d7e5baf07696e391fafd6c0da9c3c31cd981b0b42775d4ef21",
																"typeString": "literal_string \"Account is not frozen\""
															}
														],
														"id": 1252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1939:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1939:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "1939:57:8"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1259,
															"name": "frozenAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "2006:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1261,
														"indexExpression": {
															"id": 1260,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "2021:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2006:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2032:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2006:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "2006:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1266,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "2068:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1265,
														"name": "AccountUnfrozen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "2052:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2052:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "EmitStatement",
												"src": "2047:29:8"
											}
										]
									},
									"functionSelector": "45c8b1a6",
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1250,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1249,
												"name": "onlyOwner",
												"nameLocations": [
													"1919:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1919:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1919:9:8"
										}
									],
									"name": "unfreeze",
									"nameLocation": "1886:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1903:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "1895:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1894:17:8"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:8"
									},
									"scope": 1535,
									"src": "1877:206:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "2176:139:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1283,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "2204:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1282,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "2194:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2194:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1285,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "2216:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2194:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2224:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2186:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "2186:61:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1295,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "2287:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1296,
																	"name": "releaseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "2295:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1294,
																"name": "LockInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2278:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_LockInfo_$1108_storage_ptr_$",
																	"typeString": "type(struct HMEDERC20Token.LockInfo storage pointer)"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2278:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LockInfo_$1108_memory_ptr",
																"typeString": "struct HMEDERC20Token.LockInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_LockInfo_$1108_memory_ptr",
																"typeString": "struct HMEDERC20Token.LockInfo memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1290,
																"name": "_locks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "2257:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																}
															},
															"id": 1292,
															"indexExpression": {
																"id": 1291,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "2264:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2257:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2273:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2257:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_ptr_$_t_struct$_LockInfo_$1108_storage_$returns$__$attached_to$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct HMEDERC20Token.LockInfo storage ref[] storage pointer,struct HMEDERC20Token.LockInfo storage ref)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "2257:51:8"
											}
										]
									},
									"functionSelector": "5e1372f4",
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1279,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1278,
												"name": "onlyOwner",
												"nameLocations": [
													"2166:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2166:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2166:9:8"
										}
									],
									"name": "lockup",
									"nameLocation": "2098:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2113:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2105:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2130:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2122:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2146:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2138:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:54:8"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2176:0:8"
									},
									"scope": 1535,
									"src": "2089:226:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "2366:510:8",
										"statements": [
											{
												"assignments": [
													1307
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "releasableAmount",
														"nameLocation": "2384:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1381,
														"src": "2376:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2376:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1309,
												"initialValue": {
													"hexValue": "30",
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2403:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2376:28:8"
											},
											{
												"body": {
													"id": 1369,
													"nodeType": "Block",
													"src": "2467:299:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1323,
																				"name": "_locks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1124,
																				"src": "2485:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																					"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																				}
																			},
																			"id": 1325,
																			"indexExpression": {
																				"id": 1324,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1303,
																				"src": "2492:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2485:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																				"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
																			}
																		},
																		"id": 1327,
																		"indexExpression": {
																			"id": 1326,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "2501:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2485:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LockInfo_$1108_storage",
																			"typeString": "struct HMEDERC20Token.LockInfo storage ref"
																		}
																	},
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2504:11:8",
																	"memberName": "releaseTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1107,
																	"src": "2485:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1329,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2519:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2525:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2519:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2485:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1368,
															"nodeType": "IfStatement",
															"src": "2481:275:8",
															"trueBody": {
																"id": 1367,
																"nodeType": "Block",
																"src": "2536:220:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1332,
																				"name": "releasableAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1307,
																				"src": "2554:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1333,
																							"name": "_locks",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "2574:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																								"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																							}
																						},
																						"id": 1335,
																						"indexExpression": {
																							"id": 1334,
																							"name": "account",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1303,
																							"src": "2581:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2574:15:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																							"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
																						}
																					},
																					"id": 1337,
																					"indexExpression": {
																						"id": 1336,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1311,
																						"src": "2590:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2574:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LockInfo_$1108_storage",
																						"typeString": "struct HMEDERC20Token.LockInfo storage ref"
																					}
																				},
																				"id": 1338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2593:6:8",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1105,
																				"src": "2574:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2554:45:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1340,
																		"nodeType": "ExpressionStatement",
																		"src": "2554:45:8"
																	},
																	{
																		"expression": {
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1341,
																						"name": "_locks",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1124,
																						"src": "2617:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																							"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																						}
																					},
																					"id": 1344,
																					"indexExpression": {
																						"id": 1342,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1303,
																						"src": "2624:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2617:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																						"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1345,
																				"indexExpression": {
																					"id": 1343,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1311,
																					"src": "2633:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2617:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_LockInfo_$1108_storage",
																					"typeString": "struct HMEDERC20Token.LockInfo storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1346,
																						"name": "_locks",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1124,
																						"src": "2638:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																							"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																						}
																					},
																					"id": 1348,
																					"indexExpression": {
																						"id": 1347,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1303,
																						"src": "2645:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2638:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																						"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1355,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1354,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 1349,
																								"name": "_locks",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1124,
																								"src": "2654:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																									"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																								}
																							},
																							"id": 1351,
																							"indexExpression": {
																								"id": 1350,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1303,
																								"src": "2661:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2654:15:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																								"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
																							}
																						},
																						"id": 1352,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2670:6:8",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "2654:22:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1353,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2679:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "2654:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2638:43:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_LockInfo_$1108_storage",
																					"typeString": "struct HMEDERC20Token.LockInfo storage ref"
																				}
																			},
																			"src": "2617:64:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_LockInfo_$1108_storage",
																				"typeString": "struct HMEDERC20Token.LockInfo storage ref"
																			}
																		},
																		"id": 1357,
																		"nodeType": "ExpressionStatement",
																		"src": "2617:64:8"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"baseExpression": {
																						"id": 1358,
																						"name": "_locks",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1124,
																						"src": "2699:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																							"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																						}
																					},
																					"id": 1360,
																					"indexExpression": {
																						"id": 1359,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1303,
																						"src": "2706:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2699:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																						"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2715:3:8",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "2699:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_ptr_$",
																					"typeString": "function (struct HMEDERC20Token.LockInfo storage ref[] storage pointer)"
																				}
																			},
																			"id": 1362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2699:21:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1363,
																		"nodeType": "ExpressionStatement",
																		"src": "2699:21:8"
																	},
																	{
																		"expression": {
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "2738:3:8",
																			"subExpression": {
																				"id": 1364,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1311,
																				"src": "2738:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1366,
																		"nodeType": "ExpressionStatement",
																		"src": "2738:3:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1314,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "2434:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1315,
																"name": "_locks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "2438:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																}
															},
															"id": 1317,
															"indexExpression": {
																"id": 1316,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "2445:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2438:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2454:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2438:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2434:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1370,
												"initializationExpression": {
													"assignments": [
														1311
													],
													"declarations": [
														{
															"constant": false,
															"id": 1311,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2427:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1370,
															"src": "2419:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1310,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2419:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1313,
													"initialValue": {
														"hexValue": "30",
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2431:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2419:13:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2462:3:8",
														"subExpression": {
															"id": 1320,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "2462:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1322,
													"nodeType": "ExpressionStatement",
													"src": "2462:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2414:352:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1371,
														"name": "releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "2779:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2798:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2779:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1380,
												"nodeType": "IfStatement",
												"src": "2775:95:8",
												"trueBody": {
													"id": 1379,
													"nodeType": "Block",
													"src": "2801:69:8",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1375,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "2833:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1376,
																		"name": "releasableAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "2842:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1374,
																	"name": "LockReleased",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "2820:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2820:39:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1378,
															"nodeType": "EmitStatement",
															"src": "2815:44:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d1c46916",
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releaseLock",
									"nameLocation": "2330:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2350:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "2342:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:17:8"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:0:8"
									},
									"scope": 1535,
									"src": "2321:555:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "2980:120:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1394,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3000:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3004:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3000:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "3012:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "3023:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1393,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "2990:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2990:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "2990:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1401,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "3047:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1402,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "3058:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1403,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3066:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3072:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3066:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1405,
																"name": "lockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3084:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3066:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1400,
														"name": "lockup",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "3040:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3040:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "3040:53:8"
											}
										]
									},
									"functionSelector": "38b82092",
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1390,
												"name": "onlyOwner",
												"nameLocations": [
													"2970:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2970:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2970:9:8"
										}
									],
									"name": "transferWithLockUp",
									"nameLocation": "2891:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2918:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2910:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2910:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2937:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2929:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2929:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "lockTime",
												"nameLocation": "2953:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2945:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2945:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2909:53:8"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2980:0:8"
									},
									"scope": 1535,
									"src": "2882:218:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "3140:25:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1415,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3150:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3150:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "3150:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1413,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1412,
												"name": "onlyOwner",
												"nameLocations": [
													"3130:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3130:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3130:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "3115:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3120:2:8"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3140:0:8"
									},
									"scope": 1535,
									"src": "3106:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "3207:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1424,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "3217:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3217:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "3217:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1422,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1421,
												"name": "onlyOwner",
												"nameLocations": [
													"3197:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3197:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3197:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "3180:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3187:2:8"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3207:0:8"
									},
									"scope": 1535,
									"src": "3171:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "3318:490:8",
										"statements": [
											{
												"assignments": [
													1438
												],
												"declarations": [
													{
														"constant": false,
														"id": 1438,
														"mutability": "mutable",
														"name": "lockedAmount",
														"nameLocation": "3336:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "3328:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3328:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1440,
												"initialValue": {
													"hexValue": "30",
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3351:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3328:24:8"
											},
											{
												"body": {
													"id": 1474,
													"nodeType": "Block",
													"src": "3501:146:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1454,
																				"name": "_locks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1124,
																				"src": "3519:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																					"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																				}
																			},
																			"id": 1456,
																			"indexExpression": {
																				"id": 1455,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1430,
																				"src": "3526:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3519:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																				"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
																			}
																		},
																		"id": 1458,
																		"indexExpression": {
																			"id": 1457,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "3532:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3519:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LockInfo_$1108_storage",
																			"typeString": "struct HMEDERC20Token.LockInfo storage ref"
																		}
																	},
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3535:11:8",
																	"memberName": "releaseTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1107,
																	"src": "3519:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1460,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3549:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3555:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3549:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3519:45:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1473,
															"nodeType": "IfStatement",
															"src": "3515:122:8",
															"trueBody": {
																"id": 1472,
																"nodeType": "Block",
																"src": "3566:71:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1463,
																				"name": "lockedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1438,
																				"src": "3584:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1464,
																							"name": "_locks",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "3600:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																								"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																							}
																						},
																						"id": 1466,
																						"indexExpression": {
																							"id": 1465,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1430,
																							"src": "3607:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3600:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																							"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
																						}
																					},
																					"id": 1468,
																					"indexExpression": {
																						"id": 1467,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1442,
																						"src": "3613:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3600:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LockInfo_$1108_storage",
																						"typeString": "struct HMEDERC20Token.LockInfo storage ref"
																					}
																				},
																				"id": 1469,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3616:6:8",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1105,
																				"src": "3600:22:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3584:38:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1471,
																		"nodeType": "ExpressionStatement",
																		"src": "3584:38:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1445,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "3471:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1446,
																"name": "_locks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "3475:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																}
															},
															"id": 1448,
															"indexExpression": {
																"id": 1447,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "3482:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3475:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
															}
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3488:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3475:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3471:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1475,
												"initializationExpression": {
													"assignments": [
														1442
													],
													"declarations": [
														{
															"constant": false,
															"id": 1442,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3464:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1475,
															"src": "3456:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1441,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3456:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1444,
													"initialValue": {
														"hexValue": "30",
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3468:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3456:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3496:3:8",
														"subExpression": {
															"id": 1451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "3496:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1453,
													"nodeType": "ExpressionStatement",
													"src": "3496:3:8"
												},
												"nodeType": "ForStatement",
												"src": "3451:196:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1477,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "3771:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1476,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "3761:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3761:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1479,
															"name": "lockedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "3779:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3761:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1481,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "3795:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3761:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1483,
												"nodeType": "Return",
												"src": "3754:47:8"
											}
										]
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkLock",
									"nameLocation": "3249:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3268:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3260:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3260:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3282:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3274:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3259:30:8"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3312:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3312:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:6:8"
									},
									"scope": 1535,
									"src": "3240:568:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "3886:284:8",
										"statements": [
											{
												"assignments": [
													1493
												],
												"declarations": [
													{
														"constant": false,
														"id": 1493,
														"mutability": "mutable",
														"name": "lockedAmount",
														"nameLocation": "3904:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1533,
														"src": "3896:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1492,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3896:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"hexValue": "30",
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3919:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3896:24:8"
											},
											{
												"body": {
													"id": 1529,
													"nodeType": "Block",
													"src": "3983:152:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1509,
																				"name": "_locks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1124,
																				"src": "4001:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																					"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																				}
																			},
																			"id": 1511,
																			"indexExpression": {
																				"id": 1510,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "4008:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4001:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																				"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
																			}
																		},
																		"id": 1513,
																		"indexExpression": {
																			"id": 1512,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "4017:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4001:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LockInfo_$1108_storage",
																			"typeString": "struct HMEDERC20Token.LockInfo storage ref"
																		}
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4020:11:8",
																	"memberName": "releaseTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1107,
																	"src": "4001:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1515,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4034:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4040:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4034:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4001:48:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1528,
															"nodeType": "IfStatement",
															"src": "3997:128:8",
															"trueBody": {
																"id": 1527,
																"nodeType": "Block",
																"src": "4051:74:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1518,
																				"name": "lockedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "4069:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1519,
																							"name": "_locks",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "4085:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																								"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																							}
																						},
																						"id": 1521,
																						"indexExpression": {
																							"id": 1520,
																							"name": "account",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1487,
																							"src": "4092:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4085:15:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																							"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
																						}
																					},
																					"id": 1523,
																					"indexExpression": {
																						"id": 1522,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1497,
																						"src": "4101:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4085:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LockInfo_$1108_storage",
																						"typeString": "struct HMEDERC20Token.LockInfo storage ref"
																					}
																				},
																				"id": 1524,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4104:6:8",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1105,
																				"src": "4085:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4069:41:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1526,
																		"nodeType": "ExpressionStatement",
																		"src": "4069:41:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1500,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "3950:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1501,
																"name": "_locks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "3954:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct HMEDERC20Token.LockInfo storage ref[] storage ref)"
																}
															},
															"id": 1503,
															"indexExpression": {
																"id": 1502,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "3961:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3954:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LockInfo_$1108_storage_$dyn_storage",
																"typeString": "struct HMEDERC20Token.LockInfo storage ref[] storage ref"
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3970:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3954:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3950:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1530,
												"initializationExpression": {
													"assignments": [
														1497
													],
													"declarations": [
														{
															"constant": false,
															"id": 1497,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3943:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1530,
															"src": "3935:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1496,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3935:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1499,
													"initialValue": {
														"hexValue": "30",
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3947:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3935:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3978:3:8",
														"subExpression": {
															"id": 1506,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "3978:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1508,
													"nodeType": "ExpressionStatement",
													"src": "3978:3:8"
												},
												"nodeType": "ForStatement",
												"src": "3930:205:8"
											},
											{
												"expression": {
													"id": 1531,
													"name": "lockedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1493,
													"src": "4151:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1532,
												"nodeType": "Return",
												"src": "4144:19:8"
											}
										]
									},
									"functionSelector": "929ec537",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLockedAmount",
									"nameLocation": "3823:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3847:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "3839:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3838:17:8"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "3877:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3876:9:8"
									},
									"scope": 1535,
									"src": "3814:356:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1536,
							"src": "306:3866:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								295,
								300,
								919,
								928,
								1128,
								1132,
								1138
							]
						}
					],
					"src": "32:4140:8"
				},
				"id": 8
			}
		}
	}
}